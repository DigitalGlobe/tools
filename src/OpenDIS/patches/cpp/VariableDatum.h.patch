--- VariableDatum.h	2012-07-10 10:28:18.000000000 -0700
+++ VariableDatum.h.fixed	2012-07-10 10:24:42.000000000 -0700
@@ -1,87 +1,87 @@
-#ifndef VARIABLEDATUM_H
-#define VARIABLEDATUM_H
-
-#include <DIS/EightByteChunk.h>
-#include <vector>
-#include <DIS/DataStream.h>
-#include <DIS/msLibMacro.h>
-
-
-namespace DIS
-{
-// Section 5.2.32. Variable Datum Record
-
-// Copyright (c) 2007-2012, MOVES Institute, Naval Postgraduate School. All rights reserved. 
-// Licensed under the BSD open source license. See http://www.movesinstitute.org/licenses/bsd.html
-//
-// @author DMcG, jkg
-
-#pragma warning(disable: 4251 ) // Disables warning for stl vector template DLL export in msvc
-
-class EXPORT_MACRO VariableDatum
-{
-protected:
-  /** ID of the variable datum */
-  unsigned int _variableDatumID; 
-
-  /** length of the variable datums */
-  unsigned int _variableDatumLength; 
-
-  /** variable length list of 64-bit datums */
-  std::vector<EightByteChunk> _variableDatums; 
-
-
- public:
-    VariableDatum();
-    virtual ~VariableDatum();
-
-    virtual void marshal(DataStream& dataStream) const;
-    virtual void unmarshal(DataStream& dataStream);
-
-    unsigned int getVariableDatumID() const; 
-    void setVariableDatumID(unsigned int pX); 
-
-    unsigned int getVariableDatumLength() const; 
-
-    std::vector<EightByteChunk>& getVariableDatums(); 
-    const std::vector<EightByteChunk>& getVariableDatums() const; 
-    void setVariableDatums(const std::vector<EightByteChunk>&    pX);
-
-
-virtual int getMarshalledSize() const;
-
-     bool operator  ==(const VariableDatum& rhs) const;
-};
-}
-
-#endif
-// Copyright (c) 1995-2009 held by the author(s).  All rights reserved.
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions
-//  are met:
-// 
-//  * Redistributions of source code must retain the above copyright
-// notice, this list of conditions and the following disclaimer.
-// * Redistributions in binary form must reproduce the above copyright
-// notice, this list of conditions and the following disclaimer
-// in the documentation and/or other materials provided with the
-// distribution.
-// * Neither the names of the Naval Postgraduate School (NPS)
-//  Modeling Virtual Environments and Simulation (MOVES) Institute
-// (http://www.nps.edu and http://www.MovesInstitute.org)
-// nor the names of its contributors may be used to endorse or
-//  promote products derived from this software without specific
-// prior written permission.
-// 
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-// AS IS AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-// COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
-// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
-// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-// POSSIBILITY OF SUCH DAMAGE.
+#ifndef VARIABLEDATUM_H
+#define VARIABLEDATUM_H
+
+#include <DIS/DataStream.h>
+#include <DIS/msLibMacro.h>
+
+// length in bytes for the variable data. This should be a dynamically allocated array.
+#define STATIC_ARRAY_LENGTH 128
+
+namespace DIS
+{
+// Section 5.2.32. Variable Datum Record
+
+// Copyright (c) 2007-2009, MOVES Institute, Naval Postgraduate School. All rights reserved. 
+//
+// @author DMcG, jkg
+
+class EXPORT_MACRO VariableDatum
+{
+protected:
+  /** ID of the variable datum */
+  unsigned int _variableDatumID; 
+
+  /** length of the variable datums */
+  unsigned int _variableDatumLength; 
+
+  /** The data. This should be dynamic, but I'm having memory management problems. 8 longs should
+   * be enough for almost all data. Only the actual data plus padding is written.*/
+  char _variableDatums[STATIC_ARRAY_LENGTH];
+  int _arrayLength;
+
+
+ public:
+    VariableDatum();
+    virtual ~VariableDatum();
+
+    virtual void marshal(DataStream& dataStream) const;
+    virtual void unmarshal(DataStream& dataStream);
+
+    unsigned int getVariableDatumID() const; 
+    void setVariableDatumID(unsigned int pX); 
+
+    unsigned int getVariableDatumLength() const; 
+    void setVariableDatumLength(unsigned int pX); 
+
+    char*  getVariableDatums(); 
+    const char*  getVariableDatums() const; 
+    void setVariableDatums( const char*    pX, int length);
+
+
+virtual int getMarshalledSize() const;
+
+     bool operator  ==(const VariableDatum& rhs) const;
+};
+}
+
+#endif
+// Copyright (c) 1995-2009 held by the author(s).  All rights reserved.
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions
+//  are met:
+// 
+//  * Redistributions of source code must retain the above copyright
+// notice, this list of conditions and the following disclaimer.
+// * Redistributions in binary form must reproduce the above copyright
+// notice, this list of conditions and the following disclaimer
+// in the documentation and/or other materials provided with the
+// distribution.
+// * Neither the names of the Naval Postgraduate School (NPS)
+//  Modeling Virtual Environments and Simulation (MOVES) Institute
+// (http://www.nps.edu and http://www.MovesInstitute.org)
+// nor the names of its contributors may be used to endorse or
+//  promote products derived from this software without specific
+// prior written permission.
+// 
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+// AS IS AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+// COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+// POSSIBILITY OF SUCH DAMAGE.
