/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.39
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* Compatibility marcos for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  int len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *self, PyObject *func)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyInstanceMethod_New(func);
#else
  return NULL;
#endif
}

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = SwigPyObject_hex(v);    
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", name, hex);
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
#else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
#endif
#if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
#else
    PyString_ConcatAndDel(&repr,nrep);
#endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_print(SwigPyObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char *str;
#ifdef METH_NOARGS
  PyObject *repr = SwigPyObject_repr(v);
#else
  PyObject *repr = SwigPyObject_repr(v, NULL);
#endif
  if (repr) {
    str = SWIG_Python_str_AsChar(repr); 
    fputs(str, fp);
    SWIG_Python_str_DelForPy3(str);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
SwigPyObject_str(SwigPyObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    SWIG_Python_str_FromChar(result) : 0;
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, whould it also useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  if( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) )
    res = Py_True;
  else
    res = Py_False;
  Py_INCREF(res);
  return res;  
}


SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	/* PyOjbect header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
	PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else    
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
#endif
	(char *)"SwigPyObject",		    /* tp_name */
	sizeof(SwigPyObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)SwigPyObject_dealloc,   /* tp_dealloc */
	(printfunc)SwigPyObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)SwigPyObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1 */
#else
	(cmpfunc)SwigPyObject_compare,	    /* tp_compare */
#endif
	(reprfunc)SwigPyObject_repr,	    /* tp_repr */    
	&SwigPyObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)SwigPyObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	(richcmpfunc)SwigPyObject_richcompare,           /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
	0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    swigpyobject_type = tmp;
    /* for Python 3 we already assigned the ob_type in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
    swigpyobject_type.ob_type = &PyType_Type;
#endif
    type_init = 1;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
    /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
    PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else
	PyObject_HEAD_INIT(NULL)
    0,				    /* ob_size */	
#endif
	(char *)"SwigPyPacked",		    /* tp_name */	
	sizeof(SwigPyPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)SwigPyPacked_dealloc,   /* tp_dealloc */	
	(printfunc)SwigPyPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
#if PY_VERSION_HEX>=0x03000000
    0, /* tp_reserved in 3.0.1 */
#else
    (cmpfunc)SwigPyPacked_compare,	    /* tp_compare */
#endif
	(reprfunc)SwigPyPacked_repr,	    /* tp_repr */
	0,	                            /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)SwigPyPacked_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    swigpypacked_type = tmp;
    /* for Python 3 the ob_type already assigned in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
    swigpypacked_type.ob_type = &PyType_Type;
#endif
    type_init = 1;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (SwigPyObject_Check(pyobj)) {
    return (SwigPyObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !SwigPyObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 SwigPyObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (SwigPyObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (own)
      *own = 0;
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (SwigPyObject *)sobj->next;
	  } else {
	    if (ptr) {
              int newmemory = 0;
              *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
              if (newmemory == SWIG_CAST_NEW_MEMORY) {
                assert(own);
                if (own)
                  *own = *own | SWIG_CAST_NEW_MEMORY;
              }
            }
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = PyBaseObject_Type.tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    PyObject_SetAttr(inst, SWIG_This(), swig_this);
    Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
#else
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = SwigPyObject_New(ptr, type, own);
    SwigPyClientData *clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__Referent_t swig_types[0]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__XmlElement_t swig_types[1]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t swig_types[2]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLink_t swig_types[3]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t swig_types[4]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t swig_types[5]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t swig_types[6]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomCategory_t swig_types[7]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomContent_t swig_types[8]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomEntry_t swig_types[9]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomFeed_t swig_types[10]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t swig_types[11]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t swig_types[12]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t swig_types[13]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t swig_types[14]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t swig_types[15]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t swig_types[16]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t swig_types[17]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t swig_types[18]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t swig_types[19]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t swig_types[20]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t swig_types[21]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t swig_types[22]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t swig_types[23]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t swig_types[24]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t swig_types[25]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Field_t swig_types[26]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Folder_t swig_types[27]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t swig_types[28]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t swig_types[29]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t swig_types[30]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t swig_types[31]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t swig_types[32]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t swig_types[33]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t swig_types[34]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t swig_types[35]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t swig_types[36]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t swig_types[37]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t swig_types[38]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t swig_types[39]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t swig_types[40]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__HotSpot_t swig_types[41]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t swig_types[42]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t swig_types[43]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t swig_types[44]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t swig_types[45]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t swig_types[46]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t swig_types[47]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t swig_types[48]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t swig_types[49]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t swig_types[50]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t swig_types[51]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t swig_types[52]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t swig_types[53]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t swig_types[54]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t swig_types[55]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t swig_types[56]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t swig_types[57]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t swig_types[58]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t swig_types[59]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t swig_types[60]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Metadata_t swig_types[61]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t swig_types[62]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t swig_types[63]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t swig_types[64]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t swig_types[65]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t swig_types[66]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t swig_types[67]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t swig_types[68]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OverlayXY_t swig_types[69]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t swig_types[70]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t swig_types[71]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t swig_types[72]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t swig_types[73]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t swig_types[74]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t swig_types[75]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t swig_types[76]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t swig_types[77]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t swig_types[78]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__RotationXY_t swig_types[79]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t swig_types[80]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t swig_types[81]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t swig_types[82]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t swig_types[83]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenXY_t swig_types[84]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t swig_types[85]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t swig_types[86]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Size_t swig_types[87]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t swig_types[88]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Snippet_t swig_types[89]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t swig_types[90]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t swig_types[91]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t swig_types[92]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SubStyle_t swig_types[93]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t swig_types[94]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t swig_types[95]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t swig_types[96]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t swig_types[97]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t swig_types[98]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Url_t swig_types[99]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t swig_types[100]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t swig_types[101]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalAddressDetails_t swig_types[102]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalAdministrativeArea_t swig_types[103]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalCountry_t swig_types[104]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalLocality_t swig_types[105]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalPostalCode_t swig_types[106]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalSubAdministrativeArea_t swig_types[107]
#define SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalThoroughfare_t swig_types[108]
#define SWIGTYPE_p_char swig_types[109]
#define SWIGTYPE_p_int swig_types[110]
#define SWIGTYPE_p_kmlbase__Color32 swig_types[111]
#define SWIGTYPE_p_kmlbase__Referent swig_types[112]
#define SWIGTYPE_p_kmlbase__Vec3 swig_types[113]
#define SWIGTYPE_p_kmlbase__XmlElement swig_types[114]
#define SWIGTYPE_p_kmlbase__XmlElementPtr swig_types[115]
#define SWIGTYPE_p_kmldom__AbstractLatLonBox swig_types[116]
#define SWIGTYPE_p_kmldom__AbstractView swig_types[117]
#define SWIGTYPE_p_kmldom__Alias swig_types[118]
#define SWIGTYPE_p_kmldom__AltitudeModeEnum swig_types[119]
#define SWIGTYPE_p_kmldom__AtomAuthor swig_types[120]
#define SWIGTYPE_p_kmldom__AtomLink swig_types[121]
#define SWIGTYPE_p_kmldom__BalloonStyle swig_types[122]
#define SWIGTYPE_p_kmldom__BasicLink swig_types[123]
#define SWIGTYPE_p_kmldom__Camera swig_types[124]
#define SWIGTYPE_p_kmldom__Change swig_types[125]
#define SWIGTYPE_p_kmldom__ColorModeEnum swig_types[126]
#define SWIGTYPE_p_kmldom__ColorStyle swig_types[127]
#define SWIGTYPE_p_kmldom__Container swig_types[128]
#define SWIGTYPE_p_kmldom__Coordinates swig_types[129]
#define SWIGTYPE_p_kmldom__Create swig_types[130]
#define SWIGTYPE_p_kmldom__Data swig_types[131]
#define SWIGTYPE_p_kmldom__Delete swig_types[132]
#define SWIGTYPE_p_kmldom__DisplayModeEnum swig_types[133]
#define SWIGTYPE_p_kmldom__Document swig_types[134]
#define SWIGTYPE_p_kmldom__Element swig_types[135]
#define SWIGTYPE_p_kmldom__ExtendedData swig_types[136]
#define SWIGTYPE_p_kmldom__Feature swig_types[137]
#define SWIGTYPE_p_kmldom__Folder swig_types[138]
#define SWIGTYPE_p_kmldom__Geometry swig_types[139]
#define SWIGTYPE_p_kmldom__GridOriginEnum swig_types[140]
#define SWIGTYPE_p_kmldom__GroundOverlay swig_types[141]
#define SWIGTYPE_p_kmldom__GxAltitudeModeEnum swig_types[142]
#define SWIGTYPE_p_kmldom__GxAnimatedUpdate swig_types[143]
#define SWIGTYPE_p_kmldom__GxFlyTo swig_types[144]
#define SWIGTYPE_p_kmldom__GxFlyToModeEnum swig_types[145]
#define SWIGTYPE_p_kmldom__GxLatLonQuad swig_types[146]
#define SWIGTYPE_p_kmldom__GxPlayModeEnum swig_types[147]
#define SWIGTYPE_p_kmldom__GxPlaylist swig_types[148]
#define SWIGTYPE_p_kmldom__GxSoundCue swig_types[149]
#define SWIGTYPE_p_kmldom__GxTimeSpan swig_types[150]
#define SWIGTYPE_p_kmldom__GxTimeStamp swig_types[151]
#define SWIGTYPE_p_kmldom__GxTour swig_types[152]
#define SWIGTYPE_p_kmldom__GxTourControl swig_types[153]
#define SWIGTYPE_p_kmldom__GxTourPrimitive swig_types[154]
#define SWIGTYPE_p_kmldom__GxWait swig_types[155]
#define SWIGTYPE_p_kmldom__HotSpot swig_types[156]
#define SWIGTYPE_p_kmldom__Icon swig_types[157]
#define SWIGTYPE_p_kmldom__IconStyle swig_types[158]
#define SWIGTYPE_p_kmldom__IconStyleIcon swig_types[159]
#define SWIGTYPE_p_kmldom__ImagePyramid swig_types[160]
#define SWIGTYPE_p_kmldom__InnerBoundaryIs swig_types[161]
#define SWIGTYPE_p_kmldom__ItemIcon swig_types[162]
#define SWIGTYPE_p_kmldom__ItemIconStateEnum swig_types[163]
#define SWIGTYPE_p_kmldom__Kml swig_types[164]
#define SWIGTYPE_p_kmldom__KmlDomType swig_types[165]
#define SWIGTYPE_p_kmldom__KmlFactory swig_types[166]
#define SWIGTYPE_p_kmldom__LabelStyle swig_types[167]
#define SWIGTYPE_p_kmldom__LatLonAltBox swig_types[168]
#define SWIGTYPE_p_kmldom__LatLonBox swig_types[169]
#define SWIGTYPE_p_kmldom__LineString swig_types[170]
#define SWIGTYPE_p_kmldom__LineStyle swig_types[171]
#define SWIGTYPE_p_kmldom__LinearRing swig_types[172]
#define SWIGTYPE_p_kmldom__Link swig_types[173]
#define SWIGTYPE_p_kmldom__LinkSnippet swig_types[174]
#define SWIGTYPE_p_kmldom__ListItemTypeEnum swig_types[175]
#define SWIGTYPE_p_kmldom__ListStyle swig_types[176]
#define SWIGTYPE_p_kmldom__Location swig_types[177]
#define SWIGTYPE_p_kmldom__Lod swig_types[178]
#define SWIGTYPE_p_kmldom__LookAt swig_types[179]
#define SWIGTYPE_p_kmldom__Model swig_types[180]
#define SWIGTYPE_p_kmldom__MultiGeometry swig_types[181]
#define SWIGTYPE_p_kmldom__NetworkLink swig_types[182]
#define SWIGTYPE_p_kmldom__NetworkLinkControl swig_types[183]
#define SWIGTYPE_p_kmldom__Object swig_types[184]
#define SWIGTYPE_p_kmldom__Orientation swig_types[185]
#define SWIGTYPE_p_kmldom__OuterBoundaryIs swig_types[186]
#define SWIGTYPE_p_kmldom__Overlay swig_types[187]
#define SWIGTYPE_p_kmldom__OverlayXY swig_types[188]
#define SWIGTYPE_p_kmldom__Pair swig_types[189]
#define SWIGTYPE_p_kmldom__PhotoOverlay swig_types[190]
#define SWIGTYPE_p_kmldom__Placemark swig_types[191]
#define SWIGTYPE_p_kmldom__Point swig_types[192]
#define SWIGTYPE_p_kmldom__PolyStyle swig_types[193]
#define SWIGTYPE_p_kmldom__Polygon swig_types[194]
#define SWIGTYPE_p_kmldom__RefreshModeEnum swig_types[195]
#define SWIGTYPE_p_kmldom__Region swig_types[196]
#define SWIGTYPE_p_kmldom__ResourceMap swig_types[197]
#define SWIGTYPE_p_kmldom__RotationXY swig_types[198]
#define SWIGTYPE_p_kmldom__Scale swig_types[199]
#define SWIGTYPE_p_kmldom__Schema swig_types[200]
#define SWIGTYPE_p_kmldom__SchemaData swig_types[201]
#define SWIGTYPE_p_kmldom__ScreenOverlay swig_types[202]
#define SWIGTYPE_p_kmldom__ScreenXY swig_types[203]
#define SWIGTYPE_p_kmldom__ShapeEnum swig_types[204]
#define SWIGTYPE_p_kmldom__SimpleData swig_types[205]
#define SWIGTYPE_p_kmldom__SimpleField swig_types[206]
#define SWIGTYPE_p_kmldom__Size swig_types[207]
#define SWIGTYPE_p_kmldom__Snippet swig_types[208]
#define SWIGTYPE_p_kmldom__SnippetCommon swig_types[209]
#define SWIGTYPE_p_kmldom__Style swig_types[210]
#define SWIGTYPE_p_kmldom__StyleMap swig_types[211]
#define SWIGTYPE_p_kmldom__StyleSelector swig_types[212]
#define SWIGTYPE_p_kmldom__StyleStateEnum swig_types[213]
#define SWIGTYPE_p_kmldom__SubStyle swig_types[214]
#define SWIGTYPE_p_kmldom__TimePrimitive swig_types[215]
#define SWIGTYPE_p_kmldom__TimeSpan swig_types[216]
#define SWIGTYPE_p_kmldom__TimeStamp swig_types[217]
#define SWIGTYPE_p_kmldom__UnitsEnum swig_types[218]
#define SWIGTYPE_p_kmldom__Update swig_types[219]
#define SWIGTYPE_p_kmldom__UpdateOperation swig_types[220]
#define SWIGTYPE_p_kmldom__Vec2 swig_types[221]
#define SWIGTYPE_p_kmldom__ViewRefreshModeEnum swig_types[222]
#define SWIGTYPE_p_kmldom__ViewVolume swig_types[223]
#define SWIGTYPE_p_long swig_types[224]
#define SWIGTYPE_p_long_long swig_types[225]
#define SWIGTYPE_p_short swig_types[226]
#define SWIGTYPE_p_signed_char swig_types[227]
#define SWIGTYPE_p_unsigned_char swig_types[228]
#define SWIGTYPE_p_unsigned_int swig_types[229]
#define SWIGTYPE_p_unsigned_long_long swig_types[230]
#define SWIGTYPE_p_unsigned_short swig_types[231]
#define SWIGTYPE_p_wchar_t swig_types[232]
static swig_type_info *swig_types[234];
static swig_module_info swig_module = {swig_types, 233, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _kmldom.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__kmldom

#else
#  define SWIG_init    init_kmldom

#endif
#define SWIG_name    "_kmldom"

#define SWIGVERSION 0x010339 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include "kml/dom.h"


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}

SWIGINTERN boost::intrusive_ptr< kmlbase::Referent > kmlbase_XmlElement_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmlbase::XmlElement > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }

#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}

SWIGINTERN boost::intrusive_ptr< kmlbase::XmlElement > kmldom_Element_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Element > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}

SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_Coordinates_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Coordinates > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }

  #define SWIG_From_double   PyFloat_FromDouble 

SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_Vec2_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Vec2 > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }

SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  if (s.size()) {
    return SWIG_FromCharPtrAndSize(s.data(), s.size());
  } else {
    return SWIG_FromCharPtrAndSize(s.c_str(), 0);
  }
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}

SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_Object_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Object > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_SubStyle_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::SubStyle > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::SubStyle > kmldom_ColorStyle_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ColorStyle > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_SnippetCommon_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::SnippetCommon > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::SnippetCommon > kmldom_Snippet_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Snippet > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::SnippetCommon > kmldom_LinkSnippet_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::LinkSnippet > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_AbstractView_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::AbstractView > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_TimePrimitive_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::TimePrimitive > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_StyleSelector_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::StyleSelector > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_AbstractLatLonBox_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::AbstractLatLonBox > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::AbstractLatLonBox > kmldom_LatLonAltBox_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::LatLonAltBox > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Lod_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Lod > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Region_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Region > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_ExtendedData_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ExtendedData > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }

SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}

SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Feature_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Feature > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Feature > kmldom_Container_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Container > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Geometry_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Geometry > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_BasicLink_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::BasicLink > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::BasicLink > kmldom_Icon_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Icon > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::BasicLink > kmldom_IconStyleIcon_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::IconStyleIcon > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Feature > kmldom_Overlay_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Overlay > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::SubStyle > kmldom_BalloonStyle_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::BalloonStyle > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::AbstractView > kmldom_Camera_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Camera > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_UpdateOperation_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::UpdateOperation > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::UpdateOperation > kmldom_Change_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Change > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::UpdateOperation > kmldom_Create_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Create > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Data_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Data > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::UpdateOperation > kmldom_Delete_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Delete > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_SimpleField_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::SimpleField > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Schema_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Schema > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Container > kmldom_Document_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Document > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Container > kmldom_Folder_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Folder > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::AbstractLatLonBox > kmldom_LatLonBox_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::LatLonBox > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_GxLatLonQuad_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxLatLonQuad > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Overlay > kmldom_GroundOverlay_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GroundOverlay > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Vec2 > kmldom_HotSpot_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::HotSpot > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::ColorStyle > kmldom_IconStyle_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::IconStyle > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_ImagePyramid_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ImagePyramid > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_ItemIcon_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ItemIcon > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::ColorStyle > kmldom_LabelStyle_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::LabelStyle > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Geometry > kmldom_LineString_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::LineString > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::ColorStyle > kmldom_LineStyle_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::LineStyle > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Geometry > kmldom_LinearRing_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::LinearRing > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::BasicLink > kmldom_Link_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Link > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::SubStyle > kmldom_ListStyle_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ListStyle > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Location_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Location > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::AbstractView > kmldom_LookAt_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::LookAt > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Orientation_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Orientation > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Scale_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Scale > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Alias_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Alias > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_ResourceMap_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ResourceMap > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Geometry > kmldom_Model_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Model > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Geometry > kmldom_MultiGeometry_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::MultiGeometry > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Feature > kmldom_NetworkLink_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::NetworkLink > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_Update_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Update > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_NetworkLinkControl_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::NetworkLinkControl > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_Pair_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Pair > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_ViewVolume_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ViewVolume > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Geometry > kmldom_Point_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Point > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Overlay > kmldom_PhotoOverlay_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::PhotoOverlay > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Feature > kmldom_Placemark_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Placemark > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::ColorStyle > kmldom_PolyStyle_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::PolyStyle > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_OuterBoundaryIs_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::OuterBoundaryIs > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_InnerBoundaryIs_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::InnerBoundaryIs > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Geometry > kmldom_Polygon_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Polygon > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_SimpleData_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::SimpleData > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_SchemaData_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::SchemaData > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Vec2 > kmldom_OverlayXY_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::OverlayXY > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Vec2 > kmldom_ScreenXY_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ScreenXY > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Vec2 > kmldom_RotationXY_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::RotationXY > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Vec2 > kmldom_Size_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Size > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Overlay > kmldom_ScreenOverlay_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::ScreenOverlay > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::StyleSelector > kmldom_Style_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Style > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::StyleSelector > kmldom_StyleMap_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::StyleMap > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::TimePrimitive > kmldom_TimeSpan_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::TimeSpan > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::TimeSpan > kmldom_GxTimeSpan_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxTimeSpan > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::TimePrimitive > kmldom_TimeStamp_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::TimeStamp > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::TimeStamp > kmldom_GxTimeStamp_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxTimeStamp > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_Kml_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::Kml > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_AtomAuthor_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::AtomAuthor > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Element > kmldom_AtomLink_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::AtomLink > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_GxTourPrimitive_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxTourPrimitive > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Object > kmldom_GxPlaylist_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxPlaylist > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::Feature > kmldom_GxTour_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxTour > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::GxTourPrimitive > kmldom_GxAnimatedUpdate_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxAnimatedUpdate > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::GxTourPrimitive > kmldom_GxFlyTo_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxFlyTo > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::GxTourPrimitive > kmldom_GxWait_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxWait > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::GxTourPrimitive > kmldom_GxSoundCue_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxSoundCue > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
SWIGINTERN boost::intrusive_ptr< kmldom::GxTourPrimitive > kmldom_GxTourControl_SWIGSharedPtrUpcast(boost::intrusive_ptr< kmldom::GxTourControl > swigSharedPtrUpcast){
    return swigSharedPtrUpcast;
  }
#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_Referent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmlbase::Referent *arg1 = (kmlbase::Referent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmlbase::Referent > tempshared1 ;
  boost::intrusive_ptr< kmlbase::Referent > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Referent",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__Referent_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Referent" "', argument " "1"" of type '" "kmlbase::Referent *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmlbase::Referent > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmlbase::Referent > * >(argp1);
      arg1 = const_cast< kmlbase::Referent * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmlbase::Referent > * >(argp1);
      arg1 = const_cast< kmlbase::Referent * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Referent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__Referent_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_XmlElement_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmlbase::XmlElement > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmlbase::Referent > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:XmlElement_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__XmlElement_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "XmlElement_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmlbase::XmlElement >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmlbase::XmlElement > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmlbase::XmlElement > * >(argp1);
  }
  result = kmlbase_XmlElement_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmlbase::Referent > *smartresult = result ? new boost::intrusive_ptr<  kmlbase::Referent >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__Referent_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_XmlElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmlbase::XmlElement *arg1 = (kmlbase::XmlElement *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmlbase::XmlElement > tempshared1 ;
  boost::intrusive_ptr< kmlbase::XmlElement > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_XmlElement",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__XmlElement_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_XmlElement" "', argument " "1"" of type '" "kmlbase::XmlElement *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmlbase::XmlElement > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmlbase::XmlElement > * >(argp1);
      arg1 = const_cast< kmlbase::XmlElement * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmlbase::XmlElement > * >(argp1);
      arg1 = const_cast< kmlbase::XmlElement * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *XmlElement_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__XmlElement_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Element_Type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Element *arg1 = (kmldom::Element *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Element > tempshared1 ;
  boost::intrusive_ptr< kmldom::Element > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::KmlDomType result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Element_Type",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Element_Type" "', argument " "1"" of type '" "kmldom::Element *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      arg1 = const_cast< kmldom::Element * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      arg1 = const_cast< kmldom::Element * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (kmldom::KmlDomType)(arg1)->Type();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Element_IsA(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Element *arg1 = (kmldom::Element *) 0 ;
  kmldom::KmlDomType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Element > tempshared1 ;
  boost::intrusive_ptr< kmldom::Element > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Element_IsA",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Element_IsA" "', argument " "1"" of type '" "kmldom::Element *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      arg1 = const_cast< kmldom::Element * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      arg1 = const_cast< kmldom::Element * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Element_IsA" "', argument " "2"" of type '" "kmldom::KmlDomType""'");
  } 
  arg2 = static_cast< kmldom::KmlDomType >(val2);
  result = (bool)(arg1)->IsA(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Element_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Element > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmlbase::XmlElement > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Element_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Element_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Element >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Element > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Element > * >(argp1);
  }
  result = kmldom_Element_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmlbase::XmlElement > *smartresult = result ? new boost::intrusive_ptr<  kmlbase::XmlElement >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmlbase__XmlElement_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Element(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Element *arg1 = (kmldom::Element *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Element > tempshared1 ;
  boost::intrusive_ptr< kmldom::Element > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Element",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Element" "', argument " "1"" of type '" "kmldom::Element *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      arg1 = const_cast< kmldom::Element * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Element > * >(argp1);
      arg1 = const_cast< kmldom::Element * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Element_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Coordinates_add_latlng(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Coordinates *arg1 = (kmldom::Coordinates *) 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Coordinates > tempshared1 ;
  boost::intrusive_ptr< kmldom::Coordinates > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Coordinates_add_latlng",&obj0,&obj1,&obj2)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Coordinates_add_latlng" "', argument " "1"" of type '" "kmldom::Coordinates *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Coordinates_add_latlng" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Coordinates_add_latlng" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  (arg1)->add_latlng(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Coordinates_add_latlngalt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Coordinates *arg1 = (kmldom::Coordinates *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Coordinates > tempshared1 ;
  boost::intrusive_ptr< kmldom::Coordinates > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Coordinates_add_latlngalt",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Coordinates_add_latlngalt" "', argument " "1"" of type '" "kmldom::Coordinates *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Coordinates_add_latlngalt" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Coordinates_add_latlngalt" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Coordinates_add_latlngalt" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  (arg1)->add_latlngalt(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Coordinates_get_coordinates_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Coordinates *arg1 = (kmldom::Coordinates *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Coordinates > tempshared1 ;
  boost::intrusive_ptr< kmldom::Coordinates > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Coordinates_get_coordinates_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Coordinates_get_coordinates_array_size" "', argument " "1"" of type '" "kmldom::Coordinates *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_coordinates_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Coordinates_get_coordinates_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Coordinates *arg1 = (kmldom::Coordinates *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Coordinates > tempshared1 ;
  boost::intrusive_ptr< kmldom::Coordinates > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< kmlbase::Vec3 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Coordinates_get_coordinates_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Coordinates_get_coordinates_array_at" "', argument " "1"" of type '" "kmldom::Coordinates *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Coordinates_get_coordinates_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_coordinates_array_at(arg2);
  resultobj = SWIG_NewPointerObj((new kmlbase::Vec3(static_cast< const kmlbase::Vec3& >(result))), SWIGTYPE_p_kmlbase__Vec3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Coordinates_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Coordinates > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Coordinates_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Coordinates_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Coordinates >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Coordinates > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Coordinates > * >(argp1);
  }
  result = kmldom_Coordinates_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Coordinates *arg1 = (kmldom::Coordinates *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Coordinates > tempshared1 ;
  boost::intrusive_ptr< kmldom::Coordinates > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Coordinates" "', argument " "1"" of type '" "kmldom::Coordinates *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Coordinates > * >(argp1);
      arg1 = const_cast< kmldom::Coordinates * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Coordinates_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Vec2_get_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_get_x",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_get_x" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_x();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_set_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec2_set_x",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_set_x" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec2_set_x" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_x(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_has_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_has_x",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_has_x" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_x();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_clear_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_clear_x",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_clear_x" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_x();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_get_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_get_y",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_get_y" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_y();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_set_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec2_set_y",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_set_y" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec2_set_y" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_y(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_has_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_has_y",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_has_y" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_y();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_clear_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_clear_y",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_clear_y" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_y();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_get_xunits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_get_xunits",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_get_xunits" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_xunits();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_set_xunits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec2_set_xunits",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_set_xunits" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec2_set_xunits" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_xunits(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_has_xunits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_has_xunits",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_has_xunits" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_xunits();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_clear_xunits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_clear_xunits",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_clear_xunits" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_xunits();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_get_yunits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_get_yunits",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_get_yunits" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_yunits();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_set_yunits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Vec2_set_yunits",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_set_yunits" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Vec2_set_yunits" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_yunits(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_has_yunits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_has_yunits",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_has_yunits" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_yunits();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_clear_yunits(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_clear_yunits",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_clear_yunits" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_yunits();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Vec2_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Vec2 > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Vec2_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Vec2_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Vec2 >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Vec2 > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Vec2 > * >(argp1);
  }
  result = kmldom_Vec2_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Vec2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Vec2 *arg1 = (kmldom::Vec2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > tempshared1 ;
  boost::intrusive_ptr< kmldom::Vec2 > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Vec2",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Vec2" "', argument " "1"" of type '" "kmldom::Vec2 *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Vec2 > * >(argp1);
      arg1 = const_cast< kmldom::Vec2 * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Vec2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Object_get_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_get_id",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_get_id" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_id();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_set_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Object_set_id",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_set_id" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Object_set_id" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Object_set_id" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_id((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_has_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_has_id",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_has_id" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_id();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_clear_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_clear_id",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_clear_id" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_id();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_get_targetid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_get_targetid",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_get_targetid" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_targetid();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_set_targetid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Object_set_targetid",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_set_targetid" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Object_set_targetid" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Object_set_targetid" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_targetid((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_has_targetid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_has_targetid",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_has_targetid" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_targetid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_clear_targetid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_clear_targetid",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_clear_targetid" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_targetid();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Object_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Object > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Object_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Object_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Object >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Object > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Object > * >(argp1);
  }
  result = kmldom_Object_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Object(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Object *arg1 = (kmldom::Object *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Object > tempshared1 ;
  boost::intrusive_ptr< kmldom::Object > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Object",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Object" "', argument " "1"" of type '" "kmldom::Object *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Object > * >(argp1);
      arg1 = const_cast< kmldom::Object * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Object_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SubStyle_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::SubStyle > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SubStyle_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SubStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SubStyle_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::SubStyle >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::SubStyle > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::SubStyle > * >(argp1);
  }
  result = kmldom_SubStyle_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SubStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SubStyle *arg1 = (kmldom::SubStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SubStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::SubStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SubStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SubStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SubStyle" "', argument " "1"" of type '" "kmldom::SubStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SubStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SubStyle > * >(argp1);
      arg1 = const_cast< kmldom::SubStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SubStyle > * >(argp1);
      arg1 = const_cast< kmldom::SubStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SubStyle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SubStyle_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ColorStyle_get_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmlbase::Color32 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ColorStyle_get_color",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_get_color" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (kmlbase::Color32 *) &(arg1)->get_color();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_kmlbase__Color32, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColorStyle_set_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  kmlbase::Color32 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ColorStyle_set_color",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_set_color" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_kmlbase__Color32,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColorStyle_set_color" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ColorStyle_set_color" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  arg2 = reinterpret_cast< kmlbase::Color32 * >(argp2);
  (arg1)->set_color((kmlbase::Color32 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColorStyle_has_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ColorStyle_has_color",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_has_color" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_color();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColorStyle_clear_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ColorStyle_clear_color",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_clear_color" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_color();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColorStyle_get_colormode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ColorStyle_get_colormode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_get_colormode" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_colormode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColorStyle_set_colormode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ColorStyle_set_colormode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_set_colormode" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ColorStyle_set_colormode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_colormode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColorStyle_has_colormode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ColorStyle_has_colormode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_has_colormode" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_colormode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColorStyle_clear_colormode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ColorStyle_clear_colormode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_clear_colormode" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_colormode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColorStyle_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ColorStyle > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::SubStyle > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ColorStyle_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColorStyle_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ColorStyle >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ColorStyle > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ColorStyle > * >(argp1);
  }
  result = kmldom_ColorStyle_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::SubStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SubStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SubStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ColorStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ColorStyle *arg1 = (kmldom::ColorStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ColorStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ColorStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ColorStyle" "', argument " "1"" of type '" "kmldom::ColorStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ColorStyle > * >(argp1);
      arg1 = const_cast< kmldom::ColorStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ColorStyle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SnippetCommon_get_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SnippetCommon_get_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_get_text" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_text();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SnippetCommon_set_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SnippetCommon_set_text",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_set_text" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SnippetCommon_set_text" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SnippetCommon_set_text" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_text((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SnippetCommon_has_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SnippetCommon_has_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_has_text" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_text();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SnippetCommon_clear_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SnippetCommon_clear_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_clear_text" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_text();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SnippetCommon_get_maxlines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SnippetCommon_get_maxlines",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_get_maxlines" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_maxlines();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SnippetCommon_set_maxlines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SnippetCommon_set_maxlines",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_set_maxlines" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SnippetCommon_set_maxlines" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_maxlines(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SnippetCommon_has_maxlines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SnippetCommon_has_maxlines",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_has_maxlines" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_maxlines();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SnippetCommon_clear_maxlines(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SnippetCommon_clear_maxlines",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_clear_maxlines" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_maxlines();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SnippetCommon_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::SnippetCommon > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SnippetCommon_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SnippetCommon_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::SnippetCommon >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::SnippetCommon > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::SnippetCommon > * >(argp1);
  }
  result = kmldom_SnippetCommon_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SnippetCommon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SnippetCommon *arg1 = (kmldom::SnippetCommon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > tempshared1 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SnippetCommon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SnippetCommon" "', argument " "1"" of type '" "kmldom::SnippetCommon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SnippetCommon > * >(argp1);
      arg1 = const_cast< kmldom::SnippetCommon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SnippetCommon_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Snippet_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Snippet > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Snippet_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Snippet_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Snippet_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Snippet >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Snippet > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Snippet > * >(argp1);
  }
  result = kmldom_Snippet_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::SnippetCommon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SnippetCommon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Snippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Snippet *arg1 = (kmldom::Snippet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Snippet > tempshared1 ;
  boost::intrusive_ptr< kmldom::Snippet > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Snippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Snippet_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Snippet" "', argument " "1"" of type '" "kmldom::Snippet *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Snippet > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Snippet > * >(argp1);
      arg1 = const_cast< kmldom::Snippet * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Snippet > * >(argp1);
      arg1 = const_cast< kmldom::Snippet * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Snippet_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Snippet_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LinkSnippet_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::LinkSnippet > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::SnippetCommon > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinkSnippet_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinkSnippet_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::LinkSnippet >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::LinkSnippet > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::LinkSnippet > * >(argp1);
  }
  result = kmldom_LinkSnippet_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::SnippetCommon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SnippetCommon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LinkSnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinkSnippet *arg1 = (kmldom::LinkSnippet *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinkSnippet > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinkSnippet > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LinkSnippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LinkSnippet" "', argument " "1"" of type '" "kmldom::LinkSnippet *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinkSnippet > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinkSnippet > * >(argp1);
      arg1 = const_cast< kmldom::LinkSnippet * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinkSnippet > * >(argp1);
      arg1 = const_cast< kmldom::LinkSnippet * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LinkSnippet_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AbstractView_get_gx_timeprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractView *arg1 = (kmldom::AbstractView *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractView > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractView > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::TimePrimitivePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractView_get_gx_timeprimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractView_get_gx_timeprimitive" "', argument " "1"" of type '" "kmldom::AbstractView *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_gx_timeprimitive();
  {
    boost::intrusive_ptr<  kmldom::TimePrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimePrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractView_has_gx_timeprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractView *arg1 = (kmldom::AbstractView *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractView > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractView > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractView_has_gx_timeprimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractView_has_gx_timeprimitive" "', argument " "1"" of type '" "kmldom::AbstractView *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_timeprimitive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractView_set_gx_timeprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractView *arg1 = (kmldom::AbstractView *) 0 ;
  kmldom::TimePrimitivePtr *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractView > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractView > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  kmldom::TimePrimitivePtr tempshared2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AbstractView_set_gx_timeprimitive",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractView_set_gx_timeprimitive" "', argument " "1"" of type '" "kmldom::AbstractView *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AbstractView_set_gx_timeprimitive" "', argument " "2"" of type '" "kmldom::TimePrimitivePtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp2) tempshared2 = *reinterpret_cast< kmldom::TimePrimitivePtr * >(argp2);
      delete reinterpret_cast< kmldom::TimePrimitivePtr * >(argp2);
      arg2 = &tempshared2;
    } else {
      arg2 = (argp2) ? reinterpret_cast< kmldom::TimePrimitivePtr * >(argp2) : &tempshared2;
    }
  }
  (arg1)->set_gx_timeprimitive((kmldom::TimePrimitivePtr const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractView_clear_gx_timeprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractView *arg1 = (kmldom::AbstractView *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractView > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractView > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractView_clear_gx_timeprimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractView_clear_gx_timeprimitive" "', argument " "1"" of type '" "kmldom::AbstractView *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_timeprimitive();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractView_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::AbstractView > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractView_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractView_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::AbstractView >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::AbstractView > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::AbstractView > * >(argp1);
  }
  result = kmldom_AbstractView_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AbstractView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractView *arg1 = (kmldom::AbstractView *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractView > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractView > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AbstractView",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AbstractView" "', argument " "1"" of type '" "kmldom::AbstractView *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractView > * >(argp1);
      arg1 = const_cast< kmldom::AbstractView * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AbstractView_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TimePrimitive_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::TimePrimitive > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimePrimitive_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimePrimitive_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::TimePrimitive >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::TimePrimitive > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::TimePrimitive > * >(argp1);
  }
  result = kmldom_TimePrimitive_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimePrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimePrimitive *arg1 = (kmldom::TimePrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimePrimitive > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimePrimitive > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TimePrimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimePrimitive" "', argument " "1"" of type '" "kmldom::TimePrimitive *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimePrimitive > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimePrimitive > * >(argp1);
      arg1 = const_cast< kmldom::TimePrimitive * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimePrimitive > * >(argp1);
      arg1 = const_cast< kmldom::TimePrimitive * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimePrimitive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_StyleSelector_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::StyleSelector > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StyleSelector_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StyleSelector_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::StyleSelector >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::StyleSelector > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::StyleSelector > * >(argp1);
  }
  result = kmldom_StyleSelector_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StyleSelector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::StyleSelector *arg1 = (kmldom::StyleSelector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::StyleSelector > tempshared1 ;
  boost::intrusive_ptr< kmldom::StyleSelector > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_StyleSelector",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StyleSelector" "', argument " "1"" of type '" "kmldom::StyleSelector *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleSelector > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleSelector > * >(argp1);
      arg1 = const_cast< kmldom::StyleSelector * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleSelector > * >(argp1);
      arg1 = const_cast< kmldom::StyleSelector * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StyleSelector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AbstractLatLonBox_get_north(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_get_north",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_get_north" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_north();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_has_north(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_has_north",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_has_north" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_north();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_set_north(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AbstractLatLonBox_set_north",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_set_north" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AbstractLatLonBox_set_north" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_north(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_clear_north(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_clear_north",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_clear_north" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_north();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_get_south(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_get_south",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_get_south" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_south();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_has_south(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_has_south",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_has_south" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_south();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_set_south(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AbstractLatLonBox_set_south",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_set_south" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AbstractLatLonBox_set_south" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_south(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_clear_south(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_clear_south",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_clear_south" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_south();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_get_east(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_get_east",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_get_east" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_east();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_has_east(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_has_east",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_has_east" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_east();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_set_east(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AbstractLatLonBox_set_east",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_set_east" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AbstractLatLonBox_set_east" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_east(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_clear_east(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_clear_east",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_clear_east" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_east();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_get_west(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_get_west",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_get_west" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_west();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_has_west(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_has_west",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_has_west" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_west();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_set_west(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AbstractLatLonBox_set_west",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_set_west" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AbstractLatLonBox_set_west" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_west(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_clear_west(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_clear_west",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_clear_west" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_west();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AbstractLatLonBox_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AbstractLatLonBox_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AbstractLatLonBox_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::AbstractLatLonBox >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::AbstractLatLonBox > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::AbstractLatLonBox > * >(argp1);
  }
  result = kmldom_AbstractLatLonBox_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AbstractLatLonBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AbstractLatLonBox *arg1 = (kmldom::AbstractLatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AbstractLatLonBox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AbstractLatLonBox" "', argument " "1"" of type '" "kmldom::AbstractLatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AbstractLatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::AbstractLatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AbstractLatLonBox_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LatLonAltBox_get_minaltitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_get_minaltitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_get_minaltitude" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_minaltitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_set_minaltitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LatLonAltBox_set_minaltitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_set_minaltitude" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LatLonAltBox_set_minaltitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_minaltitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_has_minaltitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_has_minaltitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_has_minaltitude" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_minaltitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_clear_minaltitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_clear_minaltitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_clear_minaltitude" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_minaltitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_get_maxaltitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_get_maxaltitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_get_maxaltitude" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_maxaltitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_set_maxaltitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LatLonAltBox_set_maxaltitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_set_maxaltitude" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LatLonAltBox_set_maxaltitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_maxaltitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_has_maxaltitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_has_maxaltitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_has_maxaltitude" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_maxaltitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_clear_maxaltitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_clear_maxaltitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_clear_maxaltitude" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_maxaltitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_get_altitudemode" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LatLonAltBox_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_set_altitudemode" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LatLonAltBox_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_has_altitudemode" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_clear_altitudemode" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LatLonAltBox_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LatLonAltBox_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonAltBox_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::LatLonAltBox > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonAltBox_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonAltBox_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::LatLonAltBox >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::LatLonAltBox > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::LatLonAltBox > * >(argp1);
  }
  result = kmldom_LatLonAltBox_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::AbstractLatLonBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractLatLonBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LatLonAltBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonAltBox *arg1 = (kmldom::LatLonAltBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonAltBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LatLonAltBox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LatLonAltBox" "', argument " "1"" of type '" "kmldom::LatLonAltBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonAltBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonAltBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LatLonAltBox_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Lod_get_minlodpixels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_get_minlodpixels",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_get_minlodpixels" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_minlodpixels();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_set_minlodpixels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Lod_set_minlodpixels",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_set_minlodpixels" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Lod_set_minlodpixels" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_minlodpixels(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_has_minlodpixels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_has_minlodpixels",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_has_minlodpixels" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_minlodpixels();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_clear_minlodpixels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_clear_minlodpixels",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_clear_minlodpixels" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_minlodpixels();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_get_maxlodpixels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_get_maxlodpixels",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_get_maxlodpixels" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_maxlodpixels();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_set_maxlodpixels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Lod_set_maxlodpixels",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_set_maxlodpixels" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Lod_set_maxlodpixels" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_maxlodpixels(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_has_maxlodpixels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_has_maxlodpixels",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_has_maxlodpixels" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_maxlodpixels();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_clear_maxlodpixels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_clear_maxlodpixels",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_clear_maxlodpixels" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_maxlodpixels();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_get_minfadeextent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_get_minfadeextent",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_get_minfadeextent" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_minfadeextent();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_set_minfadeextent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Lod_set_minfadeextent",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_set_minfadeextent" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Lod_set_minfadeextent" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_minfadeextent(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_has_minfadeextent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_has_minfadeextent",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_has_minfadeextent" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_minfadeextent();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_clear_minfadeextent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_clear_minfadeextent",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_clear_minfadeextent" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_minfadeextent();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_get_maxfadeextent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_get_maxfadeextent",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_get_maxfadeextent" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_maxfadeextent();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_set_maxfadeextent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Lod_set_maxfadeextent",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_set_maxfadeextent" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Lod_set_maxfadeextent" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_maxfadeextent(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_has_maxfadeextent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_has_maxfadeextent",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_has_maxfadeextent" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_maxfadeextent();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_clear_maxfadeextent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_clear_maxfadeextent",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_clear_maxfadeextent" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_maxfadeextent();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Lod_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Lod > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Lod_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Lod_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Lod >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Lod > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Lod > * >(argp1);
  }
  result = kmldom_Lod_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Lod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Lod *arg1 = (kmldom::Lod *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Lod > tempshared1 ;
  boost::intrusive_ptr< kmldom::Lod > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Lod",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Lod" "', argument " "1"" of type '" "kmldom::Lod *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Lod > * >(argp1);
      arg1 = const_cast< kmldom::Lod * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Lod_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Region_get_latlonaltbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LatLonAltBoxPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Region_get_latlonaltbox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_get_latlonaltbox" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_latlonaltbox();
  {
    boost::intrusive_ptr<  kmldom::LatLonAltBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LatLonAltBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Region_set_latlonaltbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  kmldom::LatLonAltBoxPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Region_set_latlonaltbox",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_set_latlonaltbox" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Region_set_latlonaltbox" "', argument " "2"" of type '" "kmldom::LatLonAltBoxPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LatLonAltBoxPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LatLonAltBoxPtr * >(argp2);
  }
  (arg1)->set_latlonaltbox(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Region_has_latlonaltbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Region_has_latlonaltbox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_has_latlonaltbox" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_latlonaltbox();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Region_clear_latlonaltbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Region_clear_latlonaltbox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_clear_latlonaltbox" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_latlonaltbox();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Region_get_lod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LodPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Region_get_lod",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_get_lod" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_lod();
  {
    boost::intrusive_ptr<  kmldom::Lod > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Lod >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Region_set_lod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  kmldom::LodPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Region_set_lod",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_set_lod" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Region_set_lod" "', argument " "2"" of type '" "kmldom::LodPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LodPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LodPtr * >(argp2);
  }
  (arg1)->set_lod(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Region_has_lod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Region_has_lod",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_has_lod" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_lod();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Region_clear_lod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Region_clear_lod",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_clear_lod" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_lod();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Region_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Region > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Region_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Region_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Region >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Region > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Region > * >(argp1);
  }
  result = kmldom_Region_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Region(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Region *arg1 = (kmldom::Region *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Region > tempshared1 ;
  boost::intrusive_ptr< kmldom::Region > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Region",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Region" "', argument " "1"" of type '" "kmldom::Region *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Region > * >(argp1);
      arg1 = const_cast< kmldom::Region * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Region_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ExtendedData_add_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ExtendedData *arg1 = (kmldom::ExtendedData *) 0 ;
  kmldom::DataPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ExtendedData > tempshared1 ;
  boost::intrusive_ptr< kmldom::ExtendedData > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ExtendedData_add_data",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExtendedData_add_data" "', argument " "1"" of type '" "kmldom::ExtendedData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ExtendedData_add_data" "', argument " "2"" of type '" "kmldom::DataPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::DataPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::DataPtr * >(argp2);
  }
  (arg1)->add_data(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExtendedData_get_data_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ExtendedData *arg1 = (kmldom::ExtendedData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ExtendedData > tempshared1 ;
  boost::intrusive_ptr< kmldom::ExtendedData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ExtendedData_get_data_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExtendedData_get_data_array_size" "', argument " "1"" of type '" "kmldom::ExtendedData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_data_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExtendedData_get_data_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ExtendedData *arg1 = (kmldom::ExtendedData *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ExtendedData > tempshared1 ;
  boost::intrusive_ptr< kmldom::ExtendedData > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::DataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ExtendedData_get_data_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExtendedData_get_data_array_at" "', argument " "1"" of type '" "kmldom::ExtendedData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExtendedData_get_data_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_data_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Data > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Data >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExtendedData_add_schemadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ExtendedData *arg1 = (kmldom::ExtendedData *) 0 ;
  kmldom::SchemaDataPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ExtendedData > tempshared1 ;
  boost::intrusive_ptr< kmldom::ExtendedData > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ExtendedData_add_schemadata",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExtendedData_add_schemadata" "', argument " "1"" of type '" "kmldom::ExtendedData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ExtendedData_add_schemadata" "', argument " "2"" of type '" "kmldom::SchemaDataPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::SchemaDataPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::SchemaDataPtr * >(argp2);
  }
  (arg1)->add_schemadata(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExtendedData_get_schemadata_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ExtendedData *arg1 = (kmldom::ExtendedData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ExtendedData > tempshared1 ;
  boost::intrusive_ptr< kmldom::ExtendedData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ExtendedData_get_schemadata_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExtendedData_get_schemadata_array_size" "', argument " "1"" of type '" "kmldom::ExtendedData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_schemadata_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExtendedData_get_schemadata_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ExtendedData *arg1 = (kmldom::ExtendedData *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ExtendedData > tempshared1 ;
  boost::intrusive_ptr< kmldom::ExtendedData > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::SchemaDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ExtendedData_get_schemadata_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExtendedData_get_schemadata_array_at" "', argument " "1"" of type '" "kmldom::ExtendedData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExtendedData_get_schemadata_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_schemadata_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::SchemaData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SchemaData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ExtendedData_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ExtendedData > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ExtendedData_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExtendedData_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ExtendedData >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ExtendedData > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ExtendedData > * >(argp1);
  }
  result = kmldom_ExtendedData_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ExtendedData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ExtendedData *arg1 = (kmldom::ExtendedData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ExtendedData > tempshared1 ;
  boost::intrusive_ptr< kmldom::ExtendedData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ExtendedData",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ExtendedData" "', argument " "1"" of type '" "kmldom::ExtendedData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ExtendedData > * >(argp1);
      arg1 = const_cast< kmldom::ExtendedData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ExtendedData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Feature_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_name" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_name",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_name" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Feature_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_name((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_name" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_name();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_name" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_name();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_visibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_visibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_visibility" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_visibility();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_visibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_visibility",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_visibility" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Feature_set_visibility" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_visibility(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_visibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_visibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_visibility" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_visibility();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_visibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_visibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_visibility" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_visibility();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_open",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_open" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_open();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_open",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_open" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Feature_set_open" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_open(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_open",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_open" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_open();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_open",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_open" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_open();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_atomauthor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AtomAuthorPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_atomauthor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_atomauthor" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_atomauthor();
  {
    boost::intrusive_ptr<  kmldom::AtomAuthor > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AtomAuthor >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_atomauthor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_atomauthor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_atomauthor" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_atomauthor();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_atomauthor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  kmldom::AtomAuthorPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_atomauthor",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_atomauthor" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_atomauthor" "', argument " "2"" of type '" "kmldom::AtomAuthorPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::AtomAuthorPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::AtomAuthorPtr * >(argp2);
  }
  (arg1)->set_atomauthor(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_atomauthor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_atomauthor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_atomauthor" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_atomauthor();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_atomlink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AtomLinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_atomlink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_atomlink" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_atomlink();
  {
    boost::intrusive_ptr<  kmldom::AtomLink > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AtomLink >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_atomlink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_atomlink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_atomlink" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_atomlink();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_atomlink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  kmldom::AtomLinkPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_atomlink",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_atomlink" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_atomlink" "', argument " "2"" of type '" "kmldom::AtomLinkPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::AtomLinkPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::AtomLinkPtr * >(argp2);
  }
  (arg1)->set_atomlink(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_atomlink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_atomlink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_atomlink" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_atomlink();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_address(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_address",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_address" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_address();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_address(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_address",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_address" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_address" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Feature_set_address" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_address((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_address(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_address",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_address" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_address();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_address(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_address",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_address" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_address();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_phonenumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_phonenumber",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_phonenumber" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_phonenumber();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_phonenumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_phonenumber",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_phonenumber" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_phonenumber" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Feature_set_phonenumber" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_phonenumber((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_phonenumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_phonenumber",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_phonenumber" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_phonenumber();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_phonenumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_phonenumber",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_phonenumber" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_phonenumber();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_snippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SnippetPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_snippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_snippet" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_snippet();
  {
    boost::intrusive_ptr<  kmldom::Snippet > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Snippet >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Snippet_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_snippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  kmldom::SnippetPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_snippet",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_snippet" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Snippet_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_snippet" "', argument " "2"" of type '" "kmldom::SnippetPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::SnippetPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::SnippetPtr * >(argp2);
  }
  (arg1)->set_snippet(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_snippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_snippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_snippet" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_snippet();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_snippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_snippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_snippet" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_snippet();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_description",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_description" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_description();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_description",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_description" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_description" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Feature_set_description" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_description((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_description",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_description" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_description();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_description",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_description" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_description();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AbstractViewPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_abstractview" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_abstractview();
  {
    boost::intrusive_ptr<  kmldom::AbstractView > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractView >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  kmldom::AbstractViewPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_abstractview",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_abstractview" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_abstractview" "', argument " "2"" of type '" "kmldom::AbstractViewPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::AbstractViewPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::AbstractViewPtr * >(argp2);
  }
  (arg1)->set_abstractview(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_abstractview" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_abstractview();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_abstractview" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_abstractview();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_timeprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::TimePrimitivePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_timeprimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_timeprimitive" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_timeprimitive();
  {
    boost::intrusive_ptr<  kmldom::TimePrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimePrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_timeprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  kmldom::TimePrimitivePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_timeprimitive",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_timeprimitive" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_timeprimitive" "', argument " "2"" of type '" "kmldom::TimePrimitivePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::TimePrimitivePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::TimePrimitivePtr * >(argp2);
  }
  (arg1)->set_timeprimitive(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_timeprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_timeprimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_timeprimitive" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_timeprimitive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_timeprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_timeprimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_timeprimitive" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_timeprimitive();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_styleurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_styleurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_styleurl" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_styleurl();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_styleurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_styleurl",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_styleurl" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_styleurl" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Feature_set_styleurl" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_styleurl((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_styleurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_styleurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_styleurl" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_styleurl();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_styleurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_styleurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_styleurl" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_styleurl();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::StyleSelectorPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_styleselector",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_styleselector" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_styleselector();
  {
    boost::intrusive_ptr<  kmldom::StyleSelector > *smartresult = result ? new boost::intrusive_ptr<  kmldom::StyleSelector >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  kmldom::StyleSelectorPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_styleselector",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_styleselector" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_styleselector" "', argument " "2"" of type '" "kmldom::StyleSelectorPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::StyleSelectorPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::StyleSelectorPtr * >(argp2);
  }
  (arg1)->set_styleselector(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_styleselector",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_styleselector" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_styleselector();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_styleselector",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_styleselector" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_styleselector();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_region(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::RegionPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_region",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_region" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_region();
  {
    boost::intrusive_ptr<  kmldom::Region > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Region >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_region(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  kmldom::RegionPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_region",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_region" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_region" "', argument " "2"" of type '" "kmldom::RegionPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::RegionPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::RegionPtr * >(argp2);
  }
  (arg1)->set_region(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_region(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_region",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_region" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_region();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_region(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_region",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_region" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_region();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_extendeddata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ExtendedDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_extendeddata",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_extendeddata" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_extendeddata();
  {
    boost::intrusive_ptr<  kmldom::ExtendedData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ExtendedData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_extendeddata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  kmldom::ExtendedDataPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_extendeddata",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_extendeddata" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Feature_set_extendeddata" "', argument " "2"" of type '" "kmldom::ExtendedDataPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ExtendedDataPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ExtendedDataPtr * >(argp2);
  }
  (arg1)->set_extendeddata(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_extendeddata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_extendeddata",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_extendeddata" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_extendeddata();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_extendeddata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_extendeddata",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_extendeddata" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_extendeddata();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_get_gx_balloonvisibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_get_gx_balloonvisibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_get_gx_balloonvisibility" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_gx_balloonvisibility();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_set_gx_balloonvisibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Feature_set_gx_balloonvisibility",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_set_gx_balloonvisibility" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Feature_set_gx_balloonvisibility" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_gx_balloonvisibility(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_has_gx_balloonvisibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_has_gx_balloonvisibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_has_gx_balloonvisibility" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_balloonvisibility();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_clear_gx_balloonvisibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_clear_gx_balloonvisibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_clear_gx_balloonvisibility" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_balloonvisibility();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Feature_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Feature > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Feature_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Feature_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Feature >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Feature > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Feature > * >(argp1);
  }
  result = kmldom_Feature_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Feature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Feature *arg1 = (kmldom::Feature *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > tempshared1 ;
  boost::intrusive_ptr< kmldom::Feature > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Feature",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Feature" "', argument " "1"" of type '" "kmldom::Feature *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Feature > * >(argp1);
      arg1 = const_cast< kmldom::Feature * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Feature_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Container_add_feature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Container *arg1 = (kmldom::Container *) 0 ;
  kmldom::FeaturePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Container > tempshared1 ;
  boost::intrusive_ptr< kmldom::Container > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Container_add_feature",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Container_add_feature" "', argument " "1"" of type '" "kmldom::Container *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      arg1 = const_cast< kmldom::Container * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      arg1 = const_cast< kmldom::Container * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Container_add_feature" "', argument " "2"" of type '" "kmldom::FeaturePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::FeaturePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::FeaturePtr * >(argp2);
  }
  (arg1)->add_feature(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Container_get_feature_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Container *arg1 = (kmldom::Container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Container > tempshared1 ;
  boost::intrusive_ptr< kmldom::Container > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Container_get_feature_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Container_get_feature_array_size" "', argument " "1"" of type '" "kmldom::Container *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      arg1 = const_cast< kmldom::Container * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      arg1 = const_cast< kmldom::Container * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_feature_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Container_get_feature_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Container *arg1 = (kmldom::Container *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Container > tempshared1 ;
  boost::intrusive_ptr< kmldom::Container > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::FeaturePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Container_get_feature_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Container_get_feature_array_at" "', argument " "1"" of type '" "kmldom::Container *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      arg1 = const_cast< kmldom::Container * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      arg1 = const_cast< kmldom::Container * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Container_get_feature_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_feature_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Container_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Container > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Container_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Container_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Container >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Container > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Container > * >(argp1);
  }
  result = kmldom_Container_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Container(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Container *arg1 = (kmldom::Container *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Container > tempshared1 ;
  boost::intrusive_ptr< kmldom::Container > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Container",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Container" "', argument " "1"" of type '" "kmldom::Container *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      arg1 = const_cast< kmldom::Container * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Container > * >(argp1);
      arg1 = const_cast< kmldom::Container * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Container_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Geometry_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Geometry > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Geometry_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Geometry_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Geometry >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Geometry > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Geometry > * >(argp1);
  }
  result = kmldom_Geometry_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Geometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Geometry *arg1 = (kmldom::Geometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Geometry > tempshared1 ;
  boost::intrusive_ptr< kmldom::Geometry > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Geometry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Geometry" "', argument " "1"" of type '" "kmldom::Geometry *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Geometry > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Geometry > * >(argp1);
      arg1 = const_cast< kmldom::Geometry * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Geometry > * >(argp1);
      arg1 = const_cast< kmldom::Geometry * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Geometry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BasicLink_get_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BasicLink *arg1 = (kmldom::BasicLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BasicLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::BasicLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BasicLink_get_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BasicLink_get_href" "', argument " "1"" of type '" "kmldom::BasicLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_href();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BasicLink_has_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BasicLink *arg1 = (kmldom::BasicLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BasicLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::BasicLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BasicLink_has_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BasicLink_has_href" "', argument " "1"" of type '" "kmldom::BasicLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_href();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BasicLink_set_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BasicLink *arg1 = (kmldom::BasicLink *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BasicLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::BasicLink > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BasicLink_set_href",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BasicLink_set_href" "', argument " "1"" of type '" "kmldom::BasicLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BasicLink_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BasicLink_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_href((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BasicLink_clear_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BasicLink *arg1 = (kmldom::BasicLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BasicLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::BasicLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BasicLink_clear_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BasicLink_clear_href" "', argument " "1"" of type '" "kmldom::BasicLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_href();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BasicLink_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::BasicLink > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BasicLink_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BasicLink_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::BasicLink >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::BasicLink > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::BasicLink > * >(argp1);
  }
  result = kmldom_BasicLink_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BasicLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BasicLink *arg1 = (kmldom::BasicLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BasicLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::BasicLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BasicLink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BasicLink" "', argument " "1"" of type '" "kmldom::BasicLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BasicLink > * >(argp1);
      arg1 = const_cast< kmldom::BasicLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BasicLink_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Icon_get_refreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_get_refreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_get_refreshmode" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_refreshmode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_set_refreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Icon_set_refreshmode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_set_refreshmode" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Icon_set_refreshmode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_refreshmode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_has_refreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_has_refreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_has_refreshmode" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_refreshmode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_clear_refreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_clear_refreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_clear_refreshmode" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_refreshmode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_get_refreshinterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_get_refreshinterval",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_get_refreshinterval" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_refreshinterval();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_set_refreshinterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Icon_set_refreshinterval",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_set_refreshinterval" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Icon_set_refreshinterval" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_refreshinterval(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_has_refreshinterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_has_refreshinterval",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_has_refreshinterval" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_refreshinterval();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_clear_refreshinterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_clear_refreshinterval",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_clear_refreshinterval" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_refreshinterval();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_get_viewrefreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_get_viewrefreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_get_viewrefreshmode" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_viewrefreshmode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_set_viewrefreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Icon_set_viewrefreshmode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_set_viewrefreshmode" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Icon_set_viewrefreshmode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_viewrefreshmode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_has_viewrefreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_has_viewrefreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_has_viewrefreshmode" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewrefreshmode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_clear_viewrefreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_clear_viewrefreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_clear_viewrefreshmode" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewrefreshmode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_get_viewrefreshtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_get_viewrefreshtime",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_get_viewrefreshtime" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_viewrefreshtime();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_set_viewrefreshtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Icon_set_viewrefreshtime",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_set_viewrefreshtime" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Icon_set_viewrefreshtime" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_viewrefreshtime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_has_viewrefreshtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_has_viewrefreshtime",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_has_viewrefreshtime" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewrefreshtime();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_clear_viewrefreshtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_clear_viewrefreshtime",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_clear_viewrefreshtime" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewrefreshtime();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_get_viewboundscale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_get_viewboundscale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_get_viewboundscale" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_viewboundscale();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_set_viewboundscale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Icon_set_viewboundscale",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_set_viewboundscale" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Icon_set_viewboundscale" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_viewboundscale(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_has_viewboundscale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_has_viewboundscale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_has_viewboundscale" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewboundscale();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_clear_viewboundscale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_clear_viewboundscale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_clear_viewboundscale" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewboundscale();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_get_viewformat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_get_viewformat",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_get_viewformat" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_viewformat();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_set_viewformat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Icon_set_viewformat",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_set_viewformat" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Icon_set_viewformat" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Icon_set_viewformat" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_viewformat((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_has_viewformat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_has_viewformat",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_has_viewformat" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewformat();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_clear_viewformat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_clear_viewformat",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_clear_viewformat" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewformat();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_get_httpquery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_get_httpquery",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_get_httpquery" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_httpquery();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_set_httpquery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Icon_set_httpquery",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_set_httpquery" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Icon_set_httpquery" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Icon_set_httpquery" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_httpquery((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_has_httpquery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_has_httpquery",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_has_httpquery" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_httpquery();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_clear_httpquery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_clear_httpquery",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_clear_httpquery" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_httpquery();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Icon_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Icon > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::BasicLink > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Icon_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Icon_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Icon >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Icon > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Icon > * >(argp1);
  }
  result = kmldom_Icon_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::BasicLink > *smartresult = result ? new boost::intrusive_ptr<  kmldom::BasicLink >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Icon *arg1 = (kmldom::Icon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Icon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Icon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Icon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Icon" "', argument " "1"" of type '" "kmldom::Icon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Icon > * >(argp1);
      arg1 = const_cast< kmldom::Icon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Icon_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_IconStyleIcon_get_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyleIcon *arg1 = (kmldom::IconStyleIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyleIcon_get_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyleIcon_get_href" "', argument " "1"" of type '" "kmldom::IconStyleIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_href();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyleIcon_has_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyleIcon *arg1 = (kmldom::IconStyleIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyleIcon_has_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyleIcon_has_href" "', argument " "1"" of type '" "kmldom::IconStyleIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_href();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyleIcon_set_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyleIcon *arg1 = (kmldom::IconStyleIcon *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IconStyleIcon_set_href",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyleIcon_set_href" "', argument " "1"" of type '" "kmldom::IconStyleIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IconStyleIcon_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IconStyleIcon_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_href((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyleIcon_clear_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyleIcon *arg1 = (kmldom::IconStyleIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyleIcon_clear_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyleIcon_clear_href" "', argument " "1"" of type '" "kmldom::IconStyleIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_href();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyleIcon_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::IconStyleIcon > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::BasicLink > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyleIcon_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyleIcon_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::IconStyleIcon >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::IconStyleIcon > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::IconStyleIcon > * >(argp1);
  }
  result = kmldom_IconStyleIcon_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::BasicLink > *smartresult = result ? new boost::intrusive_ptr<  kmldom::BasicLink >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IconStyleIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyleIcon *arg1 = (kmldom::IconStyleIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyleIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_IconStyleIcon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IconStyleIcon" "', argument " "1"" of type '" "kmldom::IconStyleIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyleIcon > * >(argp1);
      arg1 = const_cast< kmldom::IconStyleIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IconStyleIcon_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Overlay_get_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmlbase::Color32 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_get_color",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_get_color" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (kmlbase::Color32 *) &(arg1)->get_color();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_kmlbase__Color32, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_set_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  kmlbase::Color32 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Overlay_set_color",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_set_color" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_kmlbase__Color32,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Overlay_set_color" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Overlay_set_color" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  arg2 = reinterpret_cast< kmlbase::Color32 * >(argp2);
  (arg1)->set_color((kmlbase::Color32 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_has_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_has_color",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_has_color" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_color();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_clear_color(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_clear_color",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_clear_color" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_color();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_get_draworder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_get_draworder",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_get_draworder" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_draworder();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_set_draworder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Overlay_set_draworder",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_set_draworder" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Overlay_set_draworder" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_draworder(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_has_draworder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_has_draworder",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_has_draworder" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_draworder();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_clear_draworder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_clear_draworder",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_clear_draworder" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_draworder();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_get_icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_get_icon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_get_icon" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_icon();
  {
    boost::intrusive_ptr<  kmldom::Icon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Icon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_set_icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  kmldom::IconPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Overlay_set_icon",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_set_icon" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Overlay_set_icon" "', argument " "2"" of type '" "kmldom::IconPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::IconPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::IconPtr * >(argp2);
  }
  (arg1)->set_icon(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_has_icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_has_icon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_has_icon" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_icon();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_clear_icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_clear_icon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_clear_icon" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_icon();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Overlay_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Overlay > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Overlay_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Overlay_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Overlay >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Overlay > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Overlay > * >(argp1);
  }
  result = kmldom_Overlay_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Overlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Overlay *arg1 = (kmldom::Overlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::Overlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Overlay",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Overlay" "', argument " "1"" of type '" "kmldom::Overlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Overlay > * >(argp1);
      arg1 = const_cast< kmldom::Overlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Overlay_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BalloonStyle_get_bgcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmlbase::Color32 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_get_bgcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_get_bgcolor" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (kmlbase::Color32 *) &(arg1)->get_bgcolor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_kmlbase__Color32, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_set_bgcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  kmlbase::Color32 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BalloonStyle_set_bgcolor",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_set_bgcolor" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_kmlbase__Color32,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BalloonStyle_set_bgcolor" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BalloonStyle_set_bgcolor" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  arg2 = reinterpret_cast< kmlbase::Color32 * >(argp2);
  (arg1)->set_bgcolor((kmlbase::Color32 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_has_bgcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_has_bgcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_has_bgcolor" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_bgcolor();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_clear_bgcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_clear_bgcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_clear_bgcolor" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_bgcolor();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_get_textcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmlbase::Color32 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_get_textcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_get_textcolor" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (kmlbase::Color32 *) &(arg1)->get_textcolor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_kmlbase__Color32, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_set_textcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  kmlbase::Color32 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BalloonStyle_set_textcolor",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_set_textcolor" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_kmlbase__Color32,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BalloonStyle_set_textcolor" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BalloonStyle_set_textcolor" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  arg2 = reinterpret_cast< kmlbase::Color32 * >(argp2);
  (arg1)->set_textcolor((kmlbase::Color32 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_has_textcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_has_textcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_has_textcolor" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_textcolor();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_clear_textcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_clear_textcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_clear_textcolor" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_textcolor();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_get_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_get_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_get_text" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_text();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_set_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BalloonStyle_set_text",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_set_text" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BalloonStyle_set_text" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BalloonStyle_set_text" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_text((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_has_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_has_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_has_text" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_text();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_clear_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_clear_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_clear_text" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_text();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_get_displaymode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_get_displaymode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_get_displaymode" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_displaymode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_set_displaymode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BalloonStyle_set_displaymode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_set_displaymode" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BalloonStyle_set_displaymode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_displaymode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_has_displaymode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_has_displaymode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_has_displaymode" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_displaymode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_clear_displaymode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_clear_displaymode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_clear_displaymode" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_displaymode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BalloonStyle_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::BalloonStyle > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::SubStyle > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BalloonStyle_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BalloonStyle_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::BalloonStyle >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::BalloonStyle > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::BalloonStyle > * >(argp1);
  }
  result = kmldom_BalloonStyle_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::SubStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SubStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SubStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BalloonStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::BalloonStyle *arg1 = (kmldom::BalloonStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::BalloonStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BalloonStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BalloonStyle" "', argument " "1"" of type '" "kmldom::BalloonStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::BalloonStyle > * >(argp1);
      arg1 = const_cast< kmldom::BalloonStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BalloonStyle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Camera_get_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_get_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_get_longitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_longitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_set_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Camera_set_longitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_set_longitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Camera_set_longitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_longitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_has_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_has_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_has_longitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_longitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_clear_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_clear_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_clear_longitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_longitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_get_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_get_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_get_latitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_latitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_set_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Camera_set_latitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_set_latitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Camera_set_latitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_latitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_has_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_has_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_has_latitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_latitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_clear_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_clear_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_clear_latitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_latitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_get_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_get_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_get_altitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_altitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_set_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Camera_set_altitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_set_altitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Camera_set_altitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_altitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_has_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_has_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_has_altitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_clear_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_clear_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_clear_altitude" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_get_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_get_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_get_heading" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_heading();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_set_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Camera_set_heading",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_set_heading" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Camera_set_heading" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_heading(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_has_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_has_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_has_heading" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_heading();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_clear_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_clear_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_clear_heading" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_heading();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_get_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_get_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_get_tilt" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_tilt();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_set_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Camera_set_tilt",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_set_tilt" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Camera_set_tilt" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_tilt(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_has_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_has_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_has_tilt" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_tilt();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_clear_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_clear_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_clear_tilt" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_tilt();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_get_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_get_roll",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_get_roll" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_roll();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_set_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Camera_set_roll",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_set_roll" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Camera_set_roll" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_roll(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_has_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_has_roll",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_has_roll" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_roll();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_clear_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_clear_roll",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_clear_roll" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_roll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_get_altitudemode" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Camera_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_set_altitudemode" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Camera_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_has_altitudemode" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_clear_altitudemode" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Camera_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Camera_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Camera_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Camera > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractView > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Camera_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Camera_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Camera >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Camera > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Camera > * >(argp1);
  }
  result = kmldom_Camera_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::AbstractView > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractView >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Camera(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Camera *arg1 = (kmldom::Camera *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Camera > tempshared1 ;
  boost::intrusive_ptr< kmldom::Camera > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Camera",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Camera" "', argument " "1"" of type '" "kmldom::Camera *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Camera > * >(argp1);
      arg1 = const_cast< kmldom::Camera * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Camera_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_UpdateOperation_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::UpdateOperation > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UpdateOperation_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UpdateOperation_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::UpdateOperation >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::UpdateOperation > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::UpdateOperation > * >(argp1);
  }
  result = kmldom_UpdateOperation_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_UpdateOperation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::UpdateOperation *arg1 = (kmldom::UpdateOperation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::UpdateOperation > tempshared1 ;
  boost::intrusive_ptr< kmldom::UpdateOperation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_UpdateOperation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UpdateOperation" "', argument " "1"" of type '" "kmldom::UpdateOperation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::UpdateOperation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::UpdateOperation > * >(argp1);
      arg1 = const_cast< kmldom::UpdateOperation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::UpdateOperation > * >(argp1);
      arg1 = const_cast< kmldom::UpdateOperation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UpdateOperation_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Change_add_object(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Change *arg1 = (kmldom::Change *) 0 ;
  kmldom::ObjectPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Change > tempshared1 ;
  boost::intrusive_ptr< kmldom::Change > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Change_add_object",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Change_add_object" "', argument " "1"" of type '" "kmldom::Change *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      arg1 = const_cast< kmldom::Change * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      arg1 = const_cast< kmldom::Change * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Change_add_object" "', argument " "2"" of type '" "kmldom::ObjectPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ObjectPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ObjectPtr * >(argp2);
  }
  (arg1)->add_object(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Change_get_object_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Change *arg1 = (kmldom::Change *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Change > tempshared1 ;
  boost::intrusive_ptr< kmldom::Change > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Change_get_object_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Change_get_object_array_size" "', argument " "1"" of type '" "kmldom::Change *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      arg1 = const_cast< kmldom::Change * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      arg1 = const_cast< kmldom::Change * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_object_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Change_get_object_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Change *arg1 = (kmldom::Change *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Change > tempshared1 ;
  boost::intrusive_ptr< kmldom::Change > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::ObjectPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Change_get_object_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Change_get_object_array_at" "', argument " "1"" of type '" "kmldom::Change *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      arg1 = const_cast< kmldom::Change * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      arg1 = const_cast< kmldom::Change * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Change_get_object_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_object_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Change_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Change > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::UpdateOperation > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Change_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Change_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Change >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Change > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Change > * >(argp1);
  }
  result = kmldom_Change_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::UpdateOperation > *smartresult = result ? new boost::intrusive_ptr<  kmldom::UpdateOperation >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Change(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Change *arg1 = (kmldom::Change *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Change > tempshared1 ;
  boost::intrusive_ptr< kmldom::Change > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Change",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Change" "', argument " "1"" of type '" "kmldom::Change *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      arg1 = const_cast< kmldom::Change * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Change > * >(argp1);
      arg1 = const_cast< kmldom::Change * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Change_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Create_add_container(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Create *arg1 = (kmldom::Create *) 0 ;
  kmldom::ContainerPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Create > tempshared1 ;
  boost::intrusive_ptr< kmldom::Create > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Create_add_container",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Create_add_container" "', argument " "1"" of type '" "kmldom::Create *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      arg1 = const_cast< kmldom::Create * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      arg1 = const_cast< kmldom::Create * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Create_add_container" "', argument " "2"" of type '" "kmldom::ContainerPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ContainerPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ContainerPtr * >(argp2);
  }
  (arg1)->add_container(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Create_get_container_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Create *arg1 = (kmldom::Create *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Create > tempshared1 ;
  boost::intrusive_ptr< kmldom::Create > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Create_get_container_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Create_get_container_array_size" "', argument " "1"" of type '" "kmldom::Create *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      arg1 = const_cast< kmldom::Create * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      arg1 = const_cast< kmldom::Create * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_container_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Create_get_container_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Create *arg1 = (kmldom::Create *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Create > tempshared1 ;
  boost::intrusive_ptr< kmldom::Create > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::ContainerPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Create_get_container_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Create_get_container_array_at" "', argument " "1"" of type '" "kmldom::Create *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      arg1 = const_cast< kmldom::Create * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      arg1 = const_cast< kmldom::Create * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Create_get_container_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_container_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Container > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Container >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Create_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Create > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::UpdateOperation > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Create_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Create_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Create >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Create > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Create > * >(argp1);
  }
  result = kmldom_Create_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::UpdateOperation > *smartresult = result ? new boost::intrusive_ptr<  kmldom::UpdateOperation >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Create *arg1 = (kmldom::Create *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Create > tempshared1 ;
  boost::intrusive_ptr< kmldom::Create > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Create",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Create" "', argument " "1"" of type '" "kmldom::Create *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      arg1 = const_cast< kmldom::Create * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Create > * >(argp1);
      arg1 = const_cast< kmldom::Create * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Create_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Data_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_get_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_get_name" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_has_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_has_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_has_name" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_name();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_set_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Data_set_name",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_set_name" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Data_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Data_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_name((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_clear_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_clear_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_clear_name" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_name();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_get_displayname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_get_displayname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_get_displayname" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_displayname();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_has_displayname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_has_displayname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_has_displayname" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_displayname();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_set_displayname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Data_set_displayname",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_set_displayname" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Data_set_displayname" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Data_set_displayname" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_displayname((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_clear_displayname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_clear_displayname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_clear_displayname" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_displayname();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_get_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_get_value",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_get_value" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_value();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_has_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_has_value",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_has_value" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_value();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_set_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Data_set_value",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_set_value" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Data_set_value" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Data_set_value" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_value((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_clear_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_clear_value",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_clear_value" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_value();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Data_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Data > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Data_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Data_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Data >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Data > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Data > * >(argp1);
  }
  result = kmldom_Data_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Data *arg1 = (kmldom::Data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Data > tempshared1 ;
  boost::intrusive_ptr< kmldom::Data > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Data",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Data" "', argument " "1"" of type '" "kmldom::Data *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Data > * >(argp1);
      arg1 = const_cast< kmldom::Data * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Data_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Delete_add_feature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Delete *arg1 = (kmldom::Delete *) 0 ;
  kmldom::FeaturePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Delete > tempshared1 ;
  boost::intrusive_ptr< kmldom::Delete > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Delete_add_feature",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delete_add_feature" "', argument " "1"" of type '" "kmldom::Delete *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      arg1 = const_cast< kmldom::Delete * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      arg1 = const_cast< kmldom::Delete * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Delete_add_feature" "', argument " "2"" of type '" "kmldom::FeaturePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::FeaturePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::FeaturePtr * >(argp2);
  }
  (arg1)->add_feature(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delete_get_feature_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Delete *arg1 = (kmldom::Delete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Delete > tempshared1 ;
  boost::intrusive_ptr< kmldom::Delete > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Delete_get_feature_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delete_get_feature_array_size" "', argument " "1"" of type '" "kmldom::Delete *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      arg1 = const_cast< kmldom::Delete * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      arg1 = const_cast< kmldom::Delete * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_feature_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delete_get_feature_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Delete *arg1 = (kmldom::Delete *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Delete > tempshared1 ;
  boost::intrusive_ptr< kmldom::Delete > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::FeaturePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Delete_get_feature_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delete_get_feature_array_at" "', argument " "1"" of type '" "kmldom::Delete *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      arg1 = const_cast< kmldom::Delete * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      arg1 = const_cast< kmldom::Delete * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Delete_get_feature_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_feature_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Delete_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Delete > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::UpdateOperation > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Delete_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Delete_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Delete >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Delete > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Delete > * >(argp1);
  }
  result = kmldom_Delete_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::UpdateOperation > *smartresult = result ? new boost::intrusive_ptr<  kmldom::UpdateOperation >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Delete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Delete *arg1 = (kmldom::Delete *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Delete > tempshared1 ;
  boost::intrusive_ptr< kmldom::Delete > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Delete",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Delete" "', argument " "1"" of type '" "kmldom::Delete *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      arg1 = const_cast< kmldom::Delete * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Delete > * >(argp1);
      arg1 = const_cast< kmldom::Delete * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Delete_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimpleField_get_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_get_type",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_get_type" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_type();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_has_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_has_type",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_has_type" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_type();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_set_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimpleField_set_type",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_set_type" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleField_set_type" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimpleField_set_type" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_type((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_clear_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_clear_type",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_clear_type" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_type();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_get_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_get_name" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_has_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_has_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_has_name" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_name();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_set_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimpleField_set_name",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_set_name" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleField_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimpleField_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_name((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_clear_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_clear_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_clear_name" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_name();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_get_displayname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_get_displayname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_get_displayname" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_displayname();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_set_displayname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimpleField_set_displayname",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_set_displayname" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleField_set_displayname" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimpleField_set_displayname" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_displayname((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_has_displayname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_has_displayname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_has_displayname" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_displayname();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_clear_displayname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_clear_displayname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_clear_displayname" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_displayname();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleField_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::SimpleField > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleField_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleField_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::SimpleField >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::SimpleField > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::SimpleField > * >(argp1);
  }
  result = kmldom_SimpleField_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SimpleField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleField *arg1 = (kmldom::SimpleField *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleField > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleField > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimpleField",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimpleField" "', argument " "1"" of type '" "kmldom::SimpleField *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleField > * >(argp1);
      arg1 = const_cast< kmldom::SimpleField * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimpleField_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Schema_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Schema *arg1 = (kmldom::Schema *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Schema > tempshared1 ;
  boost::intrusive_ptr< kmldom::Schema > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Schema_get_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Schema_get_name" "', argument " "1"" of type '" "kmldom::Schema *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Schema_has_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Schema *arg1 = (kmldom::Schema *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Schema > tempshared1 ;
  boost::intrusive_ptr< kmldom::Schema > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Schema_has_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Schema_has_name" "', argument " "1"" of type '" "kmldom::Schema *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_name();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Schema_set_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Schema *arg1 = (kmldom::Schema *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Schema > tempshared1 ;
  boost::intrusive_ptr< kmldom::Schema > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Schema_set_name",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Schema_set_name" "', argument " "1"" of type '" "kmldom::Schema *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Schema_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Schema_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_name((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Schema_clear_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Schema *arg1 = (kmldom::Schema *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Schema > tempshared1 ;
  boost::intrusive_ptr< kmldom::Schema > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Schema_clear_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Schema_clear_name" "', argument " "1"" of type '" "kmldom::Schema *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_name();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Schema_add_simplefield(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Schema *arg1 = (kmldom::Schema *) 0 ;
  kmldom::SimpleFieldPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Schema > tempshared1 ;
  boost::intrusive_ptr< kmldom::Schema > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Schema_add_simplefield",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Schema_add_simplefield" "', argument " "1"" of type '" "kmldom::Schema *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Schema_add_simplefield" "', argument " "2"" of type '" "kmldom::SimpleFieldPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::SimpleFieldPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::SimpleFieldPtr * >(argp2);
  }
  (arg1)->add_simplefield(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Schema_get_simplefield_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Schema *arg1 = (kmldom::Schema *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Schema > tempshared1 ;
  boost::intrusive_ptr< kmldom::Schema > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Schema_get_simplefield_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Schema_get_simplefield_array_size" "', argument " "1"" of type '" "kmldom::Schema *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_simplefield_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Schema_get_simplefield_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Schema *arg1 = (kmldom::Schema *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Schema > tempshared1 ;
  boost::intrusive_ptr< kmldom::Schema > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::SimpleFieldPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Schema_get_simplefield_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Schema_get_simplefield_array_at" "', argument " "1"" of type '" "kmldom::Schema *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Schema_get_simplefield_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_simplefield_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::SimpleField > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SimpleField >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Schema_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Schema > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Schema_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Schema_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Schema >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Schema > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Schema > * >(argp1);
  }
  result = kmldom_Schema_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Schema(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Schema *arg1 = (kmldom::Schema *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Schema > tempshared1 ;
  boost::intrusive_ptr< kmldom::Schema > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Schema",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Schema" "', argument " "1"" of type '" "kmldom::Schema *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Schema > * >(argp1);
      arg1 = const_cast< kmldom::Schema * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Schema_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Document_add_schema(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Document *arg1 = (kmldom::Document *) 0 ;
  kmldom::SchemaPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Document > tempshared1 ;
  boost::intrusive_ptr< kmldom::Document > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Document_add_schema",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Document_add_schema" "', argument " "1"" of type '" "kmldom::Document *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Document_add_schema" "', argument " "2"" of type '" "kmldom::SchemaPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::SchemaPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::SchemaPtr * >(argp2);
  }
  (arg1)->add_schema(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Document_get_schema_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Document *arg1 = (kmldom::Document *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Document > tempshared1 ;
  boost::intrusive_ptr< kmldom::Document > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Document_get_schema_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Document_get_schema_array_size" "', argument " "1"" of type '" "kmldom::Document *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_schema_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Document_get_schema_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Document *arg1 = (kmldom::Document *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Document > tempshared1 ;
  boost::intrusive_ptr< kmldom::Document > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::SchemaPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Document_get_schema_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Document_get_schema_array_at" "', argument " "1"" of type '" "kmldom::Document *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Document_get_schema_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_schema_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Schema > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Schema >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Document_add_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Document *arg1 = (kmldom::Document *) 0 ;
  kmldom::StyleSelectorPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Document > tempshared1 ;
  boost::intrusive_ptr< kmldom::Document > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Document_add_styleselector",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Document_add_styleselector" "', argument " "1"" of type '" "kmldom::Document *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Document_add_styleselector" "', argument " "2"" of type '" "kmldom::StyleSelectorPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::StyleSelectorPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::StyleSelectorPtr * >(argp2);
  }
  (arg1)->add_styleselector(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Document_get_styleselector_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Document *arg1 = (kmldom::Document *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Document > tempshared1 ;
  boost::intrusive_ptr< kmldom::Document > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Document_get_styleselector_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Document_get_styleselector_array_size" "', argument " "1"" of type '" "kmldom::Document *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_styleselector_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Document_get_styleselector_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Document *arg1 = (kmldom::Document *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Document > tempshared1 ;
  boost::intrusive_ptr< kmldom::Document > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::StyleSelectorPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Document_get_styleselector_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Document_get_styleselector_array_at" "', argument " "1"" of type '" "kmldom::Document *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Document_get_styleselector_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_styleselector_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::StyleSelector > *smartresult = result ? new boost::intrusive_ptr<  kmldom::StyleSelector >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Document_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Document > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Container > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Document_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Document_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Document >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Document > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Document > * >(argp1);
  }
  result = kmldom_Document_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Container > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Container >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Document(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Document *arg1 = (kmldom::Document *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Document > tempshared1 ;
  boost::intrusive_ptr< kmldom::Document > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Document",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Document" "', argument " "1"" of type '" "kmldom::Document *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Document > * >(argp1);
      arg1 = const_cast< kmldom::Document * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Document_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Folder_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Folder > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Container > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Folder_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Folder_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Folder_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Folder >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Folder > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Folder > * >(argp1);
  }
  result = kmldom_Folder_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Container > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Container >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Folder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Folder *arg1 = (kmldom::Folder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Folder > tempshared1 ;
  boost::intrusive_ptr< kmldom::Folder > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Folder",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Folder_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Folder" "', argument " "1"" of type '" "kmldom::Folder *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Folder > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Folder > * >(argp1);
      arg1 = const_cast< kmldom::Folder * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Folder > * >(argp1);
      arg1 = const_cast< kmldom::Folder * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Folder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Folder_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LatLonBox_get_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonBox *arg1 = (kmldom::LatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonBox_get_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonBox_get_rotation" "', argument " "1"" of type '" "kmldom::LatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_rotation();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonBox_set_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonBox *arg1 = (kmldom::LatLonBox *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonBox > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LatLonBox_set_rotation",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonBox_set_rotation" "', argument " "1"" of type '" "kmldom::LatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LatLonBox_set_rotation" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_rotation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonBox_has_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonBox *arg1 = (kmldom::LatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonBox_has_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonBox_has_rotation" "', argument " "1"" of type '" "kmldom::LatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_rotation();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonBox_clear_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonBox *arg1 = (kmldom::LatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonBox_clear_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonBox_clear_rotation" "', argument " "1"" of type '" "kmldom::LatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_rotation();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LatLonBox_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::LatLonBox > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractLatLonBox > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LatLonBox_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LatLonBox_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::LatLonBox >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::LatLonBox > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::LatLonBox > * >(argp1);
  }
  result = kmldom_LatLonBox_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::AbstractLatLonBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractLatLonBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LatLonBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LatLonBox *arg1 = (kmldom::LatLonBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LatLonBox > tempshared1 ;
  boost::intrusive_ptr< kmldom::LatLonBox > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LatLonBox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LatLonBox" "', argument " "1"" of type '" "kmldom::LatLonBox *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LatLonBox > * >(argp1);
      arg1 = const_cast< kmldom::LatLonBox * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LatLonBox_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxLatLonQuad_get_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxLatLonQuad *arg1 = (kmldom::GxLatLonQuad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CoordinatesPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxLatLonQuad_get_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxLatLonQuad_get_coordinates" "', argument " "1"" of type '" "kmldom::GxLatLonQuad *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_coordinates();
  {
    boost::intrusive_ptr<  kmldom::Coordinates > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Coordinates >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxLatLonQuad_has_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxLatLonQuad *arg1 = (kmldom::GxLatLonQuad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxLatLonQuad_has_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxLatLonQuad_has_coordinates" "', argument " "1"" of type '" "kmldom::GxLatLonQuad *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_coordinates();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxLatLonQuad_set_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxLatLonQuad *arg1 = (kmldom::GxLatLonQuad *) 0 ;
  kmldom::CoordinatesPtr *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  kmldom::CoordinatesPtr tempshared2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxLatLonQuad_set_coordinates",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxLatLonQuad_set_coordinates" "', argument " "1"" of type '" "kmldom::GxLatLonQuad *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GxLatLonQuad_set_coordinates" "', argument " "2"" of type '" "kmldom::CoordinatesPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp2) tempshared2 = *reinterpret_cast< kmldom::CoordinatesPtr * >(argp2);
      delete reinterpret_cast< kmldom::CoordinatesPtr * >(argp2);
      arg2 = &tempshared2;
    } else {
      arg2 = (argp2) ? reinterpret_cast< kmldom::CoordinatesPtr * >(argp2) : &tempshared2;
    }
  }
  (arg1)->set_coordinates((kmldom::CoordinatesPtr const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxLatLonQuad_clear_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxLatLonQuad *arg1 = (kmldom::GxLatLonQuad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxLatLonQuad_clear_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxLatLonQuad_clear_coordinates" "', argument " "1"" of type '" "kmldom::GxLatLonQuad *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_coordinates();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxLatLonQuad_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxLatLonQuad_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxLatLonQuad_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxLatLonQuad >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxLatLonQuad > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxLatLonQuad > * >(argp1);
  }
  result = kmldom_GxLatLonQuad_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxLatLonQuad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxLatLonQuad *arg1 = (kmldom::GxLatLonQuad *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxLatLonQuad > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxLatLonQuad",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxLatLonQuad" "', argument " "1"" of type '" "kmldom::GxLatLonQuad *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxLatLonQuad > * >(argp1);
      arg1 = const_cast< kmldom::GxLatLonQuad * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxLatLonQuad_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GroundOverlay_get_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_get_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_get_altitude" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_altitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_set_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GroundOverlay_set_altitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_set_altitude" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GroundOverlay_set_altitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_altitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_has_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_has_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_has_altitude" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_clear_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_clear_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_clear_altitude" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_get_altitudemode" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GroundOverlay_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_set_altitudemode" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GroundOverlay_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_has_altitudemode" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_clear_altitudemode" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GroundOverlay_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GroundOverlay_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_get_latlonbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LatLonBoxPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_get_latlonbox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_get_latlonbox" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_latlonbox();
  {
    boost::intrusive_ptr<  kmldom::LatLonBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LatLonBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_set_latlonbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  kmldom::LatLonBoxPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GroundOverlay_set_latlonbox",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_set_latlonbox" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GroundOverlay_set_latlonbox" "', argument " "2"" of type '" "kmldom::LatLonBoxPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LatLonBoxPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LatLonBoxPtr * >(argp2);
  }
  (arg1)->set_latlonbox(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_has_latlonbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_has_latlonbox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_has_latlonbox" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_latlonbox();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_clear_latlonbox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_clear_latlonbox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_clear_latlonbox" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_latlonbox();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_get_gx_latlonquad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxLatLonQuadPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_get_gx_latlonquad",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_get_gx_latlonquad" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_gx_latlonquad();
  {
    boost::intrusive_ptr<  kmldom::GxLatLonQuad > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxLatLonQuad >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_has_gx_latlonquad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_has_gx_latlonquad",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_has_gx_latlonquad" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_latlonquad();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_set_gx_latlonquad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  kmldom::GxLatLonQuadPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GroundOverlay_set_gx_latlonquad",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_set_gx_latlonquad" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GroundOverlay_set_gx_latlonquad" "', argument " "2"" of type '" "kmldom::GxLatLonQuadPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::GxLatLonQuadPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::GxLatLonQuadPtr * >(argp2);
  }
  (arg1)->set_gx_latlonquad(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_clear_gx_latlonquad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_clear_gx_latlonquad",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_clear_gx_latlonquad" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_latlonquad();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GroundOverlay_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GroundOverlay > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GroundOverlay_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GroundOverlay_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GroundOverlay >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GroundOverlay > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GroundOverlay > * >(argp1);
  }
  result = kmldom_GroundOverlay_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Overlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Overlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GroundOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GroundOverlay *arg1 = (kmldom::GroundOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::GroundOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GroundOverlay",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GroundOverlay" "', argument " "1"" of type '" "kmldom::GroundOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GroundOverlay > * >(argp1);
      arg1 = const_cast< kmldom::GroundOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GroundOverlay_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_HotSpot_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::HotSpot > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:HotSpot_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__HotSpot_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "HotSpot_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::HotSpot >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::HotSpot > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::HotSpot > * >(argp1);
  }
  result = kmldom_HotSpot_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Vec2 > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Vec2 >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_HotSpot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::HotSpot *arg1 = (kmldom::HotSpot *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::HotSpot > tempshared1 ;
  boost::intrusive_ptr< kmldom::HotSpot > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_HotSpot",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__HotSpot_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_HotSpot" "', argument " "1"" of type '" "kmldom::HotSpot *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::HotSpot > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::HotSpot > * >(argp1);
      arg1 = const_cast< kmldom::HotSpot * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::HotSpot > * >(argp1);
      arg1 = const_cast< kmldom::HotSpot * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *HotSpot_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__HotSpot_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_IconStyle_get_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_get_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_get_scale" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_scale();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_set_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IconStyle_set_scale",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_set_scale" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IconStyle_set_scale" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_scale(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_has_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_has_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_has_scale" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_scale();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_clear_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_clear_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_clear_scale" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_scale();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_get_icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconStyleIconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_get_icon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_get_icon" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_icon();
  {
    boost::intrusive_ptr<  kmldom::IconStyleIcon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::IconStyleIcon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_set_icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  kmldom::IconStyleIconPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IconStyle_set_icon",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_set_icon" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IconStyle_set_icon" "', argument " "2"" of type '" "kmldom::IconStyleIconPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::IconStyleIconPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::IconStyleIconPtr * >(argp2);
  }
  (arg1)->set_icon(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_has_icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_has_icon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_has_icon" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_icon();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_clear_icon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_clear_icon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_clear_icon" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_icon();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_get_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_get_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_get_heading" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_heading();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_set_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IconStyle_set_heading",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_set_heading" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IconStyle_set_heading" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_heading(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_has_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_has_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_has_heading" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_heading();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_clear_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_clear_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_clear_heading" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_heading();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_get_hotspot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::HotSpotPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_get_hotspot",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_get_hotspot" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_hotspot();
  {
    boost::intrusive_ptr<  kmldom::HotSpot > *smartresult = result ? new boost::intrusive_ptr<  kmldom::HotSpot >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__HotSpot_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_set_hotspot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  kmldom::HotSpotPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IconStyle_set_hotspot",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_set_hotspot" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__HotSpot_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IconStyle_set_hotspot" "', argument " "2"" of type '" "kmldom::HotSpotPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::HotSpotPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::HotSpotPtr * >(argp2);
  }
  (arg1)->set_hotspot(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_has_hotspot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_has_hotspot",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_has_hotspot" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_hotspot();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_clear_hotspot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_clear_hotspot",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_clear_hotspot" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_hotspot();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IconStyle_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::IconStyle > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IconStyle_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IconStyle_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::IconStyle >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::IconStyle > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::IconStyle > * >(argp1);
  }
  result = kmldom_IconStyle_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::ColorStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ColorStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IconStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::IconStyle *arg1 = (kmldom::IconStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::IconStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::IconStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_IconStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IconStyle" "', argument " "1"" of type '" "kmldom::IconStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::IconStyle > * >(argp1);
      arg1 = const_cast< kmldom::IconStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IconStyle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ImagePyramid_get_tilesize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_get_tilesize",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_get_tilesize" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_tilesize();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_set_tilesize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ImagePyramid_set_tilesize",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_set_tilesize" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ImagePyramid_set_tilesize" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_tilesize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_has_tilesize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_has_tilesize",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_has_tilesize" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_tilesize();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_clear_tilesize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_clear_tilesize",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_clear_tilesize" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_tilesize();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_get_maxwidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_get_maxwidth",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_get_maxwidth" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_maxwidth();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_set_maxwidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ImagePyramid_set_maxwidth",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_set_maxwidth" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ImagePyramid_set_maxwidth" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_maxwidth(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_has_maxwidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_has_maxwidth",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_has_maxwidth" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_maxwidth();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_clear_maxwidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_clear_maxwidth",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_clear_maxwidth" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_maxwidth();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_get_maxheight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_get_maxheight",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_get_maxheight" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_maxheight();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_set_maxheight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ImagePyramid_set_maxheight",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_set_maxheight" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ImagePyramid_set_maxheight" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_maxheight(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_has_maxheight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_has_maxheight",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_has_maxheight" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_maxheight();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_clear_maxheight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_clear_maxheight",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_clear_maxheight" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_maxheight();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_get_gridorigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_get_gridorigin",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_get_gridorigin" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gridorigin();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_set_gridorigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ImagePyramid_set_gridorigin",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_set_gridorigin" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ImagePyramid_set_gridorigin" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gridorigin(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_has_gridorigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_has_gridorigin",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_has_gridorigin" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gridorigin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_clear_gridorigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_clear_gridorigin",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_clear_gridorigin" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gridorigin();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ImagePyramid_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ImagePyramid > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ImagePyramid_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ImagePyramid_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ImagePyramid >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ImagePyramid > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ImagePyramid > * >(argp1);
  }
  result = kmldom_ImagePyramid_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ImagePyramid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ImagePyramid *arg1 = (kmldom::ImagePyramid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > tempshared1 ;
  boost::intrusive_ptr< kmldom::ImagePyramid > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ImagePyramid",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ImagePyramid" "', argument " "1"" of type '" "kmldom::ImagePyramid *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ImagePyramid > * >(argp1);
      arg1 = const_cast< kmldom::ImagePyramid * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ImagePyramid_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ItemIcon_get_state_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ItemIcon_get_state_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_get_state_array_at" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ItemIcon_get_state_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (int)(arg1)->get_state_array_at(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_get_state_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ItemIcon_get_state_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_get_state_array_size" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_state_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_has_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ItemIcon_has_state",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_has_state" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_state();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_add_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ItemIcon_add_state",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_add_state" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ItemIcon_add_state" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->add_state(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_clear_state(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ItemIcon_clear_state",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_clear_state" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_state();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_get_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ItemIcon_get_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_get_href" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_href();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_set_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ItemIcon_set_href",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_set_href" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ItemIcon_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ItemIcon_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_href((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_has_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ItemIcon_has_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_has_href" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_href();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_clear_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ItemIcon_clear_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_clear_href" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_href();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ItemIcon_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ItemIcon > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ItemIcon_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ItemIcon_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ItemIcon >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ItemIcon > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ItemIcon > * >(argp1);
  }
  result = kmldom_ItemIcon_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ItemIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ItemIcon *arg1 = (kmldom::ItemIcon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ItemIcon > tempshared1 ;
  boost::intrusive_ptr< kmldom::ItemIcon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ItemIcon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ItemIcon" "', argument " "1"" of type '" "kmldom::ItemIcon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ItemIcon > * >(argp1);
      arg1 = const_cast< kmldom::ItemIcon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ItemIcon_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LabelStyle_get_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LabelStyle *arg1 = (kmldom::LabelStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LabelStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LabelStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LabelStyle_get_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelStyle_get_scale" "', argument " "1"" of type '" "kmldom::LabelStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_scale();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelStyle_set_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LabelStyle *arg1 = (kmldom::LabelStyle *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LabelStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LabelStyle > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LabelStyle_set_scale",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelStyle_set_scale" "', argument " "1"" of type '" "kmldom::LabelStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LabelStyle_set_scale" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_scale(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelStyle_has_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LabelStyle *arg1 = (kmldom::LabelStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LabelStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LabelStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LabelStyle_has_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelStyle_has_scale" "', argument " "1"" of type '" "kmldom::LabelStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_scale();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelStyle_clear_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LabelStyle *arg1 = (kmldom::LabelStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LabelStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LabelStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LabelStyle_clear_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelStyle_clear_scale" "', argument " "1"" of type '" "kmldom::LabelStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_scale();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LabelStyle_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::LabelStyle > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LabelStyle_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelStyle_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::LabelStyle >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::LabelStyle > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::LabelStyle > * >(argp1);
  }
  result = kmldom_LabelStyle_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::ColorStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ColorStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LabelStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LabelStyle *arg1 = (kmldom::LabelStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LabelStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LabelStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LabelStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LabelStyle" "', argument " "1"" of type '" "kmldom::LabelStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LabelStyle > * >(argp1);
      arg1 = const_cast< kmldom::LabelStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LabelStyle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LineString_get_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_get_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_get_extrude" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_extrude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_set_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LineString_set_extrude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_set_extrude" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineString_set_extrude" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_extrude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_has_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_has_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_has_extrude" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_extrude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_clear_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_clear_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_clear_extrude" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_extrude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_get_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_get_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_get_tessellate" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_tessellate();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_set_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LineString_set_tessellate",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_set_tessellate" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineString_set_tessellate" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_tessellate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_has_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_has_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_has_tessellate" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_tessellate();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_clear_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_clear_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_clear_tessellate" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_tessellate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_get_altitudemode" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LineString_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_set_altitudemode" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineString_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_has_altitudemode" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_clear_altitudemode" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LineString_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineString_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_get_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CoordinatesPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_get_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_get_coordinates" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_coordinates();
  {
    boost::intrusive_ptr<  kmldom::Coordinates > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Coordinates >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_set_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  kmldom::CoordinatesPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LineString_set_coordinates",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_set_coordinates" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LineString_set_coordinates" "', argument " "2"" of type '" "kmldom::CoordinatesPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::CoordinatesPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::CoordinatesPtr * >(argp2);
  }
  (arg1)->set_coordinates(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_has_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_has_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_has_coordinates" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_coordinates();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_clear_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_clear_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_clear_coordinates" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_coordinates();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineString_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::LineString > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Geometry > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineString_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineString_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::LineString >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::LineString > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::LineString > * >(argp1);
  }
  result = kmldom_LineString_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LineString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineString *arg1 = (kmldom::LineString *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineString > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineString > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LineString",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LineString" "', argument " "1"" of type '" "kmldom::LineString *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineString > * >(argp1);
      arg1 = const_cast< kmldom::LineString * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LineString_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LineStyle_get_width(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineStyle *arg1 = (kmldom::LineStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineStyle_get_width",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineStyle_get_width" "', argument " "1"" of type '" "kmldom::LineStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_width();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineStyle_set_width(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineStyle *arg1 = (kmldom::LineStyle *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineStyle > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LineStyle_set_width",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineStyle_set_width" "', argument " "1"" of type '" "kmldom::LineStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LineStyle_set_width" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_width(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineStyle_has_width(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineStyle *arg1 = (kmldom::LineStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineStyle_has_width",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineStyle_has_width" "', argument " "1"" of type '" "kmldom::LineStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_width();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineStyle_clear_width(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineStyle *arg1 = (kmldom::LineStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineStyle_clear_width",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineStyle_clear_width" "', argument " "1"" of type '" "kmldom::LineStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_width();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LineStyle_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::LineStyle > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LineStyle_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LineStyle_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::LineStyle >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::LineStyle > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::LineStyle > * >(argp1);
  }
  result = kmldom_LineStyle_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::ColorStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ColorStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LineStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LineStyle *arg1 = (kmldom::LineStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LineStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::LineStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LineStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LineStyle" "', argument " "1"" of type '" "kmldom::LineStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LineStyle > * >(argp1);
      arg1 = const_cast< kmldom::LineStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LineStyle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LinearRing_get_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_get_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_get_extrude" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_extrude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_set_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LinearRing_set_extrude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_set_extrude" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LinearRing_set_extrude" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_extrude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_has_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_has_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_has_extrude" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_extrude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_clear_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_clear_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_clear_extrude" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_extrude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_get_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_get_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_get_tessellate" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_tessellate();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_set_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LinearRing_set_tessellate",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_set_tessellate" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LinearRing_set_tessellate" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_tessellate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_has_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_has_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_has_tessellate" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_tessellate();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_clear_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_clear_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_clear_tessellate" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_tessellate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_get_altitudemode" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LinearRing_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_set_altitudemode" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LinearRing_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_has_altitudemode" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_clear_altitudemode" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LinearRing_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LinearRing_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_get_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CoordinatesPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_get_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_get_coordinates" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_coordinates();
  {
    boost::intrusive_ptr<  kmldom::Coordinates > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Coordinates >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_set_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  kmldom::CoordinatesPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LinearRing_set_coordinates",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_set_coordinates" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LinearRing_set_coordinates" "', argument " "2"" of type '" "kmldom::CoordinatesPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::CoordinatesPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::CoordinatesPtr * >(argp2);
  }
  (arg1)->set_coordinates(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_has_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_has_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_has_coordinates" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_coordinates();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_clear_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_clear_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_clear_coordinates" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_coordinates();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LinearRing_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::LinearRing > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Geometry > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LinearRing_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LinearRing_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::LinearRing >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::LinearRing > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::LinearRing > * >(argp1);
  }
  result = kmldom_LinearRing_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LinearRing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LinearRing *arg1 = (kmldom::LinearRing *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LinearRing > tempshared1 ;
  boost::intrusive_ptr< kmldom::LinearRing > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LinearRing",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LinearRing" "', argument " "1"" of type '" "kmldom::LinearRing *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LinearRing > * >(argp1);
      arg1 = const_cast< kmldom::LinearRing * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LinearRing_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Link_get_refreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_get_refreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_get_refreshmode" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_refreshmode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_set_refreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Link_set_refreshmode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_set_refreshmode" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Link_set_refreshmode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_refreshmode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_has_refreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_has_refreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_has_refreshmode" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_refreshmode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_clear_refreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_clear_refreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_clear_refreshmode" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_refreshmode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_get_refreshinterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_get_refreshinterval",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_get_refreshinterval" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_refreshinterval();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_set_refreshinterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Link_set_refreshinterval",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_set_refreshinterval" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Link_set_refreshinterval" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_refreshinterval(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_has_refreshinterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_has_refreshinterval",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_has_refreshinterval" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_refreshinterval();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_clear_refreshinterval(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_clear_refreshinterval",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_clear_refreshinterval" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_refreshinterval();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_get_viewrefreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_get_viewrefreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_get_viewrefreshmode" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_viewrefreshmode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_set_viewrefreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Link_set_viewrefreshmode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_set_viewrefreshmode" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Link_set_viewrefreshmode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_viewrefreshmode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_has_viewrefreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_has_viewrefreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_has_viewrefreshmode" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewrefreshmode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_clear_viewrefreshmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_clear_viewrefreshmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_clear_viewrefreshmode" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewrefreshmode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_get_viewrefreshtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_get_viewrefreshtime",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_get_viewrefreshtime" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_viewrefreshtime();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_set_viewrefreshtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Link_set_viewrefreshtime",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_set_viewrefreshtime" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Link_set_viewrefreshtime" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_viewrefreshtime(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_has_viewrefreshtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_has_viewrefreshtime",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_has_viewrefreshtime" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewrefreshtime();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_clear_viewrefreshtime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_clear_viewrefreshtime",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_clear_viewrefreshtime" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewrefreshtime();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_get_viewboundscale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_get_viewboundscale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_get_viewboundscale" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_viewboundscale();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_set_viewboundscale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Link_set_viewboundscale",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_set_viewboundscale" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Link_set_viewboundscale" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_viewboundscale(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_has_viewboundscale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_has_viewboundscale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_has_viewboundscale" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewboundscale();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_clear_viewboundscale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_clear_viewboundscale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_clear_viewboundscale" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewboundscale();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_get_viewformat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_get_viewformat",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_get_viewformat" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_viewformat();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_set_viewformat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Link_set_viewformat",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_set_viewformat" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Link_set_viewformat" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Link_set_viewformat" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_viewformat((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_has_viewformat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_has_viewformat",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_has_viewformat" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewformat();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_clear_viewformat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_clear_viewformat",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_clear_viewformat" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewformat();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_get_httpquery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_get_httpquery",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_get_httpquery" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_httpquery();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_set_httpquery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Link_set_httpquery",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_set_httpquery" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Link_set_httpquery" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Link_set_httpquery" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_httpquery((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_has_httpquery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_has_httpquery",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_has_httpquery" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_httpquery();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_clear_httpquery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_clear_httpquery",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_clear_httpquery" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_httpquery();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Link_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Link > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::BasicLink > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Link_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Link_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Link >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Link > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Link > * >(argp1);
  }
  result = kmldom_Link_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::BasicLink > *smartresult = result ? new boost::intrusive_ptr<  kmldom::BasicLink >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BasicLink_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Link *arg1 = (kmldom::Link *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Link > tempshared1 ;
  boost::intrusive_ptr< kmldom::Link > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Link",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Link" "', argument " "1"" of type '" "kmldom::Link *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Link > * >(argp1);
      arg1 = const_cast< kmldom::Link * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Link_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ListStyle_get_listitemtype(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListStyle_get_listitemtype",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_get_listitemtype" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_listitemtype();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_set_listitemtype(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ListStyle_set_listitemtype",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_set_listitemtype" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListStyle_set_listitemtype" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_listitemtype(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_has_listitemtype(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListStyle_has_listitemtype",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_has_listitemtype" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_listitemtype();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_clear_listitemtype(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListStyle_clear_listitemtype",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_clear_listitemtype" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_listitemtype();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_get_bgcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmlbase::Color32 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListStyle_get_bgcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_get_bgcolor" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (kmlbase::Color32 *) &(arg1)->get_bgcolor();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_kmlbase__Color32, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_set_bgcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  kmlbase::Color32 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ListStyle_set_bgcolor",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_set_bgcolor" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_kmlbase__Color32,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListStyle_set_bgcolor" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ListStyle_set_bgcolor" "', argument " "2"" of type '" "kmlbase::Color32 const &""'"); 
  }
  arg2 = reinterpret_cast< kmlbase::Color32 * >(argp2);
  (arg1)->set_bgcolor((kmlbase::Color32 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_has_bgcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListStyle_has_bgcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_has_bgcolor" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_bgcolor();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_clear_bgcolor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListStyle_clear_bgcolor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_clear_bgcolor" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_bgcolor();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_add_itemicon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  kmldom::ItemIconPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ListStyle_add_itemicon",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_add_itemicon" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ListStyle_add_itemicon" "', argument " "2"" of type '" "kmldom::ItemIconPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ItemIconPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ItemIconPtr * >(argp2);
  }
  (arg1)->add_itemicon(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_get_itemicon_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListStyle_get_itemicon_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_get_itemicon_array_size" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_itemicon_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_get_itemicon_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::ItemIconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ListStyle_get_itemicon_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_get_itemicon_array_at" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ListStyle_get_itemicon_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_itemicon_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::ItemIcon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ItemIcon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ListStyle_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ListStyle > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::SubStyle > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ListStyle_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ListStyle_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ListStyle >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ListStyle > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ListStyle > * >(argp1);
  }
  result = kmldom_ListStyle_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::SubStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SubStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SubStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ListStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ListStyle *arg1 = (kmldom::ListStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ListStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::ListStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ListStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ListStyle" "', argument " "1"" of type '" "kmldom::ListStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ListStyle > * >(argp1);
      arg1 = const_cast< kmldom::ListStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ListStyle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Location_get_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_get_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_get_longitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_longitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_set_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Location_set_longitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_set_longitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Location_set_longitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_longitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_has_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_has_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_has_longitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_longitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_clear_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_clear_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_clear_longitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_longitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_get_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_get_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_get_latitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_latitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_set_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Location_set_latitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_set_latitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Location_set_latitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_latitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_has_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_has_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_has_latitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_latitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_clear_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_clear_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_clear_latitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_latitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_get_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_get_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_get_altitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_altitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_set_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Location_set_altitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_set_altitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Location_set_altitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_altitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_has_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_has_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_has_altitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_clear_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_clear_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_clear_altitude" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Location_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Location > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Location_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Location_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Location >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Location > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Location > * >(argp1);
  }
  result = kmldom_Location_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Location(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Location *arg1 = (kmldom::Location *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Location > tempshared1 ;
  boost::intrusive_ptr< kmldom::Location > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Location",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Location" "', argument " "1"" of type '" "kmldom::Location *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Location > * >(argp1);
      arg1 = const_cast< kmldom::Location * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Location_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LookAt_get_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_get_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_get_longitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_longitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_set_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAt_set_longitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_set_longitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAt_set_longitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_longitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_has_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_has_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_has_longitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_longitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_clear_longitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_clear_longitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_clear_longitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_longitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_get_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_get_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_get_latitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_latitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_set_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAt_set_latitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_set_latitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAt_set_latitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_latitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_has_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_has_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_has_latitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_latitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_clear_latitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_clear_latitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_clear_latitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_latitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_get_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_get_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_get_altitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_altitude();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_set_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAt_set_altitude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_set_altitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAt_set_altitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_altitude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_has_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_has_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_has_altitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_clear_altitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_clear_altitude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_clear_altitude" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_get_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_get_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_get_heading" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_heading();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_set_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAt_set_heading",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_set_heading" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAt_set_heading" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_heading(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_has_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_has_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_has_heading" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_heading();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_clear_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_clear_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_clear_heading" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_heading();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_get_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_get_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_get_tilt" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_tilt();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_set_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAt_set_tilt",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_set_tilt" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAt_set_tilt" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_tilt(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_has_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_has_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_has_tilt" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_tilt();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_clear_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_clear_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_clear_tilt" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_tilt();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_get_range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_get_range",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_get_range" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_range();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_set_range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAt_set_range",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_set_range" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAt_set_range" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_range(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_has_range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_has_range",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_has_range" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_range();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_clear_range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_clear_range",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_clear_range" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_range();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_get_altitudemode" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAt_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_set_altitudemode" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAt_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_has_altitudemode" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_clear_altitudemode" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LookAt_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LookAt_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LookAt_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::LookAt > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::AbstractView > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LookAt_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LookAt_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::LookAt >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::LookAt > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::LookAt > * >(argp1);
  }
  result = kmldom_LookAt_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::AbstractView > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractView >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LookAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::LookAt *arg1 = (kmldom::LookAt *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::LookAt > tempshared1 ;
  boost::intrusive_ptr< kmldom::LookAt > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LookAt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LookAt" "', argument " "1"" of type '" "kmldom::LookAt *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::LookAt > * >(argp1);
      arg1 = const_cast< kmldom::LookAt * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LookAt_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Orientation_get_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_get_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_get_heading" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_heading();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_set_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Orientation_set_heading",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_set_heading" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Orientation_set_heading" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_heading(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_has_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_has_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_has_heading" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_heading();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_clear_heading(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_clear_heading",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_clear_heading" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_heading();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_get_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_get_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_get_tilt" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_tilt();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_set_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Orientation_set_tilt",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_set_tilt" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Orientation_set_tilt" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_tilt(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_has_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_has_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_has_tilt" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_tilt();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_clear_tilt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_clear_tilt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_clear_tilt" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_tilt();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_get_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_get_roll",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_get_roll" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_roll();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_set_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Orientation_set_roll",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_set_roll" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Orientation_set_roll" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_roll(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_has_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_has_roll",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_has_roll" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_roll();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_clear_roll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_clear_roll",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_clear_roll" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_roll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Orientation_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Orientation > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Orientation_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Orientation_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Orientation >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Orientation > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Orientation > * >(argp1);
  }
  result = kmldom_Orientation_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Orientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Orientation *arg1 = (kmldom::Orientation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Orientation > tempshared1 ;
  boost::intrusive_ptr< kmldom::Orientation > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Orientation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Orientation" "', argument " "1"" of type '" "kmldom::Orientation *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Orientation > * >(argp1);
      arg1 = const_cast< kmldom::Orientation * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Orientation_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Scale_get_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_get_x",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_get_x" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_x();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_set_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Scale_set_x",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_set_x" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Scale_set_x" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_x(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_has_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_has_x",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_has_x" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_x();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_clear_x(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_clear_x",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_clear_x" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_x();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_get_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_get_y",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_get_y" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_y();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_set_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Scale_set_y",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_set_y" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Scale_set_y" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_y(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_has_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_has_y",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_has_y" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_y();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_clear_y(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_clear_y",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_clear_y" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_y();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_get_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_get_z",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_get_z" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_z();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_set_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Scale_set_z",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_set_z" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Scale_set_z" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_z(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_has_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_has_z",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_has_z" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_z();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_clear_z(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_clear_z",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_clear_z" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_z();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Scale_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Scale > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Scale_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Scale_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Scale >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Scale > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Scale > * >(argp1);
  }
  result = kmldom_Scale_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Scale *arg1 = (kmldom::Scale *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Scale > tempshared1 ;
  boost::intrusive_ptr< kmldom::Scale > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Scale" "', argument " "1"" of type '" "kmldom::Scale *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Scale > * >(argp1);
      arg1 = const_cast< kmldom::Scale * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Scale_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Alias_get_targethref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Alias_get_targethref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_get_targethref" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_targethref();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Alias_set_targethref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Alias_set_targethref",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_set_targethref" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Alias_set_targethref" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Alias_set_targethref" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_targethref((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Alias_has_targethref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Alias_has_targethref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_has_targethref" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_targethref();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Alias_clear_targethref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Alias_clear_targethref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_clear_targethref" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_targethref();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Alias_get_sourcehref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Alias_get_sourcehref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_get_sourcehref" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_sourcehref();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Alias_set_sourcehref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Alias_set_sourcehref",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_set_sourcehref" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Alias_set_sourcehref" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Alias_set_sourcehref" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_sourcehref((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Alias_has_sourcehref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Alias_has_sourcehref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_has_sourcehref" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_sourcehref();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Alias_clear_sourcehref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Alias_clear_sourcehref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_clear_sourcehref" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_sourcehref();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Alias_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Alias > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Alias_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Alias_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Alias >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Alias > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Alias > * >(argp1);
  }
  result = kmldom_Alias_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Alias(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Alias *arg1 = (kmldom::Alias *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Alias > tempshared1 ;
  boost::intrusive_ptr< kmldom::Alias > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Alias",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Alias" "', argument " "1"" of type '" "kmldom::Alias *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Alias > * >(argp1);
      arg1 = const_cast< kmldom::Alias * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Alias_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ResourceMap_add_alias(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ResourceMap *arg1 = (kmldom::ResourceMap *) 0 ;
  kmldom::AliasPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ResourceMap > tempshared1 ;
  boost::intrusive_ptr< kmldom::ResourceMap > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ResourceMap_add_alias",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResourceMap_add_alias" "', argument " "1"" of type '" "kmldom::ResourceMap *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      arg1 = const_cast< kmldom::ResourceMap * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      arg1 = const_cast< kmldom::ResourceMap * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ResourceMap_add_alias" "', argument " "2"" of type '" "kmldom::AliasPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::AliasPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::AliasPtr * >(argp2);
  }
  (arg1)->add_alias(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ResourceMap_get_alias_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ResourceMap *arg1 = (kmldom::ResourceMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ResourceMap > tempshared1 ;
  boost::intrusive_ptr< kmldom::ResourceMap > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ResourceMap_get_alias_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResourceMap_get_alias_array_size" "', argument " "1"" of type '" "kmldom::ResourceMap *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      arg1 = const_cast< kmldom::ResourceMap * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      arg1 = const_cast< kmldom::ResourceMap * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_alias_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ResourceMap_get_alias_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ResourceMap *arg1 = (kmldom::ResourceMap *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ResourceMap > tempshared1 ;
  boost::intrusive_ptr< kmldom::ResourceMap > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::AliasPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ResourceMap_get_alias_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResourceMap_get_alias_array_at" "', argument " "1"" of type '" "kmldom::ResourceMap *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      arg1 = const_cast< kmldom::ResourceMap * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      arg1 = const_cast< kmldom::ResourceMap * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ResourceMap_get_alias_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_alias_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Alias > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Alias >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ResourceMap_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ResourceMap > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ResourceMap_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResourceMap_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ResourceMap >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ResourceMap > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ResourceMap > * >(argp1);
  }
  result = kmldom_ResourceMap_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ResourceMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ResourceMap *arg1 = (kmldom::ResourceMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ResourceMap > tempshared1 ;
  boost::intrusive_ptr< kmldom::ResourceMap > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ResourceMap",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ResourceMap" "', argument " "1"" of type '" "kmldom::ResourceMap *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      arg1 = const_cast< kmldom::ResourceMap * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ResourceMap > * >(argp1);
      arg1 = const_cast< kmldom::ResourceMap * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ResourceMap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Model_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_get_altitudemode" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Model_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_set_altitudemode" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Model_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_has_altitudemode" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_clear_altitudemode" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Model_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Model_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_get_location(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LocationPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_get_location",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_get_location" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_location();
  {
    boost::intrusive_ptr<  kmldom::Location > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Location >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_set_location(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  kmldom::LocationPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Model_set_location",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_set_location" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_set_location" "', argument " "2"" of type '" "kmldom::LocationPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LocationPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LocationPtr * >(argp2);
  }
  (arg1)->set_location(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_has_location(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_has_location",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_has_location" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_location();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_clear_location(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_clear_location",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_clear_location" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_location();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_get_orientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OrientationPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_get_orientation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_get_orientation" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_orientation();
  {
    boost::intrusive_ptr<  kmldom::Orientation > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Orientation >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_set_orientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  kmldom::OrientationPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Model_set_orientation",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_set_orientation" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_set_orientation" "', argument " "2"" of type '" "kmldom::OrientationPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::OrientationPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::OrientationPtr * >(argp2);
  }
  (arg1)->set_orientation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_has_orientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_has_orientation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_has_orientation" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_orientation();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_clear_orientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_clear_orientation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_clear_orientation" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_orientation();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_get_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ScalePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_get_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_get_scale" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_scale();
  {
    boost::intrusive_ptr<  kmldom::Scale > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Scale >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_set_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  kmldom::ScalePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Model_set_scale",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_set_scale" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_set_scale" "', argument " "2"" of type '" "kmldom::ScalePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ScalePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ScalePtr * >(argp2);
  }
  (arg1)->set_scale(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_has_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_has_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_has_scale" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_scale();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_clear_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_clear_scale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_clear_scale" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_scale();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_get_link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_get_link",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_get_link" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_link();
  {
    boost::intrusive_ptr<  kmldom::Link > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Link >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_set_link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  kmldom::LinkPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Model_set_link",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_set_link" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_set_link" "', argument " "2"" of type '" "kmldom::LinkPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LinkPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LinkPtr * >(argp2);
  }
  (arg1)->set_link(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_has_link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_has_link",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_has_link" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_link();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_clear_link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_clear_link",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_clear_link" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_link();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_get_resourcemap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ResourceMapPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_get_resourcemap",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_get_resourcemap" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_resourcemap();
  {
    boost::intrusive_ptr<  kmldom::ResourceMap > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ResourceMap >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_set_resourcemap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  kmldom::ResourceMapPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Model_set_resourcemap",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_set_resourcemap" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Model_set_resourcemap" "', argument " "2"" of type '" "kmldom::ResourceMapPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ResourceMapPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ResourceMapPtr * >(argp2);
  }
  (arg1)->set_resourcemap(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_has_resourcemap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_has_resourcemap",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_has_resourcemap" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_resourcemap();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_clear_resourcemap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_clear_resourcemap",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_clear_resourcemap" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_resourcemap();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Model_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Model > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Geometry > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Model_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Model_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Model >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Model > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Model > * >(argp1);
  }
  result = kmldom_Model_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Model(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Model *arg1 = (kmldom::Model *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Model > tempshared1 ;
  boost::intrusive_ptr< kmldom::Model > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Model",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Model" "', argument " "1"" of type '" "kmldom::Model *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Model > * >(argp1);
      arg1 = const_cast< kmldom::Model * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Model_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MultiGeometry_add_geometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::MultiGeometry *arg1 = (kmldom::MultiGeometry *) 0 ;
  kmldom::GeometryPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::MultiGeometry > tempshared1 ;
  boost::intrusive_ptr< kmldom::MultiGeometry > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiGeometry_add_geometry",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiGeometry_add_geometry" "', argument " "1"" of type '" "kmldom::MultiGeometry *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      arg1 = const_cast< kmldom::MultiGeometry * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      arg1 = const_cast< kmldom::MultiGeometry * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MultiGeometry_add_geometry" "', argument " "2"" of type '" "kmldom::GeometryPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::GeometryPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::GeometryPtr * >(argp2);
  }
  (arg1)->add_geometry(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiGeometry_get_geometry_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::MultiGeometry *arg1 = (kmldom::MultiGeometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::MultiGeometry > tempshared1 ;
  boost::intrusive_ptr< kmldom::MultiGeometry > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiGeometry_get_geometry_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiGeometry_get_geometry_array_size" "', argument " "1"" of type '" "kmldom::MultiGeometry *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      arg1 = const_cast< kmldom::MultiGeometry * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      arg1 = const_cast< kmldom::MultiGeometry * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_geometry_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiGeometry_get_geometry_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::MultiGeometry *arg1 = (kmldom::MultiGeometry *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::MultiGeometry > tempshared1 ;
  boost::intrusive_ptr< kmldom::MultiGeometry > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::GeometryPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MultiGeometry_get_geometry_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiGeometry_get_geometry_array_at" "', argument " "1"" of type '" "kmldom::MultiGeometry *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      arg1 = const_cast< kmldom::MultiGeometry * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      arg1 = const_cast< kmldom::MultiGeometry * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MultiGeometry_get_geometry_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_geometry_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MultiGeometry_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::MultiGeometry > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Geometry > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MultiGeometry_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MultiGeometry_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::MultiGeometry >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::MultiGeometry > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::MultiGeometry > * >(argp1);
  }
  result = kmldom_MultiGeometry_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MultiGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::MultiGeometry *arg1 = (kmldom::MultiGeometry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::MultiGeometry > tempshared1 ;
  boost::intrusive_ptr< kmldom::MultiGeometry > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MultiGeometry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MultiGeometry" "', argument " "1"" of type '" "kmldom::MultiGeometry *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      arg1 = const_cast< kmldom::MultiGeometry * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::MultiGeometry > * >(argp1);
      arg1 = const_cast< kmldom::MultiGeometry * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MultiGeometry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_NetworkLink_get_refreshvisibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_get_refreshvisibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_get_refreshvisibility" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_refreshvisibility();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_set_refreshvisibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLink_set_refreshvisibility",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_set_refreshvisibility" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NetworkLink_set_refreshvisibility" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_refreshvisibility(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_has_refreshvisibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_has_refreshvisibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_has_refreshvisibility" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_refreshvisibility();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_clear_refreshvisibility(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_clear_refreshvisibility",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_clear_refreshvisibility" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_refreshvisibility();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_get_flytoview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_get_flytoview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_get_flytoview" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_flytoview();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_set_flytoview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLink_set_flytoview",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_set_flytoview" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NetworkLink_set_flytoview" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_flytoview(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_has_flytoview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_has_flytoview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_has_flytoview" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_flytoview();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_clear_flytoview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_clear_flytoview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_clear_flytoview" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_flytoview();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_get_link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_get_link",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_get_link" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_link();
  {
    boost::intrusive_ptr<  kmldom::Link > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Link >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_set_link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  kmldom::LinkPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLink_set_link",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_set_link" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLink_set_link" "', argument " "2"" of type '" "kmldom::LinkPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LinkPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LinkPtr * >(argp2);
  }
  (arg1)->set_link(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_has_link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_has_link",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_has_link" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_link();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_clear_link(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_clear_link",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_clear_link" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_link();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLink_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::NetworkLink > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLink_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLink_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::NetworkLink >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::NetworkLink > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::NetworkLink > * >(argp1);
  }
  result = kmldom_NetworkLink_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NetworkLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLink *arg1 = (kmldom::NetworkLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_NetworkLink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NetworkLink" "', argument " "1"" of type '" "kmldom::NetworkLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLink > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NetworkLink_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Update_get_targethref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Update *arg1 = (kmldom::Update *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Update > tempshared1 ;
  boost::intrusive_ptr< kmldom::Update > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Update_get_targethref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Update_get_targethref" "', argument " "1"" of type '" "kmldom::Update *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_targethref();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Update_has_targethref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Update *arg1 = (kmldom::Update *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Update > tempshared1 ;
  boost::intrusive_ptr< kmldom::Update > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Update_has_targethref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Update_has_targethref" "', argument " "1"" of type '" "kmldom::Update *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_targethref();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Update_set_targethref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Update *arg1 = (kmldom::Update *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Update > tempshared1 ;
  boost::intrusive_ptr< kmldom::Update > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Update_set_targethref",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Update_set_targethref" "', argument " "1"" of type '" "kmldom::Update *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Update_set_targethref" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Update_set_targethref" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_targethref((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Update_clear_targethref(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Update *arg1 = (kmldom::Update *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Update > tempshared1 ;
  boost::intrusive_ptr< kmldom::Update > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Update_clear_targethref",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Update_clear_targethref" "', argument " "1"" of type '" "kmldom::Update *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_targethref();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Update_add_updateoperation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Update *arg1 = (kmldom::Update *) 0 ;
  kmldom::UpdateOperationPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Update > tempshared1 ;
  boost::intrusive_ptr< kmldom::Update > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Update_add_updateoperation",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Update_add_updateoperation" "', argument " "1"" of type '" "kmldom::Update *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Update_add_updateoperation" "', argument " "2"" of type '" "kmldom::UpdateOperationPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::UpdateOperationPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::UpdateOperationPtr * >(argp2);
  }
  (arg1)->add_updateoperation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Update_get_updateoperation_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Update *arg1 = (kmldom::Update *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Update > tempshared1 ;
  boost::intrusive_ptr< kmldom::Update > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Update_get_updateoperation_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Update_get_updateoperation_array_size" "', argument " "1"" of type '" "kmldom::Update *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_updateoperation_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Update_get_updateoperation_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Update *arg1 = (kmldom::Update *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Update > tempshared1 ;
  boost::intrusive_ptr< kmldom::Update > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::UpdateOperationPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Update_get_updateoperation_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Update_get_updateoperation_array_at" "', argument " "1"" of type '" "kmldom::Update *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Update_get_updateoperation_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_updateoperation_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::UpdateOperation > *smartresult = result ? new boost::intrusive_ptr<  kmldom::UpdateOperation >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Update_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Update > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Update_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Update_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Update >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Update > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Update > * >(argp1);
  }
  result = kmldom_Update_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Update *arg1 = (kmldom::Update *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Update > tempshared1 ;
  boost::intrusive_ptr< kmldom::Update > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Update",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Update" "', argument " "1"" of type '" "kmldom::Update *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Update > * >(argp1);
      arg1 = const_cast< kmldom::Update * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Update_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_minrefreshperiod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_minrefreshperiod",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_minrefreshperiod" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_minrefreshperiod();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_minrefreshperiod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_minrefreshperiod",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_minrefreshperiod" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NetworkLinkControl_set_minrefreshperiod" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_minrefreshperiod(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_minrefreshperiod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_minrefreshperiod",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_minrefreshperiod" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_minrefreshperiod();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_minrefreshperiod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_minrefreshperiod",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_minrefreshperiod" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_minrefreshperiod();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_maxsessionlength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_maxsessionlength",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_maxsessionlength" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_maxsessionlength();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_maxsessionlength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_maxsessionlength",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_maxsessionlength" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NetworkLinkControl_set_maxsessionlength" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_maxsessionlength(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_maxsessionlength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_maxsessionlength",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_maxsessionlength" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_maxsessionlength();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_maxsessionlength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_maxsessionlength",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_maxsessionlength" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_maxsessionlength();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_cookie(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_cookie",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_cookie" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_cookie();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_cookie(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_cookie",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_cookie" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLinkControl_set_cookie" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NetworkLinkControl_set_cookie" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_cookie((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_cookie(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_cookie",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_cookie" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_cookie();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_cookie(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_cookie",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_cookie" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_cookie();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_message(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_message",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_message" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_message();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_message(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_message",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_message" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLinkControl_set_message" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NetworkLinkControl_set_message" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_message((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_message(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_message",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_message" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_message();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_message(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_message",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_message" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_message();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_linkname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_linkname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_linkname" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_linkname();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_linkname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_linkname",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_linkname" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLinkControl_set_linkname" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NetworkLinkControl_set_linkname" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_linkname((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_linkname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_linkname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_linkname" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_linkname();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_linkname(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_linkname",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_linkname" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_linkname();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_linkdescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_linkdescription",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_linkdescription" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_linkdescription();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_linkdescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_linkdescription",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_linkdescription" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLinkControl_set_linkdescription" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NetworkLinkControl_set_linkdescription" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_linkdescription((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_linkdescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_linkdescription",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_linkdescription" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_linkdescription();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_linkdescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_linkdescription",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_linkdescription" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_linkdescription();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_linksnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinkSnippetPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_linksnippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_linksnippet" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_linksnippet();
  {
    boost::intrusive_ptr<  kmldom::LinkSnippet > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LinkSnippet >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_linksnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  kmldom::LinkSnippetPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_linksnippet",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_linksnippet" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLinkControl_set_linksnippet" "', argument " "2"" of type '" "kmldom::LinkSnippetPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LinkSnippetPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LinkSnippetPtr * >(argp2);
  }
  (arg1)->set_linksnippet(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_linksnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_linksnippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_linksnippet" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_linksnippet();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_linksnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_linksnippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_linksnippet" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_linksnippet();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_expires(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_expires",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_expires" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_expires();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_expires(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_expires",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_expires" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLinkControl_set_expires" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NetworkLinkControl_set_expires" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_expires((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_expires(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_expires",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_expires" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_expires();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_expires(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_expires",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_expires" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_expires();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::UpdatePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_update",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_update" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_update();
  {
    boost::intrusive_ptr<  kmldom::Update > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Update >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  kmldom::UpdatePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_update",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_update" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLinkControl_set_update" "', argument " "2"" of type '" "kmldom::UpdatePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::UpdatePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::UpdatePtr * >(argp2);
  }
  (arg1)->set_update(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_update",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_update" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_update();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_update",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_update" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_update();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_get_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AbstractViewPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_get_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_get_abstractview" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_abstractview();
  {
    boost::intrusive_ptr<  kmldom::AbstractView > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractView >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_set_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  kmldom::AbstractViewPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:NetworkLinkControl_set_abstractview",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_set_abstractview" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NetworkLinkControl_set_abstractview" "', argument " "2"" of type '" "kmldom::AbstractViewPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::AbstractViewPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::AbstractViewPtr * >(argp2);
  }
  (arg1)->set_abstractview(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_has_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_has_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_has_abstractview" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_abstractview();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_clear_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_clear_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_clear_abstractview" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_abstractview();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NetworkLinkControl_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:NetworkLinkControl_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NetworkLinkControl_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::NetworkLinkControl >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::NetworkLinkControl > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::NetworkLinkControl > * >(argp1);
  }
  result = kmldom_NetworkLinkControl_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NetworkLinkControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::NetworkLinkControl *arg1 = (kmldom::NetworkLinkControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::NetworkLinkControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_NetworkLinkControl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NetworkLinkControl" "', argument " "1"" of type '" "kmldom::NetworkLinkControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::NetworkLinkControl > * >(argp1);
      arg1 = const_cast< kmldom::NetworkLinkControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NetworkLinkControl_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Pair_get_key(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_get_key",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_get_key" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_key();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_set_key(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Pair_set_key",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_set_key" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Pair_set_key" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_key(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_has_key(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_has_key",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_has_key" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_key();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_clear_key(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_clear_key",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_clear_key" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_key();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_get_styleurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_get_styleurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_get_styleurl" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_styleurl();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_set_styleurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Pair_set_styleurl",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_set_styleurl" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Pair_set_styleurl" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Pair_set_styleurl" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_styleurl((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_has_styleurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_has_styleurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_has_styleurl" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_styleurl();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_clear_styleurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_clear_styleurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_clear_styleurl" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_styleurl();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_get_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::StyleSelectorPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_get_styleselector",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_get_styleselector" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_styleselector();
  {
    boost::intrusive_ptr<  kmldom::StyleSelector > *smartresult = result ? new boost::intrusive_ptr<  kmldom::StyleSelector >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_set_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  kmldom::StyleSelectorPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Pair_set_styleselector",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_set_styleselector" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Pair_set_styleselector" "', argument " "2"" of type '" "kmldom::StyleSelectorPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::StyleSelectorPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::StyleSelectorPtr * >(argp2);
  }
  (arg1)->set_styleselector(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_has_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_has_styleselector",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_has_styleselector" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_styleselector();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_clear_styleselector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_clear_styleselector",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_clear_styleselector" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_styleselector();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Pair_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Pair > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Pair_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Pair_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Pair >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Pair > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Pair > * >(argp1);
  }
  result = kmldom_Pair_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Pair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Pair *arg1 = (kmldom::Pair *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Pair > tempshared1 ;
  boost::intrusive_ptr< kmldom::Pair > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Pair",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Pair" "', argument " "1"" of type '" "kmldom::Pair *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Pair > * >(argp1);
      arg1 = const_cast< kmldom::Pair * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Pair_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ViewVolume_get_leftfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_get_leftfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_get_leftfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_leftfov();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_set_leftfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ViewVolume_set_leftfov",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_set_leftfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ViewVolume_set_leftfov" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_leftfov(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_has_leftfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_has_leftfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_has_leftfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_leftfov();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_clear_leftfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_clear_leftfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_clear_leftfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_leftfov();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_get_rightfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_get_rightfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_get_rightfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_rightfov();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_set_rightfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ViewVolume_set_rightfov",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_set_rightfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ViewVolume_set_rightfov" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_rightfov(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_has_rightfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_has_rightfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_has_rightfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_rightfov();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_clear_rightfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_clear_rightfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_clear_rightfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_rightfov();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_get_bottomfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_get_bottomfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_get_bottomfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_bottomfov();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_set_bottomfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ViewVolume_set_bottomfov",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_set_bottomfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ViewVolume_set_bottomfov" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_bottomfov(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_has_bottomfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_has_bottomfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_has_bottomfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_bottomfov();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_clear_bottomfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_clear_bottomfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_clear_bottomfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_bottomfov();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_get_topfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_get_topfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_get_topfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_topfov();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_set_topfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ViewVolume_set_topfov",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_set_topfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ViewVolume_set_topfov" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_topfov(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_has_topfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_has_topfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_has_topfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_topfov();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_clear_topfov(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_clear_topfov",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_clear_topfov" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_topfov();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_get_near(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_get_near",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_get_near" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_near();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_set_near(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ViewVolume_set_near",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_set_near" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ViewVolume_set_near" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_near(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_has_near(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_has_near",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_has_near" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_near();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_clear_near(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_clear_near",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_clear_near" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_near();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ViewVolume_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ViewVolume > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ViewVolume_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ViewVolume_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ViewVolume >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ViewVolume > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ViewVolume > * >(argp1);
  }
  result = kmldom_ViewVolume_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ViewVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ViewVolume *arg1 = (kmldom::ViewVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ViewVolume > tempshared1 ;
  boost::intrusive_ptr< kmldom::ViewVolume > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ViewVolume",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ViewVolume" "', argument " "1"" of type '" "kmldom::ViewVolume *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ViewVolume > * >(argp1);
      arg1 = const_cast< kmldom::ViewVolume * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ViewVolume_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Point_get_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_get_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_get_extrude" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_extrude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_set_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Point_set_extrude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_set_extrude" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point_set_extrude" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_extrude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_has_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_has_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_has_extrude" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_extrude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_clear_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_clear_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_clear_extrude" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_extrude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_get_altitudemode" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Point_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_set_altitudemode" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_has_altitudemode" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_clear_altitudemode" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Point_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Point_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_get_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CoordinatesPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_get_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_get_coordinates" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_coordinates();
  {
    boost::intrusive_ptr<  kmldom::Coordinates > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Coordinates >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_set_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  kmldom::CoordinatesPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Point_set_coordinates",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_set_coordinates" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Point_set_coordinates" "', argument " "2"" of type '" "kmldom::CoordinatesPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::CoordinatesPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::CoordinatesPtr * >(argp2);
  }
  (arg1)->set_coordinates(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_has_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_has_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_has_coordinates" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_coordinates();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_clear_coordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_clear_coordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_clear_coordinates" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_coordinates();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Point_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Point > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Geometry > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Point_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Point_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Point >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Point > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Point > * >(argp1);
  }
  result = kmldom_Point_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Point *arg1 = (kmldom::Point *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Point > tempshared1 ;
  boost::intrusive_ptr< kmldom::Point > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Point",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Point" "', argument " "1"" of type '" "kmldom::Point *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Point > * >(argp1);
      arg1 = const_cast< kmldom::Point * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Point_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PhotoOverlay_get_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_get_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_get_rotation" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_rotation();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_set_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PhotoOverlay_set_rotation",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_set_rotation" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PhotoOverlay_set_rotation" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_rotation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_has_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_has_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_has_rotation" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_rotation();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_clear_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_clear_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_clear_rotation" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_rotation();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_get_viewvolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ViewVolumePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_get_viewvolume",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_get_viewvolume" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_viewvolume();
  {
    boost::intrusive_ptr<  kmldom::ViewVolume > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ViewVolume >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_set_viewvolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  kmldom::ViewVolumePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PhotoOverlay_set_viewvolume",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_set_viewvolume" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhotoOverlay_set_viewvolume" "', argument " "2"" of type '" "kmldom::ViewVolumePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ViewVolumePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ViewVolumePtr * >(argp2);
  }
  (arg1)->set_viewvolume(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_has_viewvolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_has_viewvolume",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_has_viewvolume" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_viewvolume();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_clear_viewvolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_clear_viewvolume",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_clear_viewvolume" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_viewvolume();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_get_imagepyramid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ImagePyramidPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_get_imagepyramid",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_get_imagepyramid" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_imagepyramid();
  {
    boost::intrusive_ptr<  kmldom::ImagePyramid > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ImagePyramid >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_set_imagepyramid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  kmldom::ImagePyramidPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PhotoOverlay_set_imagepyramid",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_set_imagepyramid" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhotoOverlay_set_imagepyramid" "', argument " "2"" of type '" "kmldom::ImagePyramidPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ImagePyramidPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ImagePyramidPtr * >(argp2);
  }
  (arg1)->set_imagepyramid(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_has_imagepyramid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_has_imagepyramid",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_has_imagepyramid" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_imagepyramid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_clear_imagepyramid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_clear_imagepyramid",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_clear_imagepyramid" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_imagepyramid();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_get_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PointPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_get_point",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_get_point" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_point();
  {
    boost::intrusive_ptr<  kmldom::Point > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Point >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_set_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  kmldom::PointPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PhotoOverlay_set_point",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_set_point" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PhotoOverlay_set_point" "', argument " "2"" of type '" "kmldom::PointPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::PointPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::PointPtr * >(argp2);
  }
  (arg1)->set_point(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_has_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_has_point",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_has_point" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_point();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_clear_point(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_clear_point",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_clear_point" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_point();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_get_shape(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_get_shape",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_get_shape" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_shape();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_has_shape(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_has_shape",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_has_shape" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_shape();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_set_shape(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PhotoOverlay_set_shape",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_set_shape" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PhotoOverlay_set_shape" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_shape(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_clear_shape(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_clear_shape",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_clear_shape" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_shape();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PhotoOverlay_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::PhotoOverlay > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PhotoOverlay_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PhotoOverlay_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::PhotoOverlay >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::PhotoOverlay > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::PhotoOverlay > * >(argp1);
  }
  result = kmldom_PhotoOverlay_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Overlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Overlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PhotoOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PhotoOverlay *arg1 = (kmldom::PhotoOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::PhotoOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PhotoOverlay",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PhotoOverlay" "', argument " "1"" of type '" "kmldom::PhotoOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PhotoOverlay > * >(argp1);
      arg1 = const_cast< kmldom::PhotoOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PhotoOverlay_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Placemark_get_geometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Placemark *arg1 = (kmldom::Placemark *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Placemark > tempshared1 ;
  boost::intrusive_ptr< kmldom::Placemark > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GeometryPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Placemark_get_geometry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Placemark_get_geometry" "', argument " "1"" of type '" "kmldom::Placemark *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_geometry();
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Placemark_set_geometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Placemark *arg1 = (kmldom::Placemark *) 0 ;
  kmldom::GeometryPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Placemark > tempshared1 ;
  boost::intrusive_ptr< kmldom::Placemark > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Placemark_set_geometry",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Placemark_set_geometry" "', argument " "1"" of type '" "kmldom::Placemark *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Placemark_set_geometry" "', argument " "2"" of type '" "kmldom::GeometryPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::GeometryPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::GeometryPtr * >(argp2);
  }
  (arg1)->set_geometry(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Placemark_has_geometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Placemark *arg1 = (kmldom::Placemark *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Placemark > tempshared1 ;
  boost::intrusive_ptr< kmldom::Placemark > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Placemark_has_geometry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Placemark_has_geometry" "', argument " "1"" of type '" "kmldom::Placemark *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_geometry();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Placemark_clear_geometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Placemark *arg1 = (kmldom::Placemark *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Placemark > tempshared1 ;
  boost::intrusive_ptr< kmldom::Placemark > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Placemark_clear_geometry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Placemark_clear_geometry" "', argument " "1"" of type '" "kmldom::Placemark *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_geometry();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Placemark_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Placemark > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Placemark_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Placemark_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Placemark >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Placemark > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Placemark > * >(argp1);
  }
  result = kmldom_Placemark_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Placemark(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Placemark *arg1 = (kmldom::Placemark *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Placemark > tempshared1 ;
  boost::intrusive_ptr< kmldom::Placemark > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Placemark",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Placemark" "', argument " "1"" of type '" "kmldom::Placemark *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Placemark > * >(argp1);
      arg1 = const_cast< kmldom::Placemark * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Placemark_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PolyStyle_get_fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PolyStyle_get_fill",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_get_fill" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_fill();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolyStyle_set_fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PolyStyle_set_fill",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_set_fill" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PolyStyle_set_fill" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_fill(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolyStyle_has_fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PolyStyle_has_fill",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_has_fill" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_fill();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolyStyle_clear_fill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PolyStyle_clear_fill",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_clear_fill" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_fill();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolyStyle_get_outline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PolyStyle_get_outline",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_get_outline" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_outline();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolyStyle_set_outline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PolyStyle_set_outline",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_set_outline" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PolyStyle_set_outline" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_outline(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolyStyle_has_outline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PolyStyle_has_outline",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_has_outline" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_outline();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolyStyle_clear_outline(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PolyStyle_clear_outline",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_clear_outline" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_outline();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PolyStyle_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::PolyStyle > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::ColorStyle > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PolyStyle_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PolyStyle_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::PolyStyle >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::PolyStyle > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::PolyStyle > * >(argp1);
  }
  result = kmldom_PolyStyle_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::ColorStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ColorStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PolyStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::PolyStyle *arg1 = (kmldom::PolyStyle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::PolyStyle > tempshared1 ;
  boost::intrusive_ptr< kmldom::PolyStyle > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PolyStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PolyStyle" "', argument " "1"" of type '" "kmldom::PolyStyle *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::PolyStyle > * >(argp1);
      arg1 = const_cast< kmldom::PolyStyle * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PolyStyle_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OuterBoundaryIs_get_linearring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::OuterBoundaryIs *arg1 = (kmldom::OuterBoundaryIs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinearRingPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OuterBoundaryIs_get_linearring",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OuterBoundaryIs_get_linearring" "', argument " "1"" of type '" "kmldom::OuterBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_linearring();
  {
    boost::intrusive_ptr<  kmldom::LinearRing > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LinearRing >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OuterBoundaryIs_set_linearring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::OuterBoundaryIs *arg1 = (kmldom::OuterBoundaryIs *) 0 ;
  kmldom::LinearRingPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OuterBoundaryIs_set_linearring",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OuterBoundaryIs_set_linearring" "', argument " "1"" of type '" "kmldom::OuterBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OuterBoundaryIs_set_linearring" "', argument " "2"" of type '" "kmldom::LinearRingPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LinearRingPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LinearRingPtr * >(argp2);
  }
  (arg1)->set_linearring(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OuterBoundaryIs_has_linearring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::OuterBoundaryIs *arg1 = (kmldom::OuterBoundaryIs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OuterBoundaryIs_has_linearring",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OuterBoundaryIs_has_linearring" "', argument " "1"" of type '" "kmldom::OuterBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_linearring();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OuterBoundaryIs_clear_linearring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::OuterBoundaryIs *arg1 = (kmldom::OuterBoundaryIs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OuterBoundaryIs_clear_linearring",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OuterBoundaryIs_clear_linearring" "', argument " "1"" of type '" "kmldom::OuterBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_linearring();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OuterBoundaryIs_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OuterBoundaryIs_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OuterBoundaryIs_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::OuterBoundaryIs >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::OuterBoundaryIs > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::OuterBoundaryIs > * >(argp1);
  }
  result = kmldom_OuterBoundaryIs_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OuterBoundaryIs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::OuterBoundaryIs *arg1 = (kmldom::OuterBoundaryIs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::OuterBoundaryIs > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OuterBoundaryIs",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OuterBoundaryIs" "', argument " "1"" of type '" "kmldom::OuterBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::OuterBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::OuterBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OuterBoundaryIs_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_InnerBoundaryIs_get_linearring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::InnerBoundaryIs *arg1 = (kmldom::InnerBoundaryIs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinearRingPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:InnerBoundaryIs_get_linearring",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InnerBoundaryIs_get_linearring" "', argument " "1"" of type '" "kmldom::InnerBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_linearring();
  {
    boost::intrusive_ptr<  kmldom::LinearRing > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LinearRing >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InnerBoundaryIs_set_linearring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::InnerBoundaryIs *arg1 = (kmldom::InnerBoundaryIs *) 0 ;
  kmldom::LinearRingPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:InnerBoundaryIs_set_linearring",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InnerBoundaryIs_set_linearring" "', argument " "1"" of type '" "kmldom::InnerBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "InnerBoundaryIs_set_linearring" "', argument " "2"" of type '" "kmldom::LinearRingPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LinearRingPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LinearRingPtr * >(argp2);
  }
  (arg1)->set_linearring(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InnerBoundaryIs_has_linearring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::InnerBoundaryIs *arg1 = (kmldom::InnerBoundaryIs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:InnerBoundaryIs_has_linearring",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InnerBoundaryIs_has_linearring" "', argument " "1"" of type '" "kmldom::InnerBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_linearring();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InnerBoundaryIs_clear_linearring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::InnerBoundaryIs *arg1 = (kmldom::InnerBoundaryIs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:InnerBoundaryIs_clear_linearring",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InnerBoundaryIs_clear_linearring" "', argument " "1"" of type '" "kmldom::InnerBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_linearring();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_InnerBoundaryIs_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:InnerBoundaryIs_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "InnerBoundaryIs_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::InnerBoundaryIs >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::InnerBoundaryIs > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::InnerBoundaryIs > * >(argp1);
  }
  result = kmldom_InnerBoundaryIs_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_InnerBoundaryIs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::InnerBoundaryIs *arg1 = (kmldom::InnerBoundaryIs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > tempshared1 ;
  boost::intrusive_ptr< kmldom::InnerBoundaryIs > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_InnerBoundaryIs",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_InnerBoundaryIs" "', argument " "1"" of type '" "kmldom::InnerBoundaryIs *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::InnerBoundaryIs > * >(argp1);
      arg1 = const_cast< kmldom::InnerBoundaryIs * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *InnerBoundaryIs_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Polygon_get_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_get_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_get_extrude" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_extrude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_set_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Polygon_set_extrude",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_set_extrude" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polygon_set_extrude" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_extrude(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_has_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_has_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_has_extrude" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_extrude();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_clear_extrude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_clear_extrude",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_clear_extrude" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_extrude();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_get_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_get_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_get_tessellate" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->get_tessellate();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_set_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Polygon_set_tessellate",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_set_tessellate" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polygon_set_tessellate" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->set_tessellate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_has_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_has_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_has_tessellate" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_tessellate();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_clear_tessellate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_clear_tessellate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_clear_tessellate" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_tessellate();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_get_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_get_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_get_altitudemode" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_set_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Polygon_set_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_set_altitudemode" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polygon_set_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_has_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_has_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_has_altitudemode" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_clear_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_clear_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_clear_altitudemode" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_get_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_get_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_get_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_altitudemode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_has_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_has_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_has_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_altitudemode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_set_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Polygon_set_gx_altitudemode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_set_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polygon_set_gx_altitudemode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_altitudemode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_clear_gx_altitudemode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_clear_gx_altitudemode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_clear_gx_altitudemode" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_altitudemode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_get_outerboundaryis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OuterBoundaryIsPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_get_outerboundaryis",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_get_outerboundaryis" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_outerboundaryis();
  {
    boost::intrusive_ptr<  kmldom::OuterBoundaryIs > *smartresult = result ? new boost::intrusive_ptr<  kmldom::OuterBoundaryIs >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_set_outerboundaryis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  kmldom::OuterBoundaryIsPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Polygon_set_outerboundaryis",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_set_outerboundaryis" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Polygon_set_outerboundaryis" "', argument " "2"" of type '" "kmldom::OuterBoundaryIsPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::OuterBoundaryIsPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::OuterBoundaryIsPtr * >(argp2);
  }
  (arg1)->set_outerboundaryis(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_has_outerboundaryis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_has_outerboundaryis",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_has_outerboundaryis" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_outerboundaryis();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_clear_outerboundaryis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_clear_outerboundaryis",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_clear_outerboundaryis" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_outerboundaryis();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_add_innerboundaryis(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  kmldom::InnerBoundaryIsPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Polygon_add_innerboundaryis",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_add_innerboundaryis" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Polygon_add_innerboundaryis" "', argument " "2"" of type '" "kmldom::InnerBoundaryIsPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::InnerBoundaryIsPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::InnerBoundaryIsPtr * >(argp2);
  }
  (arg1)->add_innerboundaryis(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_get_innerboundaryis_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_get_innerboundaryis_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_get_innerboundaryis_array_size" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_innerboundaryis_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_get_innerboundaryis_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::InnerBoundaryIsPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Polygon_get_innerboundaryis_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_get_innerboundaryis_array_at" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Polygon_get_innerboundaryis_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_innerboundaryis_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::InnerBoundaryIs > *smartresult = result ? new boost::intrusive_ptr<  kmldom::InnerBoundaryIs >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Polygon_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Polygon > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Geometry > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Polygon_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Polygon_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Polygon >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Polygon > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Polygon > * >(argp1);
  }
  result = kmldom_Polygon_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Polygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Polygon *arg1 = (kmldom::Polygon *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Polygon > tempshared1 ;
  boost::intrusive_ptr< kmldom::Polygon > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Polygon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Polygon" "', argument " "1"" of type '" "kmldom::Polygon *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Polygon > * >(argp1);
      arg1 = const_cast< kmldom::Polygon * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Polygon_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SimpleData_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleData_get_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_get_name" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleData_has_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleData_has_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_has_name" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_name();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleData_set_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimpleData_set_name",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_set_name" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleData_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimpleData_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_name((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleData_clear_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleData_clear_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_clear_name" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_name();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleData_get_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleData_get_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_get_text" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_text();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleData_has_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleData_has_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_has_text" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_text();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleData_set_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SimpleData_set_text",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_set_text" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SimpleData_set_text" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SimpleData_set_text" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_text((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleData_clear_text(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleData_clear_text",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_clear_text" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_text();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SimpleData_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::SimpleData > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SimpleData_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SimpleData_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::SimpleData >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::SimpleData > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::SimpleData > * >(argp1);
  }
  result = kmldom_SimpleData_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SimpleData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SimpleData *arg1 = (kmldom::SimpleData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SimpleData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SimpleData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SimpleData",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SimpleData" "', argument " "1"" of type '" "kmldom::SimpleData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SimpleData > * >(argp1);
      arg1 = const_cast< kmldom::SimpleData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SimpleData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SchemaData_get_schemaurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SchemaData *arg1 = (kmldom::SchemaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SchemaData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SchemaData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SchemaData_get_schemaurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SchemaData_get_schemaurl" "', argument " "1"" of type '" "kmldom::SchemaData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_schemaurl();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SchemaData_has_schemaurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SchemaData *arg1 = (kmldom::SchemaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SchemaData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SchemaData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SchemaData_has_schemaurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SchemaData_has_schemaurl" "', argument " "1"" of type '" "kmldom::SchemaData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_schemaurl();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SchemaData_set_schemaurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SchemaData *arg1 = (kmldom::SchemaData *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SchemaData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SchemaData > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SchemaData_set_schemaurl",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SchemaData_set_schemaurl" "', argument " "1"" of type '" "kmldom::SchemaData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SchemaData_set_schemaurl" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SchemaData_set_schemaurl" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_schemaurl((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SchemaData_clear_schemaurl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SchemaData *arg1 = (kmldom::SchemaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SchemaData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SchemaData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SchemaData_clear_schemaurl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SchemaData_clear_schemaurl" "', argument " "1"" of type '" "kmldom::SchemaData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_schemaurl();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SchemaData_add_simpledata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SchemaData *arg1 = (kmldom::SchemaData *) 0 ;
  kmldom::SimpleDataPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SchemaData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SchemaData > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SchemaData_add_simpledata",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SchemaData_add_simpledata" "', argument " "1"" of type '" "kmldom::SchemaData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SchemaData_add_simpledata" "', argument " "2"" of type '" "kmldom::SimpleDataPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::SimpleDataPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::SimpleDataPtr * >(argp2);
  }
  (arg1)->add_simpledata(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SchemaData_get_simpledata_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SchemaData *arg1 = (kmldom::SchemaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SchemaData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SchemaData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SchemaData_get_simpledata_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SchemaData_get_simpledata_array_size" "', argument " "1"" of type '" "kmldom::SchemaData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_simpledata_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SchemaData_get_simpledata_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SchemaData *arg1 = (kmldom::SchemaData *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SchemaData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SchemaData > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::SimpleDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SchemaData_get_simpledata_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SchemaData_get_simpledata_array_at" "', argument " "1"" of type '" "kmldom::SchemaData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SchemaData_get_simpledata_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_simpledata_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::SimpleData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SimpleData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SchemaData_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::SchemaData > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SchemaData_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SchemaData_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::SchemaData >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::SchemaData > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::SchemaData > * >(argp1);
  }
  result = kmldom_SchemaData_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SchemaData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::SchemaData *arg1 = (kmldom::SchemaData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::SchemaData > tempshared1 ;
  boost::intrusive_ptr< kmldom::SchemaData > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SchemaData",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SchemaData" "', argument " "1"" of type '" "kmldom::SchemaData *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::SchemaData > * >(argp1);
      arg1 = const_cast< kmldom::SchemaData * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SchemaData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OverlayXY_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::OverlayXY > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OverlayXY_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OverlayXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OverlayXY_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::OverlayXY >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::OverlayXY > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::OverlayXY > * >(argp1);
  }
  result = kmldom_OverlayXY_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Vec2 > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Vec2 >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OverlayXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::OverlayXY *arg1 = (kmldom::OverlayXY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::OverlayXY > tempshared1 ;
  boost::intrusive_ptr< kmldom::OverlayXY > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OverlayXY",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OverlayXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OverlayXY" "', argument " "1"" of type '" "kmldom::OverlayXY *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::OverlayXY > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::OverlayXY > * >(argp1);
      arg1 = const_cast< kmldom::OverlayXY * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::OverlayXY > * >(argp1);
      arg1 = const_cast< kmldom::OverlayXY * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OverlayXY_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OverlayXY_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ScreenXY_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ScreenXY > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenXY_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenXY_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ScreenXY >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ScreenXY > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ScreenXY > * >(argp1);
  }
  result = kmldom_ScreenXY_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Vec2 > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Vec2 >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ScreenXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenXY *arg1 = (kmldom::ScreenXY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenXY > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenXY > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ScreenXY",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ScreenXY" "', argument " "1"" of type '" "kmldom::ScreenXY *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenXY > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenXY > * >(argp1);
      arg1 = const_cast< kmldom::ScreenXY * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenXY > * >(argp1);
      arg1 = const_cast< kmldom::ScreenXY * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ScreenXY_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenXY_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_RotationXY_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::RotationXY > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RotationXY_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__RotationXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RotationXY_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::RotationXY >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::RotationXY > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::RotationXY > * >(argp1);
  }
  result = kmldom_RotationXY_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Vec2 > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Vec2 >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RotationXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::RotationXY *arg1 = (kmldom::RotationXY *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::RotationXY > tempshared1 ;
  boost::intrusive_ptr< kmldom::RotationXY > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RotationXY",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__RotationXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RotationXY" "', argument " "1"" of type '" "kmldom::RotationXY *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::RotationXY > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::RotationXY > * >(argp1);
      arg1 = const_cast< kmldom::RotationXY * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::RotationXY > * >(argp1);
      arg1 = const_cast< kmldom::RotationXY * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RotationXY_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__RotationXY_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Size_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Size > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Vec2 > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Size_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Size_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Size_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Size >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Size > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Size > * >(argp1);
  }
  result = kmldom_Size_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Vec2 > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Vec2 >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Vec2_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Size *arg1 = (kmldom::Size *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Size > tempshared1 ;
  boost::intrusive_ptr< kmldom::Size > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Size_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Size" "', argument " "1"" of type '" "kmldom::Size *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Size > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Size > * >(argp1);
      arg1 = const_cast< kmldom::Size * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Size > * >(argp1);
      arg1 = const_cast< kmldom::Size * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Size_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Size_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ScreenOverlay_get_overlayxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OverlayXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_get_overlayxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_get_overlayxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_overlayxy();
  {
    boost::intrusive_ptr<  kmldom::OverlayXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::OverlayXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OverlayXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_set_overlayxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  kmldom::OverlayXYPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ScreenOverlay_set_overlayxy",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_set_overlayxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OverlayXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ScreenOverlay_set_overlayxy" "', argument " "2"" of type '" "kmldom::OverlayXYPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::OverlayXYPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::OverlayXYPtr * >(argp2);
  }
  (arg1)->set_overlayxy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_has_overlayxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_has_overlayxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_has_overlayxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_overlayxy();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_clear_overlayxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_clear_overlayxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_clear_overlayxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_overlayxy();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_get_screenxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ScreenXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_get_screenxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_get_screenxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_screenxy();
  {
    boost::intrusive_ptr<  kmldom::ScreenXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ScreenXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_set_screenxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  kmldom::ScreenXYPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ScreenOverlay_set_screenxy",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_set_screenxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ScreenOverlay_set_screenxy" "', argument " "2"" of type '" "kmldom::ScreenXYPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ScreenXYPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ScreenXYPtr * >(argp2);
  }
  (arg1)->set_screenxy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_has_screenxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_has_screenxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_has_screenxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_screenxy();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_clear_screenxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_clear_screenxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_clear_screenxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_screenxy();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_get_rotationxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::RotationXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_get_rotationxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_get_rotationxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_rotationxy();
  {
    boost::intrusive_ptr<  kmldom::RotationXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::RotationXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__RotationXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_set_rotationxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  kmldom::RotationXYPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ScreenOverlay_set_rotationxy",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_set_rotationxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__RotationXY_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ScreenOverlay_set_rotationxy" "', argument " "2"" of type '" "kmldom::RotationXYPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::RotationXYPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::RotationXYPtr * >(argp2);
  }
  (arg1)->set_rotationxy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_has_rotationxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_has_rotationxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_has_rotationxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_rotationxy();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_clear_rotationxy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_clear_rotationxy",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_clear_rotationxy" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_rotationxy();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_get_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SizePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_get_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_get_size" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_size();
  {
    boost::intrusive_ptr<  kmldom::Size > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Size >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Size_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_set_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  kmldom::SizePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ScreenOverlay_set_size",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_set_size" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Size_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ScreenOverlay_set_size" "', argument " "2"" of type '" "kmldom::SizePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::SizePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::SizePtr * >(argp2);
  }
  (arg1)->set_size(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_has_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_has_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_has_size" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_size();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_clear_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_clear_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_clear_size" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_size();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_get_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_get_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_get_rotation" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_rotation();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_set_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ScreenOverlay_set_rotation",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_set_rotation" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ScreenOverlay_set_rotation" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_rotation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_has_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_has_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_has_rotation" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_rotation();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_clear_rotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_clear_rotation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_clear_rotation" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_rotation();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ScreenOverlay_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::ScreenOverlay > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Overlay > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ScreenOverlay_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ScreenOverlay_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::ScreenOverlay >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::ScreenOverlay > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::ScreenOverlay > * >(argp1);
  }
  result = kmldom_ScreenOverlay_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Overlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Overlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ScreenOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ScreenOverlay *arg1 = (kmldom::ScreenOverlay *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > tempshared1 ;
  boost::intrusive_ptr< kmldom::ScreenOverlay > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ScreenOverlay",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ScreenOverlay" "', argument " "1"" of type '" "kmldom::ScreenOverlay *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::ScreenOverlay > * >(argp1);
      arg1 = const_cast< kmldom::ScreenOverlay * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ScreenOverlay_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Style_get_iconstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_get_iconstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_get_iconstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_iconstyle();
  {
    boost::intrusive_ptr<  kmldom::IconStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::IconStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_set_iconstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  kmldom::IconStylePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Style_set_iconstyle",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_set_iconstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Style_set_iconstyle" "', argument " "2"" of type '" "kmldom::IconStylePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::IconStylePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::IconStylePtr * >(argp2);
  }
  (arg1)->set_iconstyle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_has_iconstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_has_iconstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_has_iconstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_iconstyle();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_clear_iconstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_clear_iconstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_clear_iconstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_iconstyle();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_get_labelstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LabelStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_get_labelstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_get_labelstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_labelstyle();
  {
    boost::intrusive_ptr<  kmldom::LabelStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LabelStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_set_labelstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  kmldom::LabelStylePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Style_set_labelstyle",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_set_labelstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Style_set_labelstyle" "', argument " "2"" of type '" "kmldom::LabelStylePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LabelStylePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LabelStylePtr * >(argp2);
  }
  (arg1)->set_labelstyle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_has_labelstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_has_labelstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_has_labelstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_labelstyle();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_clear_labelstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_clear_labelstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_clear_labelstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_labelstyle();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_get_linestyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LineStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_get_linestyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_get_linestyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_linestyle();
  {
    boost::intrusive_ptr<  kmldom::LineStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LineStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_set_linestyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  kmldom::LineStylePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Style_set_linestyle",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_set_linestyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Style_set_linestyle" "', argument " "2"" of type '" "kmldom::LineStylePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::LineStylePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::LineStylePtr * >(argp2);
  }
  (arg1)->set_linestyle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_has_linestyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_has_linestyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_has_linestyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_linestyle();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_clear_linestyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_clear_linestyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_clear_linestyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_linestyle();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_get_polystyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PolyStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_get_polystyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_get_polystyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_polystyle();
  {
    boost::intrusive_ptr<  kmldom::PolyStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::PolyStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_set_polystyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  kmldom::PolyStylePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Style_set_polystyle",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_set_polystyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Style_set_polystyle" "', argument " "2"" of type '" "kmldom::PolyStylePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::PolyStylePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::PolyStylePtr * >(argp2);
  }
  (arg1)->set_polystyle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_has_polystyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_has_polystyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_has_polystyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_polystyle();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_clear_polystyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_clear_polystyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_clear_polystyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_polystyle();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_get_balloonstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::BalloonStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_get_balloonstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_get_balloonstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_balloonstyle();
  {
    boost::intrusive_ptr<  kmldom::BalloonStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::BalloonStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_set_balloonstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  kmldom::BalloonStylePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Style_set_balloonstyle",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_set_balloonstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Style_set_balloonstyle" "', argument " "2"" of type '" "kmldom::BalloonStylePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::BalloonStylePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::BalloonStylePtr * >(argp2);
  }
  (arg1)->set_balloonstyle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_has_balloonstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_has_balloonstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_has_balloonstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_balloonstyle();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_clear_balloonstyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_clear_balloonstyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_clear_balloonstyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_balloonstyle();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_get_liststyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ListStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_get_liststyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_get_liststyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_liststyle();
  {
    boost::intrusive_ptr<  kmldom::ListStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ListStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_set_liststyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  kmldom::ListStylePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Style_set_liststyle",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_set_liststyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Style_set_liststyle" "', argument " "2"" of type '" "kmldom::ListStylePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::ListStylePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ListStylePtr * >(argp2);
  }
  (arg1)->set_liststyle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_has_liststyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_has_liststyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_has_liststyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_liststyle();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_clear_liststyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_clear_liststyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_clear_liststyle" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_liststyle();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Style_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Style > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::StyleSelector > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Style_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Style_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Style >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Style > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Style > * >(argp1);
  }
  result = kmldom_Style_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::StyleSelector > *smartresult = result ? new boost::intrusive_ptr<  kmldom::StyleSelector >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Style(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Style *arg1 = (kmldom::Style *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Style > tempshared1 ;
  boost::intrusive_ptr< kmldom::Style > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Style",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Style" "', argument " "1"" of type '" "kmldom::Style *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Style > * >(argp1);
      arg1 = const_cast< kmldom::Style * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Style_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_StyleMap_add_pair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::StyleMap *arg1 = (kmldom::StyleMap *) 0 ;
  kmldom::PairPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::StyleMap > tempshared1 ;
  boost::intrusive_ptr< kmldom::StyleMap > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StyleMap_add_pair",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StyleMap_add_pair" "', argument " "1"" of type '" "kmldom::StyleMap *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      arg1 = const_cast< kmldom::StyleMap * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      arg1 = const_cast< kmldom::StyleMap * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StyleMap_add_pair" "', argument " "2"" of type '" "kmldom::PairPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::PairPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::PairPtr * >(argp2);
  }
  (arg1)->add_pair(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StyleMap_get_pair_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::StyleMap *arg1 = (kmldom::StyleMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::StyleMap > tempshared1 ;
  boost::intrusive_ptr< kmldom::StyleMap > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StyleMap_get_pair_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StyleMap_get_pair_array_size" "', argument " "1"" of type '" "kmldom::StyleMap *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      arg1 = const_cast< kmldom::StyleMap * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      arg1 = const_cast< kmldom::StyleMap * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_pair_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StyleMap_get_pair_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::StyleMap *arg1 = (kmldom::StyleMap *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::StyleMap > tempshared1 ;
  boost::intrusive_ptr< kmldom::StyleMap > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::PairPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StyleMap_get_pair_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StyleMap_get_pair_array_at" "', argument " "1"" of type '" "kmldom::StyleMap *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      arg1 = const_cast< kmldom::StyleMap * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      arg1 = const_cast< kmldom::StyleMap * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StyleMap_get_pair_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_pair_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::Pair > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Pair >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StyleMap_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::StyleMap > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::StyleSelector > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StyleMap_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StyleMap_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::StyleMap >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::StyleMap > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::StyleMap > * >(argp1);
  }
  result = kmldom_StyleMap_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::StyleSelector > *smartresult = result ? new boost::intrusive_ptr<  kmldom::StyleSelector >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StyleMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::StyleMap *arg1 = (kmldom::StyleMap *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::StyleMap > tempshared1 ;
  boost::intrusive_ptr< kmldom::StyleMap > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_StyleMap",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StyleMap" "', argument " "1"" of type '" "kmldom::StyleMap *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      arg1 = const_cast< kmldom::StyleMap * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::StyleMap > * >(argp1);
      arg1 = const_cast< kmldom::StyleMap * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StyleMap_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TimeSpan_get_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeSpan_get_begin",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_get_begin" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_begin();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeSpan_set_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeSpan_set_begin",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_set_begin" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TimeSpan_set_begin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TimeSpan_set_begin" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_begin((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeSpan_has_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeSpan_has_begin",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_has_begin" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_begin();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeSpan_clear_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeSpan_clear_begin",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_clear_begin" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_begin();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeSpan_get_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeSpan_get_end",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_get_end" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_end();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeSpan_set_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeSpan_set_end",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_set_end" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TimeSpan_set_end" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TimeSpan_set_end" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_end((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeSpan_has_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeSpan_has_end",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_has_end" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_end();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeSpan_clear_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeSpan_clear_end",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_clear_end" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_end();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeSpan_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::TimeSpan > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::TimePrimitive > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeSpan_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeSpan_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::TimeSpan >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::TimeSpan > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::TimeSpan > * >(argp1);
  }
  result = kmldom_TimeSpan_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::TimePrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimePrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimeSpan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeSpan *arg1 = (kmldom::TimeSpan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeSpan > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TimeSpan",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimeSpan" "', argument " "1"" of type '" "kmldom::TimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::TimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimeSpan_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxTimeSpan_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxTimeSpan > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::TimeSpan > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTimeSpan_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTimeSpan_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxTimeSpan >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxTimeSpan > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxTimeSpan > * >(argp1);
  }
  result = kmldom_GxTimeSpan_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::TimeSpan > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimeSpan >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxTimeSpan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTimeSpan *arg1 = (kmldom::GxTimeSpan *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTimeSpan > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTimeSpan > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxTimeSpan",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxTimeSpan" "', argument " "1"" of type '" "kmldom::GxTimeSpan *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTimeSpan > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::GxTimeSpan * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTimeSpan > * >(argp1);
      arg1 = const_cast< kmldom::GxTimeSpan * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxTimeSpan_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TimeStamp_get_when(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeStamp *arg1 = (kmldom::TimeStamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeStamp > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeStamp > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeStamp_get_when",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeStamp_get_when" "', argument " "1"" of type '" "kmldom::TimeStamp *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_when();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeStamp_set_when(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeStamp *arg1 = (kmldom::TimeStamp *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeStamp > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeStamp > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeStamp_set_when",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeStamp_set_when" "', argument " "1"" of type '" "kmldom::TimeStamp *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TimeStamp_set_when" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TimeStamp_set_when" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_when((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeStamp_has_when(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeStamp *arg1 = (kmldom::TimeStamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeStamp > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeStamp > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeStamp_has_when",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeStamp_has_when" "', argument " "1"" of type '" "kmldom::TimeStamp *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_when();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeStamp_clear_when(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeStamp *arg1 = (kmldom::TimeStamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeStamp > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeStamp > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeStamp_clear_when",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeStamp_clear_when" "', argument " "1"" of type '" "kmldom::TimeStamp *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_when();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeStamp_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::TimeStamp > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::TimePrimitive > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeStamp_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeStamp_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::TimeStamp >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::TimeStamp > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::TimeStamp > * >(argp1);
  }
  result = kmldom_TimeStamp_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::TimePrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimePrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimeStamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::TimeStamp *arg1 = (kmldom::TimeStamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::TimeStamp > tempshared1 ;
  boost::intrusive_ptr< kmldom::TimeStamp > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TimeStamp",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimeStamp" "', argument " "1"" of type '" "kmldom::TimeStamp *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::TimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::TimeStamp * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimeStamp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxTimeStamp_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxTimeStamp > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::TimeStamp > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTimeStamp_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTimeStamp_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxTimeStamp >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxTimeStamp > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxTimeStamp > * >(argp1);
  }
  result = kmldom_GxTimeStamp_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::TimeStamp > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimeStamp >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxTimeStamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTimeStamp *arg1 = (kmldom::GxTimeStamp *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTimeStamp > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTimeStamp > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxTimeStamp",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxTimeStamp" "', argument " "1"" of type '" "kmldom::GxTimeStamp *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTimeStamp > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::GxTimeStamp * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTimeStamp > * >(argp1);
      arg1 = const_cast< kmldom::GxTimeStamp * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxTimeStamp_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Kml_get_hint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_get_hint",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_get_hint" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_hint();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_set_hint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Kml_set_hint",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_set_hint" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Kml_set_hint" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Kml_set_hint" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_hint((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_has_hint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_has_hint",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_has_hint" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_hint();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_clear_hint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_clear_hint",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_clear_hint" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_hint();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_get_networklinkcontrol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::NetworkLinkControlPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_get_networklinkcontrol",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_get_networklinkcontrol" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_networklinkcontrol();
  {
    boost::intrusive_ptr<  kmldom::NetworkLinkControl > *smartresult = result ? new boost::intrusive_ptr<  kmldom::NetworkLinkControl >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_set_networklinkcontrol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  kmldom::NetworkLinkControlPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Kml_set_networklinkcontrol",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_set_networklinkcontrol" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Kml_set_networklinkcontrol" "', argument " "2"" of type '" "kmldom::NetworkLinkControlPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::NetworkLinkControlPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::NetworkLinkControlPtr * >(argp2);
  }
  (arg1)->set_networklinkcontrol(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_has_networklinkcontrol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_has_networklinkcontrol",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_has_networklinkcontrol" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_networklinkcontrol();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_clear_networklinkcontrol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_clear_networklinkcontrol",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_clear_networklinkcontrol" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_networklinkcontrol();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_get_feature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::FeaturePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_get_feature",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_get_feature" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_feature();
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_set_feature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  kmldom::FeaturePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Kml_set_feature",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_set_feature" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Kml_set_feature" "', argument " "2"" of type '" "kmldom::FeaturePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::FeaturePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::FeaturePtr * >(argp2);
  }
  (arg1)->set_feature(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_has_feature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_has_feature",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_has_feature" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_feature();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_clear_feature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_clear_feature",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_clear_feature" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_feature();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Kml_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::Kml > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Kml_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Kml_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::Kml >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::Kml > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::Kml > * >(argp1);
  }
  result = kmldom_Kml_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Kml(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::Kml *arg1 = (kmldom::Kml *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::Kml > tempshared1 ;
  boost::intrusive_ptr< kmldom::Kml > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Kml",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Kml" "', argument " "1"" of type '" "kmldom::Kml *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::Kml > * >(argp1);
      arg1 = const_cast< kmldom::Kml * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Kml_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AtomAuthor_get_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_get_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_get_name" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_name();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_set_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomAuthor_set_name",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_set_name" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AtomAuthor_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AtomAuthor_set_name" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_name((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_has_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_has_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_has_name" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_name();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_clear_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_clear_name",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_clear_name" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_name();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_get_uri(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_get_uri",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_get_uri" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_uri();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_set_uri(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomAuthor_set_uri",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_set_uri" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AtomAuthor_set_uri" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AtomAuthor_set_uri" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_uri((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_has_uri(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_has_uri",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_has_uri" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_uri();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_clear_uri(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_clear_uri",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_clear_uri" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_uri();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_get_email(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_get_email",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_get_email" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_email();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_set_email(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomAuthor_set_email",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_set_email" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AtomAuthor_set_email" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AtomAuthor_set_email" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_email((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_has_email(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_has_email",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_has_email" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_email();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_clear_email(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_clear_email",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_clear_email" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_email();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomAuthor_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::AtomAuthor > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomAuthor_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomAuthor_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::AtomAuthor >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::AtomAuthor > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::AtomAuthor > * >(argp1);
  }
  result = kmldom_AtomAuthor_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AtomAuthor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomAuthor *arg1 = (kmldom::AtomAuthor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomAuthor > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AtomAuthor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AtomAuthor" "', argument " "1"" of type '" "kmldom::AtomAuthor *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomAuthor > * >(argp1);
      arg1 = const_cast< kmldom::AtomAuthor * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AtomAuthor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AtomLink_get_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_get_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_get_href" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_href();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_has_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_has_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_has_href" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_href();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_set_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomLink_set_href",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_set_href" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AtomLink_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AtomLink_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_href((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_clear_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_clear_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_clear_href" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_href();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_get_rel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_get_rel",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_get_rel" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_rel();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_has_rel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_has_rel",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_has_rel" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_rel();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_set_rel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomLink_set_rel",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_set_rel" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AtomLink_set_rel" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AtomLink_set_rel" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_rel((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_clear_rel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_clear_rel",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_clear_rel" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_rel();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_get_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_get_type",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_get_type" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_type();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_has_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_has_type",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_has_type" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_type();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_set_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomLink_set_type",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_set_type" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AtomLink_set_type" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AtomLink_set_type" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_type((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_clear_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_clear_type",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_clear_type" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_type();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_get_hreflang(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_get_hreflang",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_get_hreflang" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_hreflang();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_has_hreflang(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_has_hreflang",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_has_hreflang" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_hreflang();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_set_hreflang(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomLink_set_hreflang",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_set_hreflang" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AtomLink_set_hreflang" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AtomLink_set_hreflang" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_hreflang((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_clear_hreflang(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_clear_hreflang",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_clear_hreflang" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_hreflang();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_get_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_get_title",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_get_title" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_title();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_has_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_has_title",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_has_title" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_title();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_set_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomLink_set_title",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_set_title" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AtomLink_set_title" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AtomLink_set_title" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_title((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_clear_title(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_clear_title",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_clear_title" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_title();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_get_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_get_length",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_get_length" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_length();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_has_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_has_length",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_has_length" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_length();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_set_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AtomLink_set_length",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_set_length" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AtomLink_set_length" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_length(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_clear_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_clear_length",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_clear_length" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_length();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AtomLink_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::AtomLink > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Element > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AtomLink_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AtomLink_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::AtomLink >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::AtomLink > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::AtomLink > * >(argp1);
  }
  result = kmldom_AtomLink_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AtomLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::AtomLink *arg1 = (kmldom::AtomLink *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::AtomLink > tempshared1 ;
  boost::intrusive_ptr< kmldom::AtomLink > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AtomLink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AtomLink" "', argument " "1"" of type '" "kmldom::AtomLink *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::AtomLink > * >(argp1);
      arg1 = const_cast< kmldom::AtomLink * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AtomLink_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxTourPrimitive_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxTourPrimitive > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTourPrimitive_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTourPrimitive_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxTourPrimitive >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxTourPrimitive > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxTourPrimitive > * >(argp1);
  }
  result = kmldom_GxTourPrimitive_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxTourPrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTourPrimitive *arg1 = (kmldom::GxTourPrimitive *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourPrimitive > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTourPrimitive > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxTourPrimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxTourPrimitive" "', argument " "1"" of type '" "kmldom::GxTourPrimitive *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourPrimitive > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourPrimitive > * >(argp1);
      arg1 = const_cast< kmldom::GxTourPrimitive * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourPrimitive > * >(argp1);
      arg1 = const_cast< kmldom::GxTourPrimitive * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxTourPrimitive_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxPlaylist_add_gx_tourprimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxPlaylist *arg1 = (kmldom::GxPlaylist *) 0 ;
  kmldom::GxTourPrimitivePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxPlaylist > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxPlaylist > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxPlaylist_add_gx_tourprimitive",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxPlaylist_add_gx_tourprimitive" "', argument " "1"" of type '" "kmldom::GxPlaylist *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      arg1 = const_cast< kmldom::GxPlaylist * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      arg1 = const_cast< kmldom::GxPlaylist * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GxPlaylist_add_gx_tourprimitive" "', argument " "2"" of type '" "kmldom::GxTourPrimitivePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::GxTourPrimitivePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::GxTourPrimitivePtr * >(argp2);
  }
  (arg1)->add_gx_tourprimitive(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxPlaylist_get_gx_tourprimitive_array_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxPlaylist *arg1 = (kmldom::GxPlaylist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxPlaylist > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxPlaylist > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxPlaylist_get_gx_tourprimitive_array_size",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxPlaylist_get_gx_tourprimitive_array_size" "', argument " "1"" of type '" "kmldom::GxPlaylist *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      arg1 = const_cast< kmldom::GxPlaylist * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      arg1 = const_cast< kmldom::GxPlaylist * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_gx_tourprimitive_array_size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxPlaylist_get_gx_tourprimitive_array_at(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxPlaylist *arg1 = (kmldom::GxPlaylist *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxPlaylist > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxPlaylist > *smartarg1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::GxTourPrimitivePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxPlaylist_get_gx_tourprimitive_array_at",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxPlaylist_get_gx_tourprimitive_array_at" "', argument " "1"" of type '" "kmldom::GxPlaylist *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      arg1 = const_cast< kmldom::GxPlaylist * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      arg1 = const_cast< kmldom::GxPlaylist * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GxPlaylist_get_gx_tourprimitive_array_at" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (arg1)->get_gx_tourprimitive_array_at(arg2);
  {
    boost::intrusive_ptr<  kmldom::GxTourPrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourPrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxPlaylist_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxPlaylist > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Object > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxPlaylist_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxPlaylist_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxPlaylist >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxPlaylist > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxPlaylist > * >(argp1);
  }
  result = kmldom_GxPlaylist_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxPlaylist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxPlaylist *arg1 = (kmldom::GxPlaylist *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxPlaylist > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxPlaylist > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxPlaylist",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxPlaylist" "', argument " "1"" of type '" "kmldom::GxPlaylist *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      arg1 = const_cast< kmldom::GxPlaylist * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxPlaylist > * >(argp1);
      arg1 = const_cast< kmldom::GxPlaylist * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxPlaylist_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxTour_get_gx_playlist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTour *arg1 = (kmldom::GxTour *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTour > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTour > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxPlaylistPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTour_get_gx_playlist",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTour_get_gx_playlist" "', argument " "1"" of type '" "kmldom::GxTour *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_gx_playlist();
  {
    boost::intrusive_ptr<  kmldom::GxPlaylist > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxPlaylist >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxTour_has_gx_playlist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTour *arg1 = (kmldom::GxTour *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTour > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTour > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTour_has_gx_playlist",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTour_has_gx_playlist" "', argument " "1"" of type '" "kmldom::GxTour *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_playlist();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxTour_set_gx_playlist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTour *arg1 = (kmldom::GxTour *) 0 ;
  kmldom::GxPlaylistPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTour > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTour > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxTour_set_gx_playlist",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTour_set_gx_playlist" "', argument " "1"" of type '" "kmldom::GxTour *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GxTour_set_gx_playlist" "', argument " "2"" of type '" "kmldom::GxPlaylistPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::GxPlaylistPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::GxPlaylistPtr * >(argp2);
  }
  (arg1)->set_gx_playlist(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxTour_clear_gx_playlist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTour *arg1 = (kmldom::GxTour *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTour > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTour > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTour_clear_gx_playlist",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTour_clear_gx_playlist" "', argument " "1"" of type '" "kmldom::GxTour *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_playlist();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxTour_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxTour > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::Feature > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTour_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTour_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxTour >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxTour > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxTour > * >(argp1);
  }
  result = kmldom_GxTour_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxTour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTour *arg1 = (kmldom::GxTour *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTour > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTour > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxTour",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxTour" "', argument " "1"" of type '" "kmldom::GxTour *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTour > * >(argp1);
      arg1 = const_cast< kmldom::GxTour * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxTour_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_get_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxAnimatedUpdate_get_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_get_gx_duration" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_gx_duration();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_has_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxAnimatedUpdate_has_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_has_gx_duration" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_duration();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_set_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxAnimatedUpdate_set_gx_duration",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_set_gx_duration" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GxAnimatedUpdate_set_gx_duration" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_gx_duration(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_clear_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxAnimatedUpdate_clear_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_clear_gx_duration" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_duration();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_get_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::UpdatePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxAnimatedUpdate_get_update",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_get_update" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_update();
  {
    boost::intrusive_ptr<  kmldom::Update > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Update >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_has_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxAnimatedUpdate_has_update",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_has_update" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_update();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_set_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  kmldom::UpdatePtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxAnimatedUpdate_set_update",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_set_update" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GxAnimatedUpdate_set_update" "', argument " "2"" of type '" "kmldom::UpdatePtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::UpdatePtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::UpdatePtr * >(argp2);
  }
  (arg1)->set_update(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_clear_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxAnimatedUpdate_clear_update",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_clear_update" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_update();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxAnimatedUpdate_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourPrimitive > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxAnimatedUpdate_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxAnimatedUpdate_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxAnimatedUpdate >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxAnimatedUpdate > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxAnimatedUpdate > * >(argp1);
  }
  result = kmldom_GxAnimatedUpdate_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTourPrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourPrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxAnimatedUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxAnimatedUpdate *arg1 = (kmldom::GxAnimatedUpdate *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxAnimatedUpdate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxAnimatedUpdate" "', argument " "1"" of type '" "kmldom::GxAnimatedUpdate *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > * >(argp1);
      arg1 = const_cast< kmldom::GxAnimatedUpdate * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxAnimatedUpdate_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxFlyTo_get_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_get_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_get_gx_duration" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_gx_duration();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_has_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_has_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_has_gx_duration" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_duration();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_set_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxFlyTo_set_gx_duration",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_set_gx_duration" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GxFlyTo_set_gx_duration" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_gx_duration(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_clear_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_clear_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_clear_gx_duration" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_duration();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_get_gx_flytomode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_get_gx_flytomode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_get_gx_flytomode" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_flytomode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_has_gx_flytomode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_has_gx_flytomode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_has_gx_flytomode" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_flytomode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_set_gx_flytomode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxFlyTo_set_gx_flytomode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_set_gx_flytomode" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GxFlyTo_set_gx_flytomode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_flytomode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_clear_gx_flytomode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_clear_gx_flytomode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_clear_gx_flytomode" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_flytomode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_get_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AbstractViewPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_get_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_get_abstractview" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (arg1)->get_abstractview();
  {
    boost::intrusive_ptr<  kmldom::AbstractView > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractView >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_has_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_has_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_has_abstractview" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_abstractview();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_set_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  kmldom::AbstractViewPtr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxFlyTo_set_abstractview",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_set_abstractview" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    int newmem = 0;
    res2 = SWIG_ConvertPtrAndOwn(obj1, &argp2, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t,  0 , &newmem);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GxFlyTo_set_abstractview" "', argument " "2"" of type '" "kmldom::AbstractViewPtr""'"); 
    }
    if (argp2) arg2 = *(reinterpret_cast< kmldom::AbstractViewPtr * >(argp2));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::AbstractViewPtr * >(argp2);
  }
  (arg1)->set_abstractview(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_clear_abstractview(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_clear_abstractview",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_clear_abstractview" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_abstractview();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxFlyTo_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxFlyTo > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourPrimitive > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxFlyTo_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxFlyTo_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxFlyTo >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxFlyTo > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxFlyTo > * >(argp1);
  }
  result = kmldom_GxFlyTo_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTourPrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourPrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxFlyTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxFlyTo *arg1 = (kmldom::GxFlyTo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxFlyTo > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxFlyTo",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxFlyTo" "', argument " "1"" of type '" "kmldom::GxFlyTo *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxFlyTo > * >(argp1);
      arg1 = const_cast< kmldom::GxFlyTo * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxFlyTo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxWait_get_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxWait *arg1 = (kmldom::GxWait *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxWait > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxWait > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxWait_get_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxWait_get_gx_duration" "', argument " "1"" of type '" "kmldom::GxWait *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (double)(arg1)->get_gx_duration();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxWait_has_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxWait *arg1 = (kmldom::GxWait *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxWait > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxWait > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxWait_has_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxWait_has_gx_duration" "', argument " "1"" of type '" "kmldom::GxWait *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_duration();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxWait_set_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxWait *arg1 = (kmldom::GxWait *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxWait > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxWait > *smartarg1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxWait_set_gx_duration",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxWait_set_gx_duration" "', argument " "1"" of type '" "kmldom::GxWait *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GxWait_set_gx_duration" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->set_gx_duration(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxWait_clear_gx_duration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxWait *arg1 = (kmldom::GxWait *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxWait > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxWait > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxWait_clear_gx_duration",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxWait_clear_gx_duration" "', argument " "1"" of type '" "kmldom::GxWait *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_duration();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxWait_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxWait > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourPrimitive > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxWait_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxWait_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxWait >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxWait > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxWait > * >(argp1);
  }
  result = kmldom_GxWait_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTourPrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourPrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxWait(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxWait *arg1 = (kmldom::GxWait *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxWait > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxWait > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxWait",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxWait" "', argument " "1"" of type '" "kmldom::GxWait *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxWait > * >(argp1);
      arg1 = const_cast< kmldom::GxWait * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxWait_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxSoundCue_get_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxSoundCue *arg1 = (kmldom::GxSoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxSoundCue_get_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxSoundCue_get_href" "', argument " "1"" of type '" "kmldom::GxSoundCue *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (std::string *) &(arg1)->get_href();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxSoundCue_has_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxSoundCue *arg1 = (kmldom::GxSoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxSoundCue_has_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxSoundCue_has_href" "', argument " "1"" of type '" "kmldom::GxSoundCue *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_href();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxSoundCue_set_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxSoundCue *arg1 = (kmldom::GxSoundCue *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > *smartarg1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxSoundCue_set_href",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxSoundCue_set_href" "', argument " "1"" of type '" "kmldom::GxSoundCue *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GxSoundCue_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GxSoundCue_set_href" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->set_href((std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxSoundCue_clear_href(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxSoundCue *arg1 = (kmldom::GxSoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxSoundCue_clear_href",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxSoundCue_clear_href" "', argument " "1"" of type '" "kmldom::GxSoundCue *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_href();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxSoundCue_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxSoundCue > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourPrimitive > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxSoundCue_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxSoundCue_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxSoundCue >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxSoundCue > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxSoundCue > * >(argp1);
  }
  result = kmldom_GxSoundCue_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTourPrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourPrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxSoundCue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxSoundCue *arg1 = (kmldom::GxSoundCue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxSoundCue > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxSoundCue",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxSoundCue" "', argument " "1"" of type '" "kmldom::GxSoundCue *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxSoundCue > * >(argp1);
      arg1 = const_cast< kmldom::GxSoundCue * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxSoundCue_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_GxTourControl_get_gx_playmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTourControl *arg1 = (kmldom::GxTourControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTourControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTourControl_get_gx_playmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTourControl_get_gx_playmode" "', argument " "1"" of type '" "kmldom::GxTourControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (int)(arg1)->get_gx_playmode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxTourControl_has_gx_playmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTourControl *arg1 = (kmldom::GxTourControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTourControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTourControl_has_gx_playmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTourControl_has_gx_playmode" "', argument " "1"" of type '" "kmldom::GxTourControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  result = (bool)(arg1)->has_gx_playmode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxTourControl_set_gx_playmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTourControl *arg1 = (kmldom::GxTourControl *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTourControl > *smartarg1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:GxTourControl_set_gx_playmode",&obj0,&obj1)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTourControl_set_gx_playmode" "', argument " "1"" of type '" "kmldom::GxTourControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "GxTourControl_set_gx_playmode" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->set_gx_playmode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxTourControl_clear_gx_playmode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTourControl *arg1 = (kmldom::GxTourControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTourControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTourControl_clear_gx_playmode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTourControl_clear_gx_playmode" "', argument " "1"" of type '" "kmldom::GxTourControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (arg1)->clear_gx_playmode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_GxTourControl_SWIGSharedPtrUpcast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::intrusive_ptr< kmldom::GxTourControl > arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourPrimitive > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:GxTourControl_SWIGSharedPtrUpcast",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GxTourControl_SWIGSharedPtrUpcast" "', argument " "1"" of type '" "boost::intrusive_ptr< kmldom::GxTourControl >""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< boost::intrusive_ptr< kmldom::GxTourControl > * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< boost::intrusive_ptr< kmldom::GxTourControl > * >(argp1);
  }
  result = kmldom_GxTourControl_SWIGSharedPtrUpcast(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTourPrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourPrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_GxTourControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::GxTourControl *arg1 = (kmldom::GxTourControl *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  boost::intrusive_ptr< kmldom::GxTourControl > tempshared1 ;
  boost::intrusive_ptr< kmldom::GxTourControl > *smartarg1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_GxTourControl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_GxTourControl" "', argument " "1"" of type '" "kmldom::GxTourControl *""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      tempshared1 = *reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      delete reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >(tempshared1.get());
    } else {
      smartarg1 = reinterpret_cast< boost::intrusive_ptr<  kmldom::GxTourControl > * >(argp1);
      arg1 = const_cast< kmldom::GxTourControl * >((smartarg1 ? smartarg1->get() : 0));
    }
  }
  (void)arg1; delete smartarg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *GxTourControl_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_KmlFactory_GetFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":KmlFactory_GetFactory")) SWIG_fail;
  result = (kmldom::KmlFactory *)kmldom::KmlFactory::GetFactory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateElementById(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  kmldom::KmlDomType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  kmldom::ElementPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:KmlFactory_CreateElementById",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateElementById" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "KmlFactory_CreateElementById" "', argument " "2"" of type '" "kmldom::KmlDomType""'");
  } 
  arg2 = static_cast< kmldom::KmlDomType >(val2);
  result = ((kmldom::KmlFactory const *)arg1)->CreateElementById(arg2);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateAlias(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AliasPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateAlias",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateAlias" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateAlias();
  {
    boost::intrusive_ptr<  kmldom::Alias > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Alias >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateAtomAuthor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AtomAuthorPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateAtomAuthor",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateAtomAuthor" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateAtomAuthor();
  {
    boost::intrusive_ptr<  kmldom::AtomAuthor > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AtomAuthor >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateAtomLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AtomLinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateAtomLink",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateAtomLink" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateAtomLink();
  {
    boost::intrusive_ptr<  kmldom::AtomLink > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AtomLink >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateBalloonStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::BalloonStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateBalloonStyle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateBalloonStyle" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateBalloonStyle();
  {
    boost::intrusive_ptr<  kmldom::BalloonStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::BalloonStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateCamera(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CameraPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateCamera",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateCamera" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateCamera();
  {
    boost::intrusive_ptr<  kmldom::Camera > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Camera >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ChangePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateChange",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateChange" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateChange();
  {
    boost::intrusive_ptr<  kmldom::Change > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Change >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateCoordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CoordinatesPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateCoordinates",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateCoordinates" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateCoordinates();
  {
    boost::intrusive_ptr<  kmldom::Coordinates > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Coordinates >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateCreate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CreatePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateCreate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateCreate" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateCreate();
  {
    boost::intrusive_ptr<  kmldom::Create > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Create >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::DataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateData" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateData();
  {
    boost::intrusive_ptr<  kmldom::Data > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Data >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateDelete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::DeletePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateDelete",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateDelete" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateDelete();
  {
    boost::intrusive_ptr<  kmldom::Delete > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Delete >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateDocument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::DocumentPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateDocument",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateDocument" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateDocument();
  {
    boost::intrusive_ptr<  kmldom::Document > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Document >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateExtendedData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ExtendedDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateExtendedData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateExtendedData" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateExtendedData();
  {
    boost::intrusive_ptr<  kmldom::ExtendedData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ExtendedData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateFolder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::FolderPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateFolder",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateFolder" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateFolder();
  {
    boost::intrusive_ptr<  kmldom::Folder > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Folder >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Folder_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGroundOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GroundOverlayPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGroundOverlay",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGroundOverlay" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGroundOverlay();
  {
    boost::intrusive_ptr<  kmldom::GroundOverlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GroundOverlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateHotSpot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::HotSpotPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateHotSpot",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateHotSpot" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateHotSpot();
  {
    boost::intrusive_ptr<  kmldom::HotSpot > *smartresult = result ? new boost::intrusive_ptr<  kmldom::HotSpot >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__HotSpot_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateIcon",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateIcon" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateIcon();
  {
    boost::intrusive_ptr<  kmldom::Icon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Icon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateIconStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateIconStyle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateIconStyle" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateIconStyle();
  {
    boost::intrusive_ptr<  kmldom::IconStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::IconStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateIconStyleIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconStyleIconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateIconStyleIcon",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateIconStyleIcon" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateIconStyleIcon();
  {
    boost::intrusive_ptr<  kmldom::IconStyleIcon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::IconStyleIcon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateImagePyramid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ImagePyramidPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateImagePyramid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateImagePyramid" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateImagePyramid();
  {
    boost::intrusive_ptr<  kmldom::ImagePyramid > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ImagePyramid >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateInnerBoundaryIs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::InnerBoundaryIsPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateInnerBoundaryIs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateInnerBoundaryIs" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateInnerBoundaryIs();
  {
    boost::intrusive_ptr<  kmldom::InnerBoundaryIs > *smartresult = result ? new boost::intrusive_ptr<  kmldom::InnerBoundaryIs >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateItemIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ItemIconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateItemIcon",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateItemIcon" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateItemIcon();
  {
    boost::intrusive_ptr<  kmldom::ItemIcon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ItemIcon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateKml(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::KmlPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateKml",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateKml" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateKml();
  {
    boost::intrusive_ptr<  kmldom::Kml > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Kml >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLabelStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LabelStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLabelStyle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLabelStyle" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLabelStyle();
  {
    boost::intrusive_ptr<  kmldom::LabelStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LabelStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLatLonBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LatLonBoxPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLatLonBox",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLatLonBox" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLatLonBox();
  {
    boost::intrusive_ptr<  kmldom::LatLonBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LatLonBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLatLonAltBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LatLonAltBoxPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLatLonAltBox",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLatLonAltBox" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLatLonAltBox();
  {
    boost::intrusive_ptr<  kmldom::LatLonAltBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LatLonAltBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLinearRing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinearRingPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLinearRing",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLinearRing" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLinearRing();
  {
    boost::intrusive_ptr<  kmldom::LinearRing > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LinearRing >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLineString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LineStringPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLineString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLineString" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLineString();
  {
    boost::intrusive_ptr<  kmldom::LineString > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LineString >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLineStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LineStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLineStyle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLineStyle" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLineStyle();
  {
    boost::intrusive_ptr<  kmldom::LineStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LineStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLink",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLink" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLink();
  {
    boost::intrusive_ptr<  kmldom::Link > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Link >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLinkSnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinkSnippetPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLinkSnippet",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLinkSnippet" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLinkSnippet();
  {
    boost::intrusive_ptr<  kmldom::LinkSnippet > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LinkSnippet >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateListStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ListStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateListStyle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateListStyle" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateListStyle();
  {
    boost::intrusive_ptr<  kmldom::ListStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ListStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLocation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LocationPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLocation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLocation" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLocation();
  {
    boost::intrusive_ptr<  kmldom::Location > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Location >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LodPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLod",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLod" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLod();
  {
    boost::intrusive_ptr<  kmldom::Lod > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Lod >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateLookAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LookAtPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateLookAt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateLookAt" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateLookAt();
  {
    boost::intrusive_ptr<  kmldom::LookAt > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LookAt >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateModel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ModelPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateModel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateModel" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateModel();
  {
    boost::intrusive_ptr<  kmldom::Model > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Model >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateMultiGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::MultiGeometryPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateMultiGeometry",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateMultiGeometry" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateMultiGeometry();
  {
    boost::intrusive_ptr<  kmldom::MultiGeometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::MultiGeometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateNetworkLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::NetworkLinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateNetworkLink",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateNetworkLink" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateNetworkLink();
  {
    boost::intrusive_ptr<  kmldom::NetworkLink > *smartresult = result ? new boost::intrusive_ptr<  kmldom::NetworkLink >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateOrientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OrientationPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateOrientation",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateOrientation" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateOrientation();
  {
    boost::intrusive_ptr<  kmldom::Orientation > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Orientation >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateNetworkLinkControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::NetworkLinkControlPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateNetworkLinkControl",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateNetworkLinkControl" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateNetworkLinkControl();
  {
    boost::intrusive_ptr<  kmldom::NetworkLinkControl > *smartresult = result ? new boost::intrusive_ptr<  kmldom::NetworkLinkControl >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateOuterBoundaryIs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OuterBoundaryIsPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateOuterBoundaryIs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateOuterBoundaryIs" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateOuterBoundaryIs();
  {
    boost::intrusive_ptr<  kmldom::OuterBoundaryIs > *smartresult = result ? new boost::intrusive_ptr<  kmldom::OuterBoundaryIs >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateOverlayXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OverlayXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateOverlayXY",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateOverlayXY" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateOverlayXY();
  {
    boost::intrusive_ptr<  kmldom::OverlayXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::OverlayXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OverlayXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreatePair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PairPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreatePair",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreatePair" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreatePair();
  {
    boost::intrusive_ptr<  kmldom::Pair > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Pair >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreatePhotoOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PhotoOverlayPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreatePhotoOverlay",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreatePhotoOverlay" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreatePhotoOverlay();
  {
    boost::intrusive_ptr<  kmldom::PhotoOverlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::PhotoOverlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreatePlacemark(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PlacemarkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreatePlacemark",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreatePlacemark" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreatePlacemark();
  {
    boost::intrusive_ptr<  kmldom::Placemark > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Placemark >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreatePolygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PolygonPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreatePolygon",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreatePolygon" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreatePolygon();
  {
    boost::intrusive_ptr<  kmldom::Polygon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Polygon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreatePoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PointPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreatePoint",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreatePoint" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreatePoint();
  {
    boost::intrusive_ptr<  kmldom::Point > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Point >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreatePolyStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PolyStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreatePolyStyle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreatePolyStyle" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreatePolyStyle();
  {
    boost::intrusive_ptr<  kmldom::PolyStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::PolyStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateRegion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::RegionPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateRegion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateRegion" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateRegion();
  {
    boost::intrusive_ptr<  kmldom::Region > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Region >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateResourceMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ResourceMapPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateResourceMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateResourceMap" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateResourceMap();
  {
    boost::intrusive_ptr<  kmldom::ResourceMap > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ResourceMap >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateRotationXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::RotationXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateRotationXY",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateRotationXY" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateRotationXY();
  {
    boost::intrusive_ptr<  kmldom::RotationXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::RotationXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__RotationXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ScalePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateScale",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateScale" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateScale();
  {
    boost::intrusive_ptr<  kmldom::Scale > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Scale >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateSchema(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SchemaPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateSchema",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateSchema" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateSchema();
  {
    boost::intrusive_ptr<  kmldom::Schema > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Schema >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateSchemaData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SchemaDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateSchemaData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateSchemaData" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateSchemaData();
  {
    boost::intrusive_ptr<  kmldom::SchemaData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SchemaData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateScreenOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ScreenOverlayPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateScreenOverlay",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateScreenOverlay" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateScreenOverlay();
  {
    boost::intrusive_ptr<  kmldom::ScreenOverlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ScreenOverlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateScreenXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ScreenXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateScreenXY",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateScreenXY" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateScreenXY();
  {
    boost::intrusive_ptr<  kmldom::ScreenXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ScreenXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SizePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateSize",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateSize" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateSize();
  {
    boost::intrusive_ptr<  kmldom::Size > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Size >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Size_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateSimpleData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SimpleDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateSimpleData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateSimpleData" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateSimpleData();
  {
    boost::intrusive_ptr<  kmldom::SimpleData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SimpleData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateSimpleField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SimpleFieldPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateSimpleField",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateSimpleField" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateSimpleField();
  {
    boost::intrusive_ptr<  kmldom::SimpleField > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SimpleField >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateSnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SnippetPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateSnippet",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateSnippet" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateSnippet();
  {
    boost::intrusive_ptr<  kmldom::Snippet > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Snippet >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Snippet_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::StylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateStyle",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateStyle" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateStyle();
  {
    boost::intrusive_ptr<  kmldom::Style > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Style >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateStyleMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::StyleMapPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateStyleMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateStyleMap" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateStyleMap();
  {
    boost::intrusive_ptr<  kmldom::StyleMap > *smartresult = result ? new boost::intrusive_ptr<  kmldom::StyleMap >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateTimeSpan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::TimeSpanPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateTimeSpan",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateTimeSpan" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateTimeSpan();
  {
    boost::intrusive_ptr<  kmldom::TimeSpan > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimeSpan >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateTimeStamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::TimeStampPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateTimeStamp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateTimeStamp" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateTimeStamp();
  {
    boost::intrusive_ptr<  kmldom::TimeStamp > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimeStamp >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateViewVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ViewVolumePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateViewVolume",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateViewVolume" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateViewVolume();
  {
    boost::intrusive_ptr<  kmldom::ViewVolume > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ViewVolume >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::UpdatePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateUpdate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateUpdate" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateUpdate();
  {
    boost::intrusive_ptr<  kmldom::Update > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Update >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxAnimatedUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxAnimatedUpdatePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxAnimatedUpdate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxAnimatedUpdate" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxAnimatedUpdate();
  {
    boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxAnimatedUpdate >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxFlyTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxFlyToPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxFlyTo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxFlyTo" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxFlyTo();
  {
    boost::intrusive_ptr<  kmldom::GxFlyTo > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxFlyTo >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxLatLonQuad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxLatLonQuadPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxLatLonQuad",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxLatLonQuad" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxLatLonQuad();
  {
    boost::intrusive_ptr<  kmldom::GxLatLonQuad > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxLatLonQuad >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxPlaylist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxPlaylistPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxPlaylist",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxPlaylist" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxPlaylist();
  {
    boost::intrusive_ptr<  kmldom::GxPlaylist > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxPlaylist >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxSoundCue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxSoundCuePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxSoundCue",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxSoundCue" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxSoundCue();
  {
    boost::intrusive_ptr<  kmldom::GxSoundCue > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxSoundCue >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxTimeSpan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTimeSpanPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxTimeSpan",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxTimeSpan" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxTimeSpan();
  {
    boost::intrusive_ptr<  kmldom::GxTimeSpan > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTimeSpan >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxTimeStamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTimeStampPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxTimeStamp",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxTimeStamp" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxTimeStamp();
  {
    boost::intrusive_ptr<  kmldom::GxTimeStamp > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTimeStamp >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxTour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTourPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxTour",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxTour" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxTour();
  {
    boost::intrusive_ptr<  kmldom::GxTour > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTour >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxTourControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTourControlPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxTourControl",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxTourControl" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxTourControl();
  {
    boost::intrusive_ptr<  kmldom::GxTourControl > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourControl >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_KmlFactory_CreateGxWait(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxWaitPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:KmlFactory_CreateGxWait",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "KmlFactory_CreateGxWait" "', argument " "1"" of type '" "kmldom::KmlFactory const *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  result = ((kmldom::KmlFactory const *)arg1)->CreateGxWait();
  {
    boost::intrusive_ptr<  kmldom::GxWait > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxWait >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_KmlFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::KmlFactory *arg1 = (kmldom::KmlFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_KmlFactory",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_kmldom__KmlFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_KmlFactory" "', argument " "1"" of type '" "kmldom::KmlFactory *""'"); 
  }
  arg1 = reinterpret_cast< kmldom::KmlFactory * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *KmlFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_kmldom__KmlFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ParseKml(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::string *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  kmldom::ElementPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ParseKml",&obj0)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ParseKml" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ParseKml" "', argument " "1"" of type '" "std::string const &""'"); 
    }
    arg1 = ptr;
  }
  result = kmldom::ParseKml((std::string const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SerializePretty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SerializePretty",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SerializePretty" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::SerializePretty((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SerializeRaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SerializeRaw",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SerializeRaw" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::SerializeRaw((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsElement(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmlbase::XmlElementPtr *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ElementPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsElement",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_kmlbase__XmlElementPtr,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsElement" "', argument " "1"" of type '" "kmlbase::XmlElementPtr const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AsElement" "', argument " "1"" of type '" "kmlbase::XmlElementPtr const &""'"); 
  }
  arg1 = reinterpret_cast< kmlbase::XmlElementPtr * >(argp1);
  result = kmldom::AsElement((kmlbase::XmlElementPtr const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::Element > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Element >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAbstractLatLonBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AbstractLatLonBoxPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAbstractLatLonBox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAbstractLatLonBox" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsAbstractLatLonBox(arg1);
  {
    boost::intrusive_ptr<  kmldom::AbstractLatLonBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractLatLonBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAbstractView(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AbstractViewPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAbstractView",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAbstractView" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsAbstractView(arg1);
  {
    boost::intrusive_ptr<  kmldom::AbstractView > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AbstractView >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AbstractView_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsColorStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ColorStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsColorStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsColorStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsColorStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::ColorStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ColorStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsContainer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ContainerPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsContainer",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsContainer" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsContainer(arg1);
  {
    boost::intrusive_ptr<  kmldom::Container > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Container >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Container_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsFeature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::FeaturePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsFeature",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsFeature" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsFeature(arg1);
  {
    boost::intrusive_ptr<  kmldom::Feature > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Feature >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Feature_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GeometryPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGeometry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGeometry" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGeometry(arg1);
  {
    boost::intrusive_ptr<  kmldom::Geometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Geometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Geometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ObjectPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsObject",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsObject" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsObject(arg1);
  {
    boost::intrusive_ptr<  kmldom::Object > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Object >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Object_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OverlayPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsOverlay",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsOverlay" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsOverlay(arg1);
  {
    boost::intrusive_ptr<  kmldom::Overlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Overlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Overlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsStyleSelector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::StyleSelectorPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsStyleSelector",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsStyleSelector" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsStyleSelector(arg1);
  {
    boost::intrusive_ptr<  kmldom::StyleSelector > *smartresult = result ? new boost::intrusive_ptr<  kmldom::StyleSelector >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsSubStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SubStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsSubStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsSubStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsSubStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::SubStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SubStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SubStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsTimePrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::TimePrimitivePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsTimePrimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsTimePrimitive" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsTimePrimitive(arg1);
  {
    boost::intrusive_ptr<  kmldom::TimePrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimePrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAlias(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::AliasPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAlias",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAlias" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsAlias(arg1);
  {
    boost::intrusive_ptr<  kmldom::Alias > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Alias >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Alias_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsBalloonStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::BalloonStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsBalloonStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsBalloonStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsBalloonStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::BalloonStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::BalloonStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsCamera(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CameraPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsCamera",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsCamera" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsCamera(arg1);
  {
    boost::intrusive_ptr<  kmldom::Camera > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Camera >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Camera_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ChangePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsChange",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsChange" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsChange(arg1);
  {
    boost::intrusive_ptr<  kmldom::Change > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Change >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Change_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsCoordinates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::CoordinatesPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsCoordinates",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsCoordinates" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsCoordinates((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::Coordinates > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Coordinates >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Coordinates_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsCreate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::CreatePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsCreate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsCreate" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsCreate(arg1);
  {
    boost::intrusive_ptr<  kmldom::Create > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Create >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Create_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::DataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsData",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsData" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsData(arg1);
  {
    boost::intrusive_ptr<  kmldom::Data > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Data >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Data_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsDelete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::DeletePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsDelete",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsDelete" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsDelete(arg1);
  {
    boost::intrusive_ptr<  kmldom::Delete > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Delete >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Delete_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsDocument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::DocumentPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsDocument",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsDocument" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsDocument(arg1);
  {
    boost::intrusive_ptr<  kmldom::Document > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Document >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Document_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsExtendedData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::ExtendedDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsExtendedData",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsExtendedData" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsExtendedData((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::ExtendedData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ExtendedData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ExtendedData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsFolder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::FolderPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsFolder",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsFolder" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsFolder(arg1);
  {
    boost::intrusive_ptr<  kmldom::Folder > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Folder >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Folder_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGroundOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GroundOverlayPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGroundOverlay",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGroundOverlay" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGroundOverlay(arg1);
  {
    boost::intrusive_ptr<  kmldom::GroundOverlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GroundOverlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsHotSpot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::HotSpotPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsHotSpot",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsHotSpot" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsHotSpot(arg1);
  {
    boost::intrusive_ptr<  kmldom::HotSpot > *smartresult = result ? new boost::intrusive_ptr<  kmldom::HotSpot >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__HotSpot_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsIcon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsIcon" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsIcon(arg1);
  {
    boost::intrusive_ptr<  kmldom::Icon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Icon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Icon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsIconStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsIconStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsIconStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsIconStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::IconStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::IconStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsIconStyleIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::IconStyleIconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsIconStyleIcon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsIconStyleIcon" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsIconStyleIcon(arg1);
  {
    boost::intrusive_ptr<  kmldom::IconStyleIcon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::IconStyleIcon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsImagePyramid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ImagePyramidPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsImagePyramid",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsImagePyramid" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsImagePyramid(arg1);
  {
    boost::intrusive_ptr<  kmldom::ImagePyramid > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ImagePyramid >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsInnerBoundaryIs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::InnerBoundaryIsPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsInnerBoundaryIs",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsInnerBoundaryIs" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsInnerBoundaryIs(arg1);
  {
    boost::intrusive_ptr<  kmldom::InnerBoundaryIs > *smartresult = result ? new boost::intrusive_ptr<  kmldom::InnerBoundaryIs >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsItemIcon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ItemIconPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsItemIcon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsItemIcon" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsItemIcon(arg1);
  {
    boost::intrusive_ptr<  kmldom::ItemIcon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ItemIcon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ItemIcon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsKml(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::KmlPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsKml",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsKml" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsKml((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::Kml > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Kml >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Kml_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLabelStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LabelStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLabelStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLabelStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLabelStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::LabelStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LabelStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LabelStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLatLonAltBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LatLonAltBoxPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLatLonAltBox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLatLonAltBox" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLatLonAltBox(arg1);
  {
    boost::intrusive_ptr<  kmldom::LatLonAltBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LatLonAltBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLatLonBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LatLonBoxPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLatLonBox",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLatLonBox" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLatLonBox(arg1);
  {
    boost::intrusive_ptr<  kmldom::LatLonBox > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LatLonBox >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LatLonBox_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLineString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LineStringPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLineString",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLineString" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLineString(arg1);
  {
    boost::intrusive_ptr<  kmldom::LineString > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LineString >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineString_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLineStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LineStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLineStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLineStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLineStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::LineStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LineStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LineStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLinearRing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinearRingPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLinearRing",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLinearRing" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLinearRing(arg1);
  {
    boost::intrusive_ptr<  kmldom::LinearRing > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LinearRing >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinearRing_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLink" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLink(arg1);
  {
    boost::intrusive_ptr<  kmldom::Link > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Link >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Link_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLinkSnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LinkSnippetPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLinkSnippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLinkSnippet" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLinkSnippet(arg1);
  {
    boost::intrusive_ptr<  kmldom::LinkSnippet > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LinkSnippet >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsListStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ListStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsListStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsListStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsListStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::ListStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ListStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ListStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLocation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LocationPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLocation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLocation" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLocation(arg1);
  {
    boost::intrusive_ptr<  kmldom::Location > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Location >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Location_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LodPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLod",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLod" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLod(arg1);
  {
    boost::intrusive_ptr<  kmldom::Lod > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Lod >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Lod_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsLookAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::LookAtPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsLookAt",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsLookAt" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsLookAt(arg1);
  {
    boost::intrusive_ptr<  kmldom::LookAt > *smartresult = result ? new boost::intrusive_ptr<  kmldom::LookAt >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__LookAt_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsMetadata(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::Metadata > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsMetadata",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsMetadata" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsMetadata((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::MetadataPtr(static_cast< const kmldom::MetadataPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Metadata_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsModel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ModelPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsModel",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsModel" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsModel(arg1);
  {
    boost::intrusive_ptr<  kmldom::Model > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Model >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Model_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsMultiGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::MultiGeometryPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsMultiGeometry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsMultiGeometry" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsMultiGeometry(arg1);
  {
    boost::intrusive_ptr<  kmldom::MultiGeometry > *smartresult = result ? new boost::intrusive_ptr<  kmldom::MultiGeometry >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsNetworkLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::NetworkLinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsNetworkLink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsNetworkLink" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsNetworkLink(arg1);
  {
    boost::intrusive_ptr<  kmldom::NetworkLink > *smartresult = result ? new boost::intrusive_ptr<  kmldom::NetworkLink >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLink_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsNetworkLinkControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::NetworkLinkControlPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsNetworkLinkControl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsNetworkLinkControl" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsNetworkLinkControl((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::NetworkLinkControl > *smartresult = result ? new boost::intrusive_ptr<  kmldom::NetworkLinkControl >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsOrientation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OrientationPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsOrientation",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsOrientation" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsOrientation(arg1);
  {
    boost::intrusive_ptr<  kmldom::Orientation > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Orientation >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Orientation_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsOuterBoundaryIs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OuterBoundaryIsPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsOuterBoundaryIs",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsOuterBoundaryIs" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsOuterBoundaryIs(arg1);
  {
    boost::intrusive_ptr<  kmldom::OuterBoundaryIs > *smartresult = result ? new boost::intrusive_ptr<  kmldom::OuterBoundaryIs >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsOverlayXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::OverlayXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsOverlayXY",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsOverlayXY" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsOverlayXY(arg1);
  {
    boost::intrusive_ptr<  kmldom::OverlayXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::OverlayXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__OverlayXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsPair(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PairPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsPair",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsPair" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsPair(arg1);
  {
    boost::intrusive_ptr<  kmldom::Pair > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Pair >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Pair_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsPhotoOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PhotoOverlayPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsPhotoOverlay",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsPhotoOverlay" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsPhotoOverlay(arg1);
  {
    boost::intrusive_ptr<  kmldom::PhotoOverlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::PhotoOverlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsPlacemark(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PlacemarkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsPlacemark",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsPlacemark" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsPlacemark(arg1);
  {
    boost::intrusive_ptr<  kmldom::Placemark > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Placemark >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Placemark_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PointPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsPoint",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsPoint" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsPoint(arg1);
  {
    boost::intrusive_ptr<  kmldom::Point > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Point >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Point_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsPolyStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PolyStylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsPolyStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsPolyStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsPolyStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::PolyStyle > *smartresult = result ? new boost::intrusive_ptr<  kmldom::PolyStyle >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__PolyStyle_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsPolygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::PolygonPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsPolygon",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsPolygon" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsPolygon(arg1);
  {
    boost::intrusive_ptr<  kmldom::Polygon > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Polygon >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Polygon_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsRegion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::RegionPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsRegion",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsRegion" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsRegion(arg1);
  {
    boost::intrusive_ptr<  kmldom::Region > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Region >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Region_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsResourceMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ResourceMapPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsResourceMap",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsResourceMap" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsResourceMap(arg1);
  {
    boost::intrusive_ptr<  kmldom::ResourceMap > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ResourceMap >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ResourceMap_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsRotationXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::RotationXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsRotationXY",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsRotationXY" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsRotationXY(arg1);
  {
    boost::intrusive_ptr<  kmldom::RotationXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::RotationXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__RotationXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ScalePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsScale",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsScale" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsScale(arg1);
  {
    boost::intrusive_ptr<  kmldom::Scale > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Scale >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Scale_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsSchema(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SchemaPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsSchema",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsSchema" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsSchema(arg1);
  {
    boost::intrusive_ptr<  kmldom::Schema > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Schema >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Schema_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsSchemaData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SchemaDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsSchemaData",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsSchemaData" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsSchemaData(arg1);
  {
    boost::intrusive_ptr<  kmldom::SchemaData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SchemaData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SchemaData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsScreenOverlay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ScreenOverlayPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsScreenOverlay",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsScreenOverlay" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsScreenOverlay(arg1);
  {
    boost::intrusive_ptr<  kmldom::ScreenOverlay > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ScreenOverlay >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsScreenXY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ScreenXYPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsScreenXY",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsScreenXY" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsScreenXY(arg1);
  {
    boost::intrusive_ptr<  kmldom::ScreenXY > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ScreenXY >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ScreenXY_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsSimpleData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::SimpleDataPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsSimpleData",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsSimpleData" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsSimpleData((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::SimpleData > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SimpleData >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleData_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsSimpleField(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::SimpleFieldPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsSimpleField",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsSimpleField" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsSimpleField((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::SimpleField > *smartresult = result ? new boost::intrusive_ptr<  kmldom::SimpleField >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__SimpleField_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SizePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsSize",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsSize" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsSize(arg1);
  {
    boost::intrusive_ptr<  kmldom::Size > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Size >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Size_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsSnippet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::SnippetPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsSnippet",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsSnippet" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsSnippet(arg1);
  {
    boost::intrusive_ptr<  kmldom::Snippet > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Snippet >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Snippet_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsStyle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::StylePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsStyle",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsStyle" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsStyle(arg1);
  {
    boost::intrusive_ptr<  kmldom::Style > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Style >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Style_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsStyleMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::StyleMapPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsStyleMap",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsStyleMap" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsStyleMap(arg1);
  {
    boost::intrusive_ptr<  kmldom::StyleMap > *smartresult = result ? new boost::intrusive_ptr<  kmldom::StyleMap >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__StyleMap_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsTimeSpan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::TimeSpanPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsTimeSpan",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsTimeSpan" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsTimeSpan(arg1);
  {
    boost::intrusive_ptr<  kmldom::TimeSpan > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimeSpan >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeSpan_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsTimeStamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::TimeStampPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsTimeStamp",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsTimeStamp" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsTimeStamp(arg1);
  {
    boost::intrusive_ptr<  kmldom::TimeStamp > *smartresult = result ? new boost::intrusive_ptr<  kmldom::TimeStamp >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__TimeStamp_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::UpdatePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsUpdate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsUpdate" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsUpdate((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::Update > *smartresult = result ? new boost::intrusive_ptr<  kmldom::Update >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Update_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsViewVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::ViewVolumePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsViewVolume",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsViewVolume" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsViewVolume(arg1);
  {
    boost::intrusive_ptr<  kmldom::ViewVolume > *smartresult = result ? new boost::intrusive_ptr<  kmldom::ViewVolume >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__ViewVolume_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAtomAuthor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::AtomAuthorPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAtomAuthor",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAtomAuthor" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsAtomAuthor((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::AtomAuthor > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AtomAuthor >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAtomCategory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::AtomCategory > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAtomCategory",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAtomCategory" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsAtomCategory((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::AtomCategoryPtr(static_cast< const kmldom::AtomCategoryPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomCategory_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAtomContent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::AtomContent > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAtomContent",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAtomContent" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsAtomContent((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::AtomContentPtr(static_cast< const kmldom::AtomContentPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomContent_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAtomEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::AtomEntry > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAtomEntry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAtomEntry" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsAtomEntry((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::AtomEntryPtr(static_cast< const kmldom::AtomEntryPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomEntry_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAtomFeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::AtomFeed > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAtomFeed",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAtomFeed" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsAtomFeed((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::AtomFeedPtr(static_cast< const kmldom::AtomFeedPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomFeed_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsAtomLink(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  kmldom::AtomLinkPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsAtomLink",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsAtomLink" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsAtomLink((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  {
    boost::intrusive_ptr<  kmldom::AtomLink > *smartresult = result ? new boost::intrusive_ptr<  kmldom::AtomLink >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__AtomLink_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsXalAddressDetails(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::XalAddressDetails > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsXalAddressDetails",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsXalAddressDetails" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsXalAddressDetails((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::XalAddressDetailsPtr(static_cast< const kmldom::XalAddressDetailsPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalAddressDetails_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsXalAdministrativeArea(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::XalAdministrativeArea > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsXalAdministrativeArea",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsXalAdministrativeArea" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsXalAdministrativeArea((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::XalAdministrativeAreaPtr(static_cast< const kmldom::XalAdministrativeAreaPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalAdministrativeArea_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsXalCountry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::XalCountry > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsXalCountry",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsXalCountry" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsXalCountry((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::XalCountryPtr(static_cast< const kmldom::XalCountryPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalCountry_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsXalLocality(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::XalLocality > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsXalLocality",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsXalLocality" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsXalLocality((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::XalLocalityPtr(static_cast< const kmldom::XalLocalityPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalLocality_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsXalPostalCode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::XalPostalCode > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsXalPostalCode",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsXalPostalCode" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsXalPostalCode((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::XalPostalCodePtr(static_cast< const kmldom::XalPostalCodePtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalPostalCode_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsXalSubAdministrativeArea(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::XalSubAdministrativeArea > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsXalSubAdministrativeArea",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsXalSubAdministrativeArea" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsXalSubAdministrativeArea((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::XalSubAdministrativeAreaPtr(static_cast< const kmldom::XalSubAdministrativeAreaPtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalSubAdministrativeArea_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsXalThoroughfare(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr *arg1 = 0 ;
  void *argp1 ;
  int res1 = 0 ;
  kmldom::ElementPtr tempshared1 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< boost::intrusive_ptr< kmldom::XalThoroughfare > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsXalThoroughfare",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsXalThoroughfare" "', argument " "1"" of type '" "kmldom::ElementPtr const &""'"); 
    }
    if (newmem & SWIG_CAST_NEW_MEMORY) {
      if (argp1) tempshared1 = *reinterpret_cast< kmldom::ElementPtr * >(argp1);
      delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
      arg1 = &tempshared1;
    } else {
      arg1 = (argp1) ? reinterpret_cast< kmldom::ElementPtr * >(argp1) : &tempshared1;
    }
  }
  result = kmldom::AsXalThoroughfare((boost::intrusive_ptr< kmldom::Element > const &)*arg1);
  resultobj = SWIG_NewPointerObj((new kmldom::XalThoroughfarePtr(static_cast< const kmldom::XalThoroughfarePtr& >(result))), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__XalThoroughfare_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxAnimatedUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxAnimatedUpdatePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxAnimatedUpdate",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxAnimatedUpdate" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxAnimatedUpdate(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxAnimatedUpdate > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxAnimatedUpdate >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxFlyTo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxFlyToPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxFlyTo",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxFlyTo" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxFlyTo(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxFlyTo > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxFlyTo >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxLatLonQuad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxLatLonQuadPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxLatLonQuad",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxLatLonQuad" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxLatLonQuad(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxLatLonQuad > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxLatLonQuad >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxPlaylist(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxPlaylistPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxPlaylist",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxPlaylist" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxPlaylist(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxPlaylist > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxPlaylist >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxSoundCue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxSoundCuePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxSoundCue",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxSoundCue" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxSoundCue(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxSoundCue > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxSoundCue >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxTimeSpan(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTimeSpanPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxTimeSpan",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxTimeSpan" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxTimeSpan(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTimeSpan > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTimeSpan >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxTimeStamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTimeStampPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxTimeStamp",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxTimeStamp" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxTimeStamp(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTimeStamp > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTimeStamp >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxTour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTourPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxTour",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxTour" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxTour(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTour > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTour >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTour_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxTourControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTourControlPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxTourControl",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxTourControl" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxTourControl(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTourControl > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourControl >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourControl_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxTourPrimitive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxTourPrimitivePtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxTourPrimitive",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxTourPrimitive" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxTourPrimitive(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxTourPrimitive > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxTourPrimitive >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AsGxWait(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  kmldom::ElementPtr arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  kmldom::GxWaitPtr result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AsGxWait",&obj0)) SWIG_fail;
  {
    int newmem = 0;
    res1 = SWIG_ConvertPtrAndOwn(obj0, &argp1, SWIGTYPE_p_boost__intrusive_ptrT_kmldom__Element_t,  0 , &newmem);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AsGxWait" "', argument " "1"" of type '" "kmldom::ElementPtr const""'"); 
    }
    if (argp1) arg1 = *(reinterpret_cast< kmldom::ElementPtr * >(argp1));
    if (newmem & SWIG_CAST_NEW_MEMORY) delete reinterpret_cast< kmldom::ElementPtr * >(argp1);
  }
  result = kmldom::AsGxWait(arg1);
  {
    boost::intrusive_ptr<  kmldom::GxWait > *smartresult = result ? new boost::intrusive_ptr<  kmldom::GxWait >(result) : 0;
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(smartresult), SWIGTYPE_p_boost__intrusive_ptrT_kmldom__GxWait_t, SWIG_POINTER_OWN);
  }
  return resultobj;
fail:
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_Referent", _wrap_delete_Referent, METH_VARARGS, NULL},
	 { (char *)"Referent_swigregister", Referent_swigregister, METH_VARARGS, NULL},
	 { (char *)"XmlElement_SWIGSharedPtrUpcast", _wrap_XmlElement_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_XmlElement", _wrap_delete_XmlElement, METH_VARARGS, NULL},
	 { (char *)"XmlElement_swigregister", XmlElement_swigregister, METH_VARARGS, NULL},
	 { (char *)"Element_Type", _wrap_Element_Type, METH_VARARGS, NULL},
	 { (char *)"Element_IsA", _wrap_Element_IsA, METH_VARARGS, NULL},
	 { (char *)"Element_SWIGSharedPtrUpcast", _wrap_Element_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Element", _wrap_delete_Element, METH_VARARGS, NULL},
	 { (char *)"Element_swigregister", Element_swigregister, METH_VARARGS, NULL},
	 { (char *)"Coordinates_add_latlng", _wrap_Coordinates_add_latlng, METH_VARARGS, NULL},
	 { (char *)"Coordinates_add_latlngalt", _wrap_Coordinates_add_latlngalt, METH_VARARGS, NULL},
	 { (char *)"Coordinates_get_coordinates_array_size", _wrap_Coordinates_get_coordinates_array_size, METH_VARARGS, NULL},
	 { (char *)"Coordinates_get_coordinates_array_at", _wrap_Coordinates_get_coordinates_array_at, METH_VARARGS, NULL},
	 { (char *)"Coordinates_SWIGSharedPtrUpcast", _wrap_Coordinates_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Coordinates", _wrap_delete_Coordinates, METH_VARARGS, NULL},
	 { (char *)"Coordinates_swigregister", Coordinates_swigregister, METH_VARARGS, NULL},
	 { (char *)"Vec2_get_x", _wrap_Vec2_get_x, METH_VARARGS, NULL},
	 { (char *)"Vec2_set_x", _wrap_Vec2_set_x, METH_VARARGS, NULL},
	 { (char *)"Vec2_has_x", _wrap_Vec2_has_x, METH_VARARGS, NULL},
	 { (char *)"Vec2_clear_x", _wrap_Vec2_clear_x, METH_VARARGS, NULL},
	 { (char *)"Vec2_get_y", _wrap_Vec2_get_y, METH_VARARGS, NULL},
	 { (char *)"Vec2_set_y", _wrap_Vec2_set_y, METH_VARARGS, NULL},
	 { (char *)"Vec2_has_y", _wrap_Vec2_has_y, METH_VARARGS, NULL},
	 { (char *)"Vec2_clear_y", _wrap_Vec2_clear_y, METH_VARARGS, NULL},
	 { (char *)"Vec2_get_xunits", _wrap_Vec2_get_xunits, METH_VARARGS, NULL},
	 { (char *)"Vec2_set_xunits", _wrap_Vec2_set_xunits, METH_VARARGS, NULL},
	 { (char *)"Vec2_has_xunits", _wrap_Vec2_has_xunits, METH_VARARGS, NULL},
	 { (char *)"Vec2_clear_xunits", _wrap_Vec2_clear_xunits, METH_VARARGS, NULL},
	 { (char *)"Vec2_get_yunits", _wrap_Vec2_get_yunits, METH_VARARGS, NULL},
	 { (char *)"Vec2_set_yunits", _wrap_Vec2_set_yunits, METH_VARARGS, NULL},
	 { (char *)"Vec2_has_yunits", _wrap_Vec2_has_yunits, METH_VARARGS, NULL},
	 { (char *)"Vec2_clear_yunits", _wrap_Vec2_clear_yunits, METH_VARARGS, NULL},
	 { (char *)"Vec2_SWIGSharedPtrUpcast", _wrap_Vec2_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Vec2", _wrap_delete_Vec2, METH_VARARGS, NULL},
	 { (char *)"Vec2_swigregister", Vec2_swigregister, METH_VARARGS, NULL},
	 { (char *)"Object_get_id", _wrap_Object_get_id, METH_VARARGS, NULL},
	 { (char *)"Object_set_id", _wrap_Object_set_id, METH_VARARGS, NULL},
	 { (char *)"Object_has_id", _wrap_Object_has_id, METH_VARARGS, NULL},
	 { (char *)"Object_clear_id", _wrap_Object_clear_id, METH_VARARGS, NULL},
	 { (char *)"Object_get_targetid", _wrap_Object_get_targetid, METH_VARARGS, NULL},
	 { (char *)"Object_set_targetid", _wrap_Object_set_targetid, METH_VARARGS, NULL},
	 { (char *)"Object_has_targetid", _wrap_Object_has_targetid, METH_VARARGS, NULL},
	 { (char *)"Object_clear_targetid", _wrap_Object_clear_targetid, METH_VARARGS, NULL},
	 { (char *)"Object_SWIGSharedPtrUpcast", _wrap_Object_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Object", _wrap_delete_Object, METH_VARARGS, NULL},
	 { (char *)"Object_swigregister", Object_swigregister, METH_VARARGS, NULL},
	 { (char *)"SubStyle_SWIGSharedPtrUpcast", _wrap_SubStyle_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_SubStyle", _wrap_delete_SubStyle, METH_VARARGS, NULL},
	 { (char *)"SubStyle_swigregister", SubStyle_swigregister, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_get_color", _wrap_ColorStyle_get_color, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_set_color", _wrap_ColorStyle_set_color, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_has_color", _wrap_ColorStyle_has_color, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_clear_color", _wrap_ColorStyle_clear_color, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_get_colormode", _wrap_ColorStyle_get_colormode, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_set_colormode", _wrap_ColorStyle_set_colormode, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_has_colormode", _wrap_ColorStyle_has_colormode, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_clear_colormode", _wrap_ColorStyle_clear_colormode, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_SWIGSharedPtrUpcast", _wrap_ColorStyle_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ColorStyle", _wrap_delete_ColorStyle, METH_VARARGS, NULL},
	 { (char *)"ColorStyle_swigregister", ColorStyle_swigregister, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_get_text", _wrap_SnippetCommon_get_text, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_set_text", _wrap_SnippetCommon_set_text, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_has_text", _wrap_SnippetCommon_has_text, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_clear_text", _wrap_SnippetCommon_clear_text, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_get_maxlines", _wrap_SnippetCommon_get_maxlines, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_set_maxlines", _wrap_SnippetCommon_set_maxlines, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_has_maxlines", _wrap_SnippetCommon_has_maxlines, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_clear_maxlines", _wrap_SnippetCommon_clear_maxlines, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_SWIGSharedPtrUpcast", _wrap_SnippetCommon_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_SnippetCommon", _wrap_delete_SnippetCommon, METH_VARARGS, NULL},
	 { (char *)"SnippetCommon_swigregister", SnippetCommon_swigregister, METH_VARARGS, NULL},
	 { (char *)"Snippet_SWIGSharedPtrUpcast", _wrap_Snippet_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Snippet", _wrap_delete_Snippet, METH_VARARGS, NULL},
	 { (char *)"Snippet_swigregister", Snippet_swigregister, METH_VARARGS, NULL},
	 { (char *)"LinkSnippet_SWIGSharedPtrUpcast", _wrap_LinkSnippet_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_LinkSnippet", _wrap_delete_LinkSnippet, METH_VARARGS, NULL},
	 { (char *)"LinkSnippet_swigregister", LinkSnippet_swigregister, METH_VARARGS, NULL},
	 { (char *)"AbstractView_get_gx_timeprimitive", _wrap_AbstractView_get_gx_timeprimitive, METH_VARARGS, NULL},
	 { (char *)"AbstractView_has_gx_timeprimitive", _wrap_AbstractView_has_gx_timeprimitive, METH_VARARGS, NULL},
	 { (char *)"AbstractView_set_gx_timeprimitive", _wrap_AbstractView_set_gx_timeprimitive, METH_VARARGS, NULL},
	 { (char *)"AbstractView_clear_gx_timeprimitive", _wrap_AbstractView_clear_gx_timeprimitive, METH_VARARGS, NULL},
	 { (char *)"AbstractView_SWIGSharedPtrUpcast", _wrap_AbstractView_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_AbstractView", _wrap_delete_AbstractView, METH_VARARGS, NULL},
	 { (char *)"AbstractView_swigregister", AbstractView_swigregister, METH_VARARGS, NULL},
	 { (char *)"TimePrimitive_SWIGSharedPtrUpcast", _wrap_TimePrimitive_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_TimePrimitive", _wrap_delete_TimePrimitive, METH_VARARGS, NULL},
	 { (char *)"TimePrimitive_swigregister", TimePrimitive_swigregister, METH_VARARGS, NULL},
	 { (char *)"StyleSelector_SWIGSharedPtrUpcast", _wrap_StyleSelector_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_StyleSelector", _wrap_delete_StyleSelector, METH_VARARGS, NULL},
	 { (char *)"StyleSelector_swigregister", StyleSelector_swigregister, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_get_north", _wrap_AbstractLatLonBox_get_north, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_has_north", _wrap_AbstractLatLonBox_has_north, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_set_north", _wrap_AbstractLatLonBox_set_north, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_clear_north", _wrap_AbstractLatLonBox_clear_north, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_get_south", _wrap_AbstractLatLonBox_get_south, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_has_south", _wrap_AbstractLatLonBox_has_south, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_set_south", _wrap_AbstractLatLonBox_set_south, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_clear_south", _wrap_AbstractLatLonBox_clear_south, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_get_east", _wrap_AbstractLatLonBox_get_east, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_has_east", _wrap_AbstractLatLonBox_has_east, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_set_east", _wrap_AbstractLatLonBox_set_east, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_clear_east", _wrap_AbstractLatLonBox_clear_east, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_get_west", _wrap_AbstractLatLonBox_get_west, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_has_west", _wrap_AbstractLatLonBox_has_west, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_set_west", _wrap_AbstractLatLonBox_set_west, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_clear_west", _wrap_AbstractLatLonBox_clear_west, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_SWIGSharedPtrUpcast", _wrap_AbstractLatLonBox_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_AbstractLatLonBox", _wrap_delete_AbstractLatLonBox, METH_VARARGS, NULL},
	 { (char *)"AbstractLatLonBox_swigregister", AbstractLatLonBox_swigregister, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_get_minaltitude", _wrap_LatLonAltBox_get_minaltitude, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_set_minaltitude", _wrap_LatLonAltBox_set_minaltitude, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_has_minaltitude", _wrap_LatLonAltBox_has_minaltitude, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_clear_minaltitude", _wrap_LatLonAltBox_clear_minaltitude, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_get_maxaltitude", _wrap_LatLonAltBox_get_maxaltitude, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_set_maxaltitude", _wrap_LatLonAltBox_set_maxaltitude, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_has_maxaltitude", _wrap_LatLonAltBox_has_maxaltitude, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_clear_maxaltitude", _wrap_LatLonAltBox_clear_maxaltitude, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_get_altitudemode", _wrap_LatLonAltBox_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_set_altitudemode", _wrap_LatLonAltBox_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_has_altitudemode", _wrap_LatLonAltBox_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_clear_altitudemode", _wrap_LatLonAltBox_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_get_gx_altitudemode", _wrap_LatLonAltBox_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_has_gx_altitudemode", _wrap_LatLonAltBox_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_set_gx_altitudemode", _wrap_LatLonAltBox_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_clear_gx_altitudemode", _wrap_LatLonAltBox_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_SWIGSharedPtrUpcast", _wrap_LatLonAltBox_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_LatLonAltBox", _wrap_delete_LatLonAltBox, METH_VARARGS, NULL},
	 { (char *)"LatLonAltBox_swigregister", LatLonAltBox_swigregister, METH_VARARGS, NULL},
	 { (char *)"Lod_get_minlodpixels", _wrap_Lod_get_minlodpixels, METH_VARARGS, NULL},
	 { (char *)"Lod_set_minlodpixels", _wrap_Lod_set_minlodpixels, METH_VARARGS, NULL},
	 { (char *)"Lod_has_minlodpixels", _wrap_Lod_has_minlodpixels, METH_VARARGS, NULL},
	 { (char *)"Lod_clear_minlodpixels", _wrap_Lod_clear_minlodpixels, METH_VARARGS, NULL},
	 { (char *)"Lod_get_maxlodpixels", _wrap_Lod_get_maxlodpixels, METH_VARARGS, NULL},
	 { (char *)"Lod_set_maxlodpixels", _wrap_Lod_set_maxlodpixels, METH_VARARGS, NULL},
	 { (char *)"Lod_has_maxlodpixels", _wrap_Lod_has_maxlodpixels, METH_VARARGS, NULL},
	 { (char *)"Lod_clear_maxlodpixels", _wrap_Lod_clear_maxlodpixels, METH_VARARGS, NULL},
	 { (char *)"Lod_get_minfadeextent", _wrap_Lod_get_minfadeextent, METH_VARARGS, NULL},
	 { (char *)"Lod_set_minfadeextent", _wrap_Lod_set_minfadeextent, METH_VARARGS, NULL},
	 { (char *)"Lod_has_minfadeextent", _wrap_Lod_has_minfadeextent, METH_VARARGS, NULL},
	 { (char *)"Lod_clear_minfadeextent", _wrap_Lod_clear_minfadeextent, METH_VARARGS, NULL},
	 { (char *)"Lod_get_maxfadeextent", _wrap_Lod_get_maxfadeextent, METH_VARARGS, NULL},
	 { (char *)"Lod_set_maxfadeextent", _wrap_Lod_set_maxfadeextent, METH_VARARGS, NULL},
	 { (char *)"Lod_has_maxfadeextent", _wrap_Lod_has_maxfadeextent, METH_VARARGS, NULL},
	 { (char *)"Lod_clear_maxfadeextent", _wrap_Lod_clear_maxfadeextent, METH_VARARGS, NULL},
	 { (char *)"Lod_SWIGSharedPtrUpcast", _wrap_Lod_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Lod", _wrap_delete_Lod, METH_VARARGS, NULL},
	 { (char *)"Lod_swigregister", Lod_swigregister, METH_VARARGS, NULL},
	 { (char *)"Region_get_latlonaltbox", _wrap_Region_get_latlonaltbox, METH_VARARGS, NULL},
	 { (char *)"Region_set_latlonaltbox", _wrap_Region_set_latlonaltbox, METH_VARARGS, NULL},
	 { (char *)"Region_has_latlonaltbox", _wrap_Region_has_latlonaltbox, METH_VARARGS, NULL},
	 { (char *)"Region_clear_latlonaltbox", _wrap_Region_clear_latlonaltbox, METH_VARARGS, NULL},
	 { (char *)"Region_get_lod", _wrap_Region_get_lod, METH_VARARGS, NULL},
	 { (char *)"Region_set_lod", _wrap_Region_set_lod, METH_VARARGS, NULL},
	 { (char *)"Region_has_lod", _wrap_Region_has_lod, METH_VARARGS, NULL},
	 { (char *)"Region_clear_lod", _wrap_Region_clear_lod, METH_VARARGS, NULL},
	 { (char *)"Region_SWIGSharedPtrUpcast", _wrap_Region_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Region", _wrap_delete_Region, METH_VARARGS, NULL},
	 { (char *)"Region_swigregister", Region_swigregister, METH_VARARGS, NULL},
	 { (char *)"ExtendedData_add_data", _wrap_ExtendedData_add_data, METH_VARARGS, NULL},
	 { (char *)"ExtendedData_get_data_array_size", _wrap_ExtendedData_get_data_array_size, METH_VARARGS, NULL},
	 { (char *)"ExtendedData_get_data_array_at", _wrap_ExtendedData_get_data_array_at, METH_VARARGS, NULL},
	 { (char *)"ExtendedData_add_schemadata", _wrap_ExtendedData_add_schemadata, METH_VARARGS, NULL},
	 { (char *)"ExtendedData_get_schemadata_array_size", _wrap_ExtendedData_get_schemadata_array_size, METH_VARARGS, NULL},
	 { (char *)"ExtendedData_get_schemadata_array_at", _wrap_ExtendedData_get_schemadata_array_at, METH_VARARGS, NULL},
	 { (char *)"ExtendedData_SWIGSharedPtrUpcast", _wrap_ExtendedData_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ExtendedData", _wrap_delete_ExtendedData, METH_VARARGS, NULL},
	 { (char *)"ExtendedData_swigregister", ExtendedData_swigregister, METH_VARARGS, NULL},
	 { (char *)"Feature_get_name", _wrap_Feature_get_name, METH_VARARGS, NULL},
	 { (char *)"Feature_set_name", _wrap_Feature_set_name, METH_VARARGS, NULL},
	 { (char *)"Feature_has_name", _wrap_Feature_has_name, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_name", _wrap_Feature_clear_name, METH_VARARGS, NULL},
	 { (char *)"Feature_get_visibility", _wrap_Feature_get_visibility, METH_VARARGS, NULL},
	 { (char *)"Feature_set_visibility", _wrap_Feature_set_visibility, METH_VARARGS, NULL},
	 { (char *)"Feature_has_visibility", _wrap_Feature_has_visibility, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_visibility", _wrap_Feature_clear_visibility, METH_VARARGS, NULL},
	 { (char *)"Feature_get_open", _wrap_Feature_get_open, METH_VARARGS, NULL},
	 { (char *)"Feature_set_open", _wrap_Feature_set_open, METH_VARARGS, NULL},
	 { (char *)"Feature_has_open", _wrap_Feature_has_open, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_open", _wrap_Feature_clear_open, METH_VARARGS, NULL},
	 { (char *)"Feature_get_atomauthor", _wrap_Feature_get_atomauthor, METH_VARARGS, NULL},
	 { (char *)"Feature_has_atomauthor", _wrap_Feature_has_atomauthor, METH_VARARGS, NULL},
	 { (char *)"Feature_set_atomauthor", _wrap_Feature_set_atomauthor, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_atomauthor", _wrap_Feature_clear_atomauthor, METH_VARARGS, NULL},
	 { (char *)"Feature_get_atomlink", _wrap_Feature_get_atomlink, METH_VARARGS, NULL},
	 { (char *)"Feature_has_atomlink", _wrap_Feature_has_atomlink, METH_VARARGS, NULL},
	 { (char *)"Feature_set_atomlink", _wrap_Feature_set_atomlink, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_atomlink", _wrap_Feature_clear_atomlink, METH_VARARGS, NULL},
	 { (char *)"Feature_get_address", _wrap_Feature_get_address, METH_VARARGS, NULL},
	 { (char *)"Feature_set_address", _wrap_Feature_set_address, METH_VARARGS, NULL},
	 { (char *)"Feature_has_address", _wrap_Feature_has_address, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_address", _wrap_Feature_clear_address, METH_VARARGS, NULL},
	 { (char *)"Feature_get_phonenumber", _wrap_Feature_get_phonenumber, METH_VARARGS, NULL},
	 { (char *)"Feature_set_phonenumber", _wrap_Feature_set_phonenumber, METH_VARARGS, NULL},
	 { (char *)"Feature_has_phonenumber", _wrap_Feature_has_phonenumber, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_phonenumber", _wrap_Feature_clear_phonenumber, METH_VARARGS, NULL},
	 { (char *)"Feature_get_snippet", _wrap_Feature_get_snippet, METH_VARARGS, NULL},
	 { (char *)"Feature_set_snippet", _wrap_Feature_set_snippet, METH_VARARGS, NULL},
	 { (char *)"Feature_has_snippet", _wrap_Feature_has_snippet, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_snippet", _wrap_Feature_clear_snippet, METH_VARARGS, NULL},
	 { (char *)"Feature_get_description", _wrap_Feature_get_description, METH_VARARGS, NULL},
	 { (char *)"Feature_set_description", _wrap_Feature_set_description, METH_VARARGS, NULL},
	 { (char *)"Feature_has_description", _wrap_Feature_has_description, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_description", _wrap_Feature_clear_description, METH_VARARGS, NULL},
	 { (char *)"Feature_get_abstractview", _wrap_Feature_get_abstractview, METH_VARARGS, NULL},
	 { (char *)"Feature_set_abstractview", _wrap_Feature_set_abstractview, METH_VARARGS, NULL},
	 { (char *)"Feature_has_abstractview", _wrap_Feature_has_abstractview, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_abstractview", _wrap_Feature_clear_abstractview, METH_VARARGS, NULL},
	 { (char *)"Feature_get_timeprimitive", _wrap_Feature_get_timeprimitive, METH_VARARGS, NULL},
	 { (char *)"Feature_set_timeprimitive", _wrap_Feature_set_timeprimitive, METH_VARARGS, NULL},
	 { (char *)"Feature_has_timeprimitive", _wrap_Feature_has_timeprimitive, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_timeprimitive", _wrap_Feature_clear_timeprimitive, METH_VARARGS, NULL},
	 { (char *)"Feature_get_styleurl", _wrap_Feature_get_styleurl, METH_VARARGS, NULL},
	 { (char *)"Feature_set_styleurl", _wrap_Feature_set_styleurl, METH_VARARGS, NULL},
	 { (char *)"Feature_has_styleurl", _wrap_Feature_has_styleurl, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_styleurl", _wrap_Feature_clear_styleurl, METH_VARARGS, NULL},
	 { (char *)"Feature_get_styleselector", _wrap_Feature_get_styleselector, METH_VARARGS, NULL},
	 { (char *)"Feature_set_styleselector", _wrap_Feature_set_styleselector, METH_VARARGS, NULL},
	 { (char *)"Feature_has_styleselector", _wrap_Feature_has_styleselector, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_styleselector", _wrap_Feature_clear_styleselector, METH_VARARGS, NULL},
	 { (char *)"Feature_get_region", _wrap_Feature_get_region, METH_VARARGS, NULL},
	 { (char *)"Feature_set_region", _wrap_Feature_set_region, METH_VARARGS, NULL},
	 { (char *)"Feature_has_region", _wrap_Feature_has_region, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_region", _wrap_Feature_clear_region, METH_VARARGS, NULL},
	 { (char *)"Feature_get_extendeddata", _wrap_Feature_get_extendeddata, METH_VARARGS, NULL},
	 { (char *)"Feature_set_extendeddata", _wrap_Feature_set_extendeddata, METH_VARARGS, NULL},
	 { (char *)"Feature_has_extendeddata", _wrap_Feature_has_extendeddata, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_extendeddata", _wrap_Feature_clear_extendeddata, METH_VARARGS, NULL},
	 { (char *)"Feature_get_gx_balloonvisibility", _wrap_Feature_get_gx_balloonvisibility, METH_VARARGS, NULL},
	 { (char *)"Feature_set_gx_balloonvisibility", _wrap_Feature_set_gx_balloonvisibility, METH_VARARGS, NULL},
	 { (char *)"Feature_has_gx_balloonvisibility", _wrap_Feature_has_gx_balloonvisibility, METH_VARARGS, NULL},
	 { (char *)"Feature_clear_gx_balloonvisibility", _wrap_Feature_clear_gx_balloonvisibility, METH_VARARGS, NULL},
	 { (char *)"Feature_SWIGSharedPtrUpcast", _wrap_Feature_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Feature", _wrap_delete_Feature, METH_VARARGS, NULL},
	 { (char *)"Feature_swigregister", Feature_swigregister, METH_VARARGS, NULL},
	 { (char *)"Container_add_feature", _wrap_Container_add_feature, METH_VARARGS, NULL},
	 { (char *)"Container_get_feature_array_size", _wrap_Container_get_feature_array_size, METH_VARARGS, NULL},
	 { (char *)"Container_get_feature_array_at", _wrap_Container_get_feature_array_at, METH_VARARGS, NULL},
	 { (char *)"Container_SWIGSharedPtrUpcast", _wrap_Container_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Container", _wrap_delete_Container, METH_VARARGS, NULL},
	 { (char *)"Container_swigregister", Container_swigregister, METH_VARARGS, NULL},
	 { (char *)"Geometry_SWIGSharedPtrUpcast", _wrap_Geometry_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Geometry", _wrap_delete_Geometry, METH_VARARGS, NULL},
	 { (char *)"Geometry_swigregister", Geometry_swigregister, METH_VARARGS, NULL},
	 { (char *)"BasicLink_get_href", _wrap_BasicLink_get_href, METH_VARARGS, NULL},
	 { (char *)"BasicLink_has_href", _wrap_BasicLink_has_href, METH_VARARGS, NULL},
	 { (char *)"BasicLink_set_href", _wrap_BasicLink_set_href, METH_VARARGS, NULL},
	 { (char *)"BasicLink_clear_href", _wrap_BasicLink_clear_href, METH_VARARGS, NULL},
	 { (char *)"BasicLink_SWIGSharedPtrUpcast", _wrap_BasicLink_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_BasicLink", _wrap_delete_BasicLink, METH_VARARGS, NULL},
	 { (char *)"BasicLink_swigregister", BasicLink_swigregister, METH_VARARGS, NULL},
	 { (char *)"Icon_get_refreshmode", _wrap_Icon_get_refreshmode, METH_VARARGS, NULL},
	 { (char *)"Icon_set_refreshmode", _wrap_Icon_set_refreshmode, METH_VARARGS, NULL},
	 { (char *)"Icon_has_refreshmode", _wrap_Icon_has_refreshmode, METH_VARARGS, NULL},
	 { (char *)"Icon_clear_refreshmode", _wrap_Icon_clear_refreshmode, METH_VARARGS, NULL},
	 { (char *)"Icon_get_refreshinterval", _wrap_Icon_get_refreshinterval, METH_VARARGS, NULL},
	 { (char *)"Icon_set_refreshinterval", _wrap_Icon_set_refreshinterval, METH_VARARGS, NULL},
	 { (char *)"Icon_has_refreshinterval", _wrap_Icon_has_refreshinterval, METH_VARARGS, NULL},
	 { (char *)"Icon_clear_refreshinterval", _wrap_Icon_clear_refreshinterval, METH_VARARGS, NULL},
	 { (char *)"Icon_get_viewrefreshmode", _wrap_Icon_get_viewrefreshmode, METH_VARARGS, NULL},
	 { (char *)"Icon_set_viewrefreshmode", _wrap_Icon_set_viewrefreshmode, METH_VARARGS, NULL},
	 { (char *)"Icon_has_viewrefreshmode", _wrap_Icon_has_viewrefreshmode, METH_VARARGS, NULL},
	 { (char *)"Icon_clear_viewrefreshmode", _wrap_Icon_clear_viewrefreshmode, METH_VARARGS, NULL},
	 { (char *)"Icon_get_viewrefreshtime", _wrap_Icon_get_viewrefreshtime, METH_VARARGS, NULL},
	 { (char *)"Icon_set_viewrefreshtime", _wrap_Icon_set_viewrefreshtime, METH_VARARGS, NULL},
	 { (char *)"Icon_has_viewrefreshtime", _wrap_Icon_has_viewrefreshtime, METH_VARARGS, NULL},
	 { (char *)"Icon_clear_viewrefreshtime", _wrap_Icon_clear_viewrefreshtime, METH_VARARGS, NULL},
	 { (char *)"Icon_get_viewboundscale", _wrap_Icon_get_viewboundscale, METH_VARARGS, NULL},
	 { (char *)"Icon_set_viewboundscale", _wrap_Icon_set_viewboundscale, METH_VARARGS, NULL},
	 { (char *)"Icon_has_viewboundscale", _wrap_Icon_has_viewboundscale, METH_VARARGS, NULL},
	 { (char *)"Icon_clear_viewboundscale", _wrap_Icon_clear_viewboundscale, METH_VARARGS, NULL},
	 { (char *)"Icon_get_viewformat", _wrap_Icon_get_viewformat, METH_VARARGS, NULL},
	 { (char *)"Icon_set_viewformat", _wrap_Icon_set_viewformat, METH_VARARGS, NULL},
	 { (char *)"Icon_has_viewformat", _wrap_Icon_has_viewformat, METH_VARARGS, NULL},
	 { (char *)"Icon_clear_viewformat", _wrap_Icon_clear_viewformat, METH_VARARGS, NULL},
	 { (char *)"Icon_get_httpquery", _wrap_Icon_get_httpquery, METH_VARARGS, NULL},
	 { (char *)"Icon_set_httpquery", _wrap_Icon_set_httpquery, METH_VARARGS, NULL},
	 { (char *)"Icon_has_httpquery", _wrap_Icon_has_httpquery, METH_VARARGS, NULL},
	 { (char *)"Icon_clear_httpquery", _wrap_Icon_clear_httpquery, METH_VARARGS, NULL},
	 { (char *)"Icon_SWIGSharedPtrUpcast", _wrap_Icon_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Icon", _wrap_delete_Icon, METH_VARARGS, NULL},
	 { (char *)"Icon_swigregister", Icon_swigregister, METH_VARARGS, NULL},
	 { (char *)"IconStyleIcon_get_href", _wrap_IconStyleIcon_get_href, METH_VARARGS, NULL},
	 { (char *)"IconStyleIcon_has_href", _wrap_IconStyleIcon_has_href, METH_VARARGS, NULL},
	 { (char *)"IconStyleIcon_set_href", _wrap_IconStyleIcon_set_href, METH_VARARGS, NULL},
	 { (char *)"IconStyleIcon_clear_href", _wrap_IconStyleIcon_clear_href, METH_VARARGS, NULL},
	 { (char *)"IconStyleIcon_SWIGSharedPtrUpcast", _wrap_IconStyleIcon_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_IconStyleIcon", _wrap_delete_IconStyleIcon, METH_VARARGS, NULL},
	 { (char *)"IconStyleIcon_swigregister", IconStyleIcon_swigregister, METH_VARARGS, NULL},
	 { (char *)"Overlay_get_color", _wrap_Overlay_get_color, METH_VARARGS, NULL},
	 { (char *)"Overlay_set_color", _wrap_Overlay_set_color, METH_VARARGS, NULL},
	 { (char *)"Overlay_has_color", _wrap_Overlay_has_color, METH_VARARGS, NULL},
	 { (char *)"Overlay_clear_color", _wrap_Overlay_clear_color, METH_VARARGS, NULL},
	 { (char *)"Overlay_get_draworder", _wrap_Overlay_get_draworder, METH_VARARGS, NULL},
	 { (char *)"Overlay_set_draworder", _wrap_Overlay_set_draworder, METH_VARARGS, NULL},
	 { (char *)"Overlay_has_draworder", _wrap_Overlay_has_draworder, METH_VARARGS, NULL},
	 { (char *)"Overlay_clear_draworder", _wrap_Overlay_clear_draworder, METH_VARARGS, NULL},
	 { (char *)"Overlay_get_icon", _wrap_Overlay_get_icon, METH_VARARGS, NULL},
	 { (char *)"Overlay_set_icon", _wrap_Overlay_set_icon, METH_VARARGS, NULL},
	 { (char *)"Overlay_has_icon", _wrap_Overlay_has_icon, METH_VARARGS, NULL},
	 { (char *)"Overlay_clear_icon", _wrap_Overlay_clear_icon, METH_VARARGS, NULL},
	 { (char *)"Overlay_SWIGSharedPtrUpcast", _wrap_Overlay_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Overlay", _wrap_delete_Overlay, METH_VARARGS, NULL},
	 { (char *)"Overlay_swigregister", Overlay_swigregister, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_get_bgcolor", _wrap_BalloonStyle_get_bgcolor, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_set_bgcolor", _wrap_BalloonStyle_set_bgcolor, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_has_bgcolor", _wrap_BalloonStyle_has_bgcolor, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_clear_bgcolor", _wrap_BalloonStyle_clear_bgcolor, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_get_textcolor", _wrap_BalloonStyle_get_textcolor, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_set_textcolor", _wrap_BalloonStyle_set_textcolor, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_has_textcolor", _wrap_BalloonStyle_has_textcolor, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_clear_textcolor", _wrap_BalloonStyle_clear_textcolor, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_get_text", _wrap_BalloonStyle_get_text, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_set_text", _wrap_BalloonStyle_set_text, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_has_text", _wrap_BalloonStyle_has_text, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_clear_text", _wrap_BalloonStyle_clear_text, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_get_displaymode", _wrap_BalloonStyle_get_displaymode, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_set_displaymode", _wrap_BalloonStyle_set_displaymode, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_has_displaymode", _wrap_BalloonStyle_has_displaymode, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_clear_displaymode", _wrap_BalloonStyle_clear_displaymode, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_SWIGSharedPtrUpcast", _wrap_BalloonStyle_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_BalloonStyle", _wrap_delete_BalloonStyle, METH_VARARGS, NULL},
	 { (char *)"BalloonStyle_swigregister", BalloonStyle_swigregister, METH_VARARGS, NULL},
	 { (char *)"Camera_get_longitude", _wrap_Camera_get_longitude, METH_VARARGS, NULL},
	 { (char *)"Camera_set_longitude", _wrap_Camera_set_longitude, METH_VARARGS, NULL},
	 { (char *)"Camera_has_longitude", _wrap_Camera_has_longitude, METH_VARARGS, NULL},
	 { (char *)"Camera_clear_longitude", _wrap_Camera_clear_longitude, METH_VARARGS, NULL},
	 { (char *)"Camera_get_latitude", _wrap_Camera_get_latitude, METH_VARARGS, NULL},
	 { (char *)"Camera_set_latitude", _wrap_Camera_set_latitude, METH_VARARGS, NULL},
	 { (char *)"Camera_has_latitude", _wrap_Camera_has_latitude, METH_VARARGS, NULL},
	 { (char *)"Camera_clear_latitude", _wrap_Camera_clear_latitude, METH_VARARGS, NULL},
	 { (char *)"Camera_get_altitude", _wrap_Camera_get_altitude, METH_VARARGS, NULL},
	 { (char *)"Camera_set_altitude", _wrap_Camera_set_altitude, METH_VARARGS, NULL},
	 { (char *)"Camera_has_altitude", _wrap_Camera_has_altitude, METH_VARARGS, NULL},
	 { (char *)"Camera_clear_altitude", _wrap_Camera_clear_altitude, METH_VARARGS, NULL},
	 { (char *)"Camera_get_heading", _wrap_Camera_get_heading, METH_VARARGS, NULL},
	 { (char *)"Camera_set_heading", _wrap_Camera_set_heading, METH_VARARGS, NULL},
	 { (char *)"Camera_has_heading", _wrap_Camera_has_heading, METH_VARARGS, NULL},
	 { (char *)"Camera_clear_heading", _wrap_Camera_clear_heading, METH_VARARGS, NULL},
	 { (char *)"Camera_get_tilt", _wrap_Camera_get_tilt, METH_VARARGS, NULL},
	 { (char *)"Camera_set_tilt", _wrap_Camera_set_tilt, METH_VARARGS, NULL},
	 { (char *)"Camera_has_tilt", _wrap_Camera_has_tilt, METH_VARARGS, NULL},
	 { (char *)"Camera_clear_tilt", _wrap_Camera_clear_tilt, METH_VARARGS, NULL},
	 { (char *)"Camera_get_roll", _wrap_Camera_get_roll, METH_VARARGS, NULL},
	 { (char *)"Camera_set_roll", _wrap_Camera_set_roll, METH_VARARGS, NULL},
	 { (char *)"Camera_has_roll", _wrap_Camera_has_roll, METH_VARARGS, NULL},
	 { (char *)"Camera_clear_roll", _wrap_Camera_clear_roll, METH_VARARGS, NULL},
	 { (char *)"Camera_get_altitudemode", _wrap_Camera_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Camera_set_altitudemode", _wrap_Camera_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Camera_has_altitudemode", _wrap_Camera_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Camera_clear_altitudemode", _wrap_Camera_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Camera_get_gx_altitudemode", _wrap_Camera_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Camera_has_gx_altitudemode", _wrap_Camera_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Camera_set_gx_altitudemode", _wrap_Camera_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Camera_clear_gx_altitudemode", _wrap_Camera_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Camera_SWIGSharedPtrUpcast", _wrap_Camera_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Camera", _wrap_delete_Camera, METH_VARARGS, NULL},
	 { (char *)"Camera_swigregister", Camera_swigregister, METH_VARARGS, NULL},
	 { (char *)"UpdateOperation_SWIGSharedPtrUpcast", _wrap_UpdateOperation_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_UpdateOperation", _wrap_delete_UpdateOperation, METH_VARARGS, NULL},
	 { (char *)"UpdateOperation_swigregister", UpdateOperation_swigregister, METH_VARARGS, NULL},
	 { (char *)"Change_add_object", _wrap_Change_add_object, METH_VARARGS, NULL},
	 { (char *)"Change_get_object_array_size", _wrap_Change_get_object_array_size, METH_VARARGS, NULL},
	 { (char *)"Change_get_object_array_at", _wrap_Change_get_object_array_at, METH_VARARGS, NULL},
	 { (char *)"Change_SWIGSharedPtrUpcast", _wrap_Change_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Change", _wrap_delete_Change, METH_VARARGS, NULL},
	 { (char *)"Change_swigregister", Change_swigregister, METH_VARARGS, NULL},
	 { (char *)"Create_add_container", _wrap_Create_add_container, METH_VARARGS, NULL},
	 { (char *)"Create_get_container_array_size", _wrap_Create_get_container_array_size, METH_VARARGS, NULL},
	 { (char *)"Create_get_container_array_at", _wrap_Create_get_container_array_at, METH_VARARGS, NULL},
	 { (char *)"Create_SWIGSharedPtrUpcast", _wrap_Create_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Create", _wrap_delete_Create, METH_VARARGS, NULL},
	 { (char *)"Create_swigregister", Create_swigregister, METH_VARARGS, NULL},
	 { (char *)"Data_get_name", _wrap_Data_get_name, METH_VARARGS, NULL},
	 { (char *)"Data_has_name", _wrap_Data_has_name, METH_VARARGS, NULL},
	 { (char *)"Data_set_name", _wrap_Data_set_name, METH_VARARGS, NULL},
	 { (char *)"Data_clear_name", _wrap_Data_clear_name, METH_VARARGS, NULL},
	 { (char *)"Data_get_displayname", _wrap_Data_get_displayname, METH_VARARGS, NULL},
	 { (char *)"Data_has_displayname", _wrap_Data_has_displayname, METH_VARARGS, NULL},
	 { (char *)"Data_set_displayname", _wrap_Data_set_displayname, METH_VARARGS, NULL},
	 { (char *)"Data_clear_displayname", _wrap_Data_clear_displayname, METH_VARARGS, NULL},
	 { (char *)"Data_get_value", _wrap_Data_get_value, METH_VARARGS, NULL},
	 { (char *)"Data_has_value", _wrap_Data_has_value, METH_VARARGS, NULL},
	 { (char *)"Data_set_value", _wrap_Data_set_value, METH_VARARGS, NULL},
	 { (char *)"Data_clear_value", _wrap_Data_clear_value, METH_VARARGS, NULL},
	 { (char *)"Data_SWIGSharedPtrUpcast", _wrap_Data_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Data", _wrap_delete_Data, METH_VARARGS, NULL},
	 { (char *)"Data_swigregister", Data_swigregister, METH_VARARGS, NULL},
	 { (char *)"Delete_add_feature", _wrap_Delete_add_feature, METH_VARARGS, NULL},
	 { (char *)"Delete_get_feature_array_size", _wrap_Delete_get_feature_array_size, METH_VARARGS, NULL},
	 { (char *)"Delete_get_feature_array_at", _wrap_Delete_get_feature_array_at, METH_VARARGS, NULL},
	 { (char *)"Delete_SWIGSharedPtrUpcast", _wrap_Delete_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Delete", _wrap_delete_Delete, METH_VARARGS, NULL},
	 { (char *)"Delete_swigregister", Delete_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimpleField_get_type", _wrap_SimpleField_get_type, METH_VARARGS, NULL},
	 { (char *)"SimpleField_has_type", _wrap_SimpleField_has_type, METH_VARARGS, NULL},
	 { (char *)"SimpleField_set_type", _wrap_SimpleField_set_type, METH_VARARGS, NULL},
	 { (char *)"SimpleField_clear_type", _wrap_SimpleField_clear_type, METH_VARARGS, NULL},
	 { (char *)"SimpleField_get_name", _wrap_SimpleField_get_name, METH_VARARGS, NULL},
	 { (char *)"SimpleField_has_name", _wrap_SimpleField_has_name, METH_VARARGS, NULL},
	 { (char *)"SimpleField_set_name", _wrap_SimpleField_set_name, METH_VARARGS, NULL},
	 { (char *)"SimpleField_clear_name", _wrap_SimpleField_clear_name, METH_VARARGS, NULL},
	 { (char *)"SimpleField_get_displayname", _wrap_SimpleField_get_displayname, METH_VARARGS, NULL},
	 { (char *)"SimpleField_set_displayname", _wrap_SimpleField_set_displayname, METH_VARARGS, NULL},
	 { (char *)"SimpleField_has_displayname", _wrap_SimpleField_has_displayname, METH_VARARGS, NULL},
	 { (char *)"SimpleField_clear_displayname", _wrap_SimpleField_clear_displayname, METH_VARARGS, NULL},
	 { (char *)"SimpleField_SWIGSharedPtrUpcast", _wrap_SimpleField_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_SimpleField", _wrap_delete_SimpleField, METH_VARARGS, NULL},
	 { (char *)"SimpleField_swigregister", SimpleField_swigregister, METH_VARARGS, NULL},
	 { (char *)"Schema_get_name", _wrap_Schema_get_name, METH_VARARGS, NULL},
	 { (char *)"Schema_has_name", _wrap_Schema_has_name, METH_VARARGS, NULL},
	 { (char *)"Schema_set_name", _wrap_Schema_set_name, METH_VARARGS, NULL},
	 { (char *)"Schema_clear_name", _wrap_Schema_clear_name, METH_VARARGS, NULL},
	 { (char *)"Schema_add_simplefield", _wrap_Schema_add_simplefield, METH_VARARGS, NULL},
	 { (char *)"Schema_get_simplefield_array_size", _wrap_Schema_get_simplefield_array_size, METH_VARARGS, NULL},
	 { (char *)"Schema_get_simplefield_array_at", _wrap_Schema_get_simplefield_array_at, METH_VARARGS, NULL},
	 { (char *)"Schema_SWIGSharedPtrUpcast", _wrap_Schema_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Schema", _wrap_delete_Schema, METH_VARARGS, NULL},
	 { (char *)"Schema_swigregister", Schema_swigregister, METH_VARARGS, NULL},
	 { (char *)"Document_add_schema", _wrap_Document_add_schema, METH_VARARGS, NULL},
	 { (char *)"Document_get_schema_array_size", _wrap_Document_get_schema_array_size, METH_VARARGS, NULL},
	 { (char *)"Document_get_schema_array_at", _wrap_Document_get_schema_array_at, METH_VARARGS, NULL},
	 { (char *)"Document_add_styleselector", _wrap_Document_add_styleselector, METH_VARARGS, NULL},
	 { (char *)"Document_get_styleselector_array_size", _wrap_Document_get_styleselector_array_size, METH_VARARGS, NULL},
	 { (char *)"Document_get_styleselector_array_at", _wrap_Document_get_styleselector_array_at, METH_VARARGS, NULL},
	 { (char *)"Document_SWIGSharedPtrUpcast", _wrap_Document_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Document", _wrap_delete_Document, METH_VARARGS, NULL},
	 { (char *)"Document_swigregister", Document_swigregister, METH_VARARGS, NULL},
	 { (char *)"Folder_SWIGSharedPtrUpcast", _wrap_Folder_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Folder", _wrap_delete_Folder, METH_VARARGS, NULL},
	 { (char *)"Folder_swigregister", Folder_swigregister, METH_VARARGS, NULL},
	 { (char *)"LatLonBox_get_rotation", _wrap_LatLonBox_get_rotation, METH_VARARGS, NULL},
	 { (char *)"LatLonBox_set_rotation", _wrap_LatLonBox_set_rotation, METH_VARARGS, NULL},
	 { (char *)"LatLonBox_has_rotation", _wrap_LatLonBox_has_rotation, METH_VARARGS, NULL},
	 { (char *)"LatLonBox_clear_rotation", _wrap_LatLonBox_clear_rotation, METH_VARARGS, NULL},
	 { (char *)"LatLonBox_SWIGSharedPtrUpcast", _wrap_LatLonBox_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_LatLonBox", _wrap_delete_LatLonBox, METH_VARARGS, NULL},
	 { (char *)"LatLonBox_swigregister", LatLonBox_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxLatLonQuad_get_coordinates", _wrap_GxLatLonQuad_get_coordinates, METH_VARARGS, NULL},
	 { (char *)"GxLatLonQuad_has_coordinates", _wrap_GxLatLonQuad_has_coordinates, METH_VARARGS, NULL},
	 { (char *)"GxLatLonQuad_set_coordinates", _wrap_GxLatLonQuad_set_coordinates, METH_VARARGS, NULL},
	 { (char *)"GxLatLonQuad_clear_coordinates", _wrap_GxLatLonQuad_clear_coordinates, METH_VARARGS, NULL},
	 { (char *)"GxLatLonQuad_SWIGSharedPtrUpcast", _wrap_GxLatLonQuad_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxLatLonQuad", _wrap_delete_GxLatLonQuad, METH_VARARGS, NULL},
	 { (char *)"GxLatLonQuad_swigregister", GxLatLonQuad_swigregister, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_get_altitude", _wrap_GroundOverlay_get_altitude, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_set_altitude", _wrap_GroundOverlay_set_altitude, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_has_altitude", _wrap_GroundOverlay_has_altitude, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_clear_altitude", _wrap_GroundOverlay_clear_altitude, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_get_altitudemode", _wrap_GroundOverlay_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_set_altitudemode", _wrap_GroundOverlay_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_has_altitudemode", _wrap_GroundOverlay_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_clear_altitudemode", _wrap_GroundOverlay_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_get_gx_altitudemode", _wrap_GroundOverlay_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_has_gx_altitudemode", _wrap_GroundOverlay_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_set_gx_altitudemode", _wrap_GroundOverlay_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_clear_gx_altitudemode", _wrap_GroundOverlay_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_get_latlonbox", _wrap_GroundOverlay_get_latlonbox, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_set_latlonbox", _wrap_GroundOverlay_set_latlonbox, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_has_latlonbox", _wrap_GroundOverlay_has_latlonbox, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_clear_latlonbox", _wrap_GroundOverlay_clear_latlonbox, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_get_gx_latlonquad", _wrap_GroundOverlay_get_gx_latlonquad, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_has_gx_latlonquad", _wrap_GroundOverlay_has_gx_latlonquad, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_set_gx_latlonquad", _wrap_GroundOverlay_set_gx_latlonquad, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_clear_gx_latlonquad", _wrap_GroundOverlay_clear_gx_latlonquad, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_SWIGSharedPtrUpcast", _wrap_GroundOverlay_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GroundOverlay", _wrap_delete_GroundOverlay, METH_VARARGS, NULL},
	 { (char *)"GroundOverlay_swigregister", GroundOverlay_swigregister, METH_VARARGS, NULL},
	 { (char *)"HotSpot_SWIGSharedPtrUpcast", _wrap_HotSpot_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_HotSpot", _wrap_delete_HotSpot, METH_VARARGS, NULL},
	 { (char *)"HotSpot_swigregister", HotSpot_swigregister, METH_VARARGS, NULL},
	 { (char *)"IconStyle_get_scale", _wrap_IconStyle_get_scale, METH_VARARGS, NULL},
	 { (char *)"IconStyle_set_scale", _wrap_IconStyle_set_scale, METH_VARARGS, NULL},
	 { (char *)"IconStyle_has_scale", _wrap_IconStyle_has_scale, METH_VARARGS, NULL},
	 { (char *)"IconStyle_clear_scale", _wrap_IconStyle_clear_scale, METH_VARARGS, NULL},
	 { (char *)"IconStyle_get_icon", _wrap_IconStyle_get_icon, METH_VARARGS, NULL},
	 { (char *)"IconStyle_set_icon", _wrap_IconStyle_set_icon, METH_VARARGS, NULL},
	 { (char *)"IconStyle_has_icon", _wrap_IconStyle_has_icon, METH_VARARGS, NULL},
	 { (char *)"IconStyle_clear_icon", _wrap_IconStyle_clear_icon, METH_VARARGS, NULL},
	 { (char *)"IconStyle_get_heading", _wrap_IconStyle_get_heading, METH_VARARGS, NULL},
	 { (char *)"IconStyle_set_heading", _wrap_IconStyle_set_heading, METH_VARARGS, NULL},
	 { (char *)"IconStyle_has_heading", _wrap_IconStyle_has_heading, METH_VARARGS, NULL},
	 { (char *)"IconStyle_clear_heading", _wrap_IconStyle_clear_heading, METH_VARARGS, NULL},
	 { (char *)"IconStyle_get_hotspot", _wrap_IconStyle_get_hotspot, METH_VARARGS, NULL},
	 { (char *)"IconStyle_set_hotspot", _wrap_IconStyle_set_hotspot, METH_VARARGS, NULL},
	 { (char *)"IconStyle_has_hotspot", _wrap_IconStyle_has_hotspot, METH_VARARGS, NULL},
	 { (char *)"IconStyle_clear_hotspot", _wrap_IconStyle_clear_hotspot, METH_VARARGS, NULL},
	 { (char *)"IconStyle_SWIGSharedPtrUpcast", _wrap_IconStyle_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_IconStyle", _wrap_delete_IconStyle, METH_VARARGS, NULL},
	 { (char *)"IconStyle_swigregister", IconStyle_swigregister, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_get_tilesize", _wrap_ImagePyramid_get_tilesize, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_set_tilesize", _wrap_ImagePyramid_set_tilesize, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_has_tilesize", _wrap_ImagePyramid_has_tilesize, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_clear_tilesize", _wrap_ImagePyramid_clear_tilesize, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_get_maxwidth", _wrap_ImagePyramid_get_maxwidth, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_set_maxwidth", _wrap_ImagePyramid_set_maxwidth, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_has_maxwidth", _wrap_ImagePyramid_has_maxwidth, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_clear_maxwidth", _wrap_ImagePyramid_clear_maxwidth, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_get_maxheight", _wrap_ImagePyramid_get_maxheight, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_set_maxheight", _wrap_ImagePyramid_set_maxheight, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_has_maxheight", _wrap_ImagePyramid_has_maxheight, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_clear_maxheight", _wrap_ImagePyramid_clear_maxheight, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_get_gridorigin", _wrap_ImagePyramid_get_gridorigin, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_set_gridorigin", _wrap_ImagePyramid_set_gridorigin, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_has_gridorigin", _wrap_ImagePyramid_has_gridorigin, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_clear_gridorigin", _wrap_ImagePyramid_clear_gridorigin, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_SWIGSharedPtrUpcast", _wrap_ImagePyramid_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ImagePyramid", _wrap_delete_ImagePyramid, METH_VARARGS, NULL},
	 { (char *)"ImagePyramid_swigregister", ImagePyramid_swigregister, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_get_state_array_at", _wrap_ItemIcon_get_state_array_at, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_get_state_array_size", _wrap_ItemIcon_get_state_array_size, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_has_state", _wrap_ItemIcon_has_state, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_add_state", _wrap_ItemIcon_add_state, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_clear_state", _wrap_ItemIcon_clear_state, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_get_href", _wrap_ItemIcon_get_href, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_set_href", _wrap_ItemIcon_set_href, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_has_href", _wrap_ItemIcon_has_href, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_clear_href", _wrap_ItemIcon_clear_href, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_SWIGSharedPtrUpcast", _wrap_ItemIcon_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ItemIcon", _wrap_delete_ItemIcon, METH_VARARGS, NULL},
	 { (char *)"ItemIcon_swigregister", ItemIcon_swigregister, METH_VARARGS, NULL},
	 { (char *)"LabelStyle_get_scale", _wrap_LabelStyle_get_scale, METH_VARARGS, NULL},
	 { (char *)"LabelStyle_set_scale", _wrap_LabelStyle_set_scale, METH_VARARGS, NULL},
	 { (char *)"LabelStyle_has_scale", _wrap_LabelStyle_has_scale, METH_VARARGS, NULL},
	 { (char *)"LabelStyle_clear_scale", _wrap_LabelStyle_clear_scale, METH_VARARGS, NULL},
	 { (char *)"LabelStyle_SWIGSharedPtrUpcast", _wrap_LabelStyle_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_LabelStyle", _wrap_delete_LabelStyle, METH_VARARGS, NULL},
	 { (char *)"LabelStyle_swigregister", LabelStyle_swigregister, METH_VARARGS, NULL},
	 { (char *)"LineString_get_extrude", _wrap_LineString_get_extrude, METH_VARARGS, NULL},
	 { (char *)"LineString_set_extrude", _wrap_LineString_set_extrude, METH_VARARGS, NULL},
	 { (char *)"LineString_has_extrude", _wrap_LineString_has_extrude, METH_VARARGS, NULL},
	 { (char *)"LineString_clear_extrude", _wrap_LineString_clear_extrude, METH_VARARGS, NULL},
	 { (char *)"LineString_get_tessellate", _wrap_LineString_get_tessellate, METH_VARARGS, NULL},
	 { (char *)"LineString_set_tessellate", _wrap_LineString_set_tessellate, METH_VARARGS, NULL},
	 { (char *)"LineString_has_tessellate", _wrap_LineString_has_tessellate, METH_VARARGS, NULL},
	 { (char *)"LineString_clear_tessellate", _wrap_LineString_clear_tessellate, METH_VARARGS, NULL},
	 { (char *)"LineString_get_altitudemode", _wrap_LineString_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LineString_set_altitudemode", _wrap_LineString_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LineString_has_altitudemode", _wrap_LineString_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LineString_clear_altitudemode", _wrap_LineString_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LineString_get_gx_altitudemode", _wrap_LineString_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LineString_has_gx_altitudemode", _wrap_LineString_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LineString_set_gx_altitudemode", _wrap_LineString_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LineString_clear_gx_altitudemode", _wrap_LineString_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LineString_get_coordinates", _wrap_LineString_get_coordinates, METH_VARARGS, NULL},
	 { (char *)"LineString_set_coordinates", _wrap_LineString_set_coordinates, METH_VARARGS, NULL},
	 { (char *)"LineString_has_coordinates", _wrap_LineString_has_coordinates, METH_VARARGS, NULL},
	 { (char *)"LineString_clear_coordinates", _wrap_LineString_clear_coordinates, METH_VARARGS, NULL},
	 { (char *)"LineString_SWIGSharedPtrUpcast", _wrap_LineString_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_LineString", _wrap_delete_LineString, METH_VARARGS, NULL},
	 { (char *)"LineString_swigregister", LineString_swigregister, METH_VARARGS, NULL},
	 { (char *)"LineStyle_get_width", _wrap_LineStyle_get_width, METH_VARARGS, NULL},
	 { (char *)"LineStyle_set_width", _wrap_LineStyle_set_width, METH_VARARGS, NULL},
	 { (char *)"LineStyle_has_width", _wrap_LineStyle_has_width, METH_VARARGS, NULL},
	 { (char *)"LineStyle_clear_width", _wrap_LineStyle_clear_width, METH_VARARGS, NULL},
	 { (char *)"LineStyle_SWIGSharedPtrUpcast", _wrap_LineStyle_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_LineStyle", _wrap_delete_LineStyle, METH_VARARGS, NULL},
	 { (char *)"LineStyle_swigregister", LineStyle_swigregister, METH_VARARGS, NULL},
	 { (char *)"LinearRing_get_extrude", _wrap_LinearRing_get_extrude, METH_VARARGS, NULL},
	 { (char *)"LinearRing_set_extrude", _wrap_LinearRing_set_extrude, METH_VARARGS, NULL},
	 { (char *)"LinearRing_has_extrude", _wrap_LinearRing_has_extrude, METH_VARARGS, NULL},
	 { (char *)"LinearRing_clear_extrude", _wrap_LinearRing_clear_extrude, METH_VARARGS, NULL},
	 { (char *)"LinearRing_get_tessellate", _wrap_LinearRing_get_tessellate, METH_VARARGS, NULL},
	 { (char *)"LinearRing_set_tessellate", _wrap_LinearRing_set_tessellate, METH_VARARGS, NULL},
	 { (char *)"LinearRing_has_tessellate", _wrap_LinearRing_has_tessellate, METH_VARARGS, NULL},
	 { (char *)"LinearRing_clear_tessellate", _wrap_LinearRing_clear_tessellate, METH_VARARGS, NULL},
	 { (char *)"LinearRing_get_altitudemode", _wrap_LinearRing_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LinearRing_set_altitudemode", _wrap_LinearRing_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LinearRing_has_altitudemode", _wrap_LinearRing_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LinearRing_clear_altitudemode", _wrap_LinearRing_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LinearRing_get_gx_altitudemode", _wrap_LinearRing_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LinearRing_has_gx_altitudemode", _wrap_LinearRing_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LinearRing_set_gx_altitudemode", _wrap_LinearRing_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LinearRing_clear_gx_altitudemode", _wrap_LinearRing_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LinearRing_get_coordinates", _wrap_LinearRing_get_coordinates, METH_VARARGS, NULL},
	 { (char *)"LinearRing_set_coordinates", _wrap_LinearRing_set_coordinates, METH_VARARGS, NULL},
	 { (char *)"LinearRing_has_coordinates", _wrap_LinearRing_has_coordinates, METH_VARARGS, NULL},
	 { (char *)"LinearRing_clear_coordinates", _wrap_LinearRing_clear_coordinates, METH_VARARGS, NULL},
	 { (char *)"LinearRing_SWIGSharedPtrUpcast", _wrap_LinearRing_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_LinearRing", _wrap_delete_LinearRing, METH_VARARGS, NULL},
	 { (char *)"LinearRing_swigregister", LinearRing_swigregister, METH_VARARGS, NULL},
	 { (char *)"Link_get_refreshmode", _wrap_Link_get_refreshmode, METH_VARARGS, NULL},
	 { (char *)"Link_set_refreshmode", _wrap_Link_set_refreshmode, METH_VARARGS, NULL},
	 { (char *)"Link_has_refreshmode", _wrap_Link_has_refreshmode, METH_VARARGS, NULL},
	 { (char *)"Link_clear_refreshmode", _wrap_Link_clear_refreshmode, METH_VARARGS, NULL},
	 { (char *)"Link_get_refreshinterval", _wrap_Link_get_refreshinterval, METH_VARARGS, NULL},
	 { (char *)"Link_set_refreshinterval", _wrap_Link_set_refreshinterval, METH_VARARGS, NULL},
	 { (char *)"Link_has_refreshinterval", _wrap_Link_has_refreshinterval, METH_VARARGS, NULL},
	 { (char *)"Link_clear_refreshinterval", _wrap_Link_clear_refreshinterval, METH_VARARGS, NULL},
	 { (char *)"Link_get_viewrefreshmode", _wrap_Link_get_viewrefreshmode, METH_VARARGS, NULL},
	 { (char *)"Link_set_viewrefreshmode", _wrap_Link_set_viewrefreshmode, METH_VARARGS, NULL},
	 { (char *)"Link_has_viewrefreshmode", _wrap_Link_has_viewrefreshmode, METH_VARARGS, NULL},
	 { (char *)"Link_clear_viewrefreshmode", _wrap_Link_clear_viewrefreshmode, METH_VARARGS, NULL},
	 { (char *)"Link_get_viewrefreshtime", _wrap_Link_get_viewrefreshtime, METH_VARARGS, NULL},
	 { (char *)"Link_set_viewrefreshtime", _wrap_Link_set_viewrefreshtime, METH_VARARGS, NULL},
	 { (char *)"Link_has_viewrefreshtime", _wrap_Link_has_viewrefreshtime, METH_VARARGS, NULL},
	 { (char *)"Link_clear_viewrefreshtime", _wrap_Link_clear_viewrefreshtime, METH_VARARGS, NULL},
	 { (char *)"Link_get_viewboundscale", _wrap_Link_get_viewboundscale, METH_VARARGS, NULL},
	 { (char *)"Link_set_viewboundscale", _wrap_Link_set_viewboundscale, METH_VARARGS, NULL},
	 { (char *)"Link_has_viewboundscale", _wrap_Link_has_viewboundscale, METH_VARARGS, NULL},
	 { (char *)"Link_clear_viewboundscale", _wrap_Link_clear_viewboundscale, METH_VARARGS, NULL},
	 { (char *)"Link_get_viewformat", _wrap_Link_get_viewformat, METH_VARARGS, NULL},
	 { (char *)"Link_set_viewformat", _wrap_Link_set_viewformat, METH_VARARGS, NULL},
	 { (char *)"Link_has_viewformat", _wrap_Link_has_viewformat, METH_VARARGS, NULL},
	 { (char *)"Link_clear_viewformat", _wrap_Link_clear_viewformat, METH_VARARGS, NULL},
	 { (char *)"Link_get_httpquery", _wrap_Link_get_httpquery, METH_VARARGS, NULL},
	 { (char *)"Link_set_httpquery", _wrap_Link_set_httpquery, METH_VARARGS, NULL},
	 { (char *)"Link_has_httpquery", _wrap_Link_has_httpquery, METH_VARARGS, NULL},
	 { (char *)"Link_clear_httpquery", _wrap_Link_clear_httpquery, METH_VARARGS, NULL},
	 { (char *)"Link_SWIGSharedPtrUpcast", _wrap_Link_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Link", _wrap_delete_Link, METH_VARARGS, NULL},
	 { (char *)"Link_swigregister", Link_swigregister, METH_VARARGS, NULL},
	 { (char *)"ListStyle_get_listitemtype", _wrap_ListStyle_get_listitemtype, METH_VARARGS, NULL},
	 { (char *)"ListStyle_set_listitemtype", _wrap_ListStyle_set_listitemtype, METH_VARARGS, NULL},
	 { (char *)"ListStyle_has_listitemtype", _wrap_ListStyle_has_listitemtype, METH_VARARGS, NULL},
	 { (char *)"ListStyle_clear_listitemtype", _wrap_ListStyle_clear_listitemtype, METH_VARARGS, NULL},
	 { (char *)"ListStyle_get_bgcolor", _wrap_ListStyle_get_bgcolor, METH_VARARGS, NULL},
	 { (char *)"ListStyle_set_bgcolor", _wrap_ListStyle_set_bgcolor, METH_VARARGS, NULL},
	 { (char *)"ListStyle_has_bgcolor", _wrap_ListStyle_has_bgcolor, METH_VARARGS, NULL},
	 { (char *)"ListStyle_clear_bgcolor", _wrap_ListStyle_clear_bgcolor, METH_VARARGS, NULL},
	 { (char *)"ListStyle_add_itemicon", _wrap_ListStyle_add_itemicon, METH_VARARGS, NULL},
	 { (char *)"ListStyle_get_itemicon_array_size", _wrap_ListStyle_get_itemicon_array_size, METH_VARARGS, NULL},
	 { (char *)"ListStyle_get_itemicon_array_at", _wrap_ListStyle_get_itemicon_array_at, METH_VARARGS, NULL},
	 { (char *)"ListStyle_SWIGSharedPtrUpcast", _wrap_ListStyle_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ListStyle", _wrap_delete_ListStyle, METH_VARARGS, NULL},
	 { (char *)"ListStyle_swigregister", ListStyle_swigregister, METH_VARARGS, NULL},
	 { (char *)"Location_get_longitude", _wrap_Location_get_longitude, METH_VARARGS, NULL},
	 { (char *)"Location_set_longitude", _wrap_Location_set_longitude, METH_VARARGS, NULL},
	 { (char *)"Location_has_longitude", _wrap_Location_has_longitude, METH_VARARGS, NULL},
	 { (char *)"Location_clear_longitude", _wrap_Location_clear_longitude, METH_VARARGS, NULL},
	 { (char *)"Location_get_latitude", _wrap_Location_get_latitude, METH_VARARGS, NULL},
	 { (char *)"Location_set_latitude", _wrap_Location_set_latitude, METH_VARARGS, NULL},
	 { (char *)"Location_has_latitude", _wrap_Location_has_latitude, METH_VARARGS, NULL},
	 { (char *)"Location_clear_latitude", _wrap_Location_clear_latitude, METH_VARARGS, NULL},
	 { (char *)"Location_get_altitude", _wrap_Location_get_altitude, METH_VARARGS, NULL},
	 { (char *)"Location_set_altitude", _wrap_Location_set_altitude, METH_VARARGS, NULL},
	 { (char *)"Location_has_altitude", _wrap_Location_has_altitude, METH_VARARGS, NULL},
	 { (char *)"Location_clear_altitude", _wrap_Location_clear_altitude, METH_VARARGS, NULL},
	 { (char *)"Location_SWIGSharedPtrUpcast", _wrap_Location_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Location", _wrap_delete_Location, METH_VARARGS, NULL},
	 { (char *)"Location_swigregister", Location_swigregister, METH_VARARGS, NULL},
	 { (char *)"LookAt_get_longitude", _wrap_LookAt_get_longitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_set_longitude", _wrap_LookAt_set_longitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_has_longitude", _wrap_LookAt_has_longitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_clear_longitude", _wrap_LookAt_clear_longitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_get_latitude", _wrap_LookAt_get_latitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_set_latitude", _wrap_LookAt_set_latitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_has_latitude", _wrap_LookAt_has_latitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_clear_latitude", _wrap_LookAt_clear_latitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_get_altitude", _wrap_LookAt_get_altitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_set_altitude", _wrap_LookAt_set_altitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_has_altitude", _wrap_LookAt_has_altitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_clear_altitude", _wrap_LookAt_clear_altitude, METH_VARARGS, NULL},
	 { (char *)"LookAt_get_heading", _wrap_LookAt_get_heading, METH_VARARGS, NULL},
	 { (char *)"LookAt_set_heading", _wrap_LookAt_set_heading, METH_VARARGS, NULL},
	 { (char *)"LookAt_has_heading", _wrap_LookAt_has_heading, METH_VARARGS, NULL},
	 { (char *)"LookAt_clear_heading", _wrap_LookAt_clear_heading, METH_VARARGS, NULL},
	 { (char *)"LookAt_get_tilt", _wrap_LookAt_get_tilt, METH_VARARGS, NULL},
	 { (char *)"LookAt_set_tilt", _wrap_LookAt_set_tilt, METH_VARARGS, NULL},
	 { (char *)"LookAt_has_tilt", _wrap_LookAt_has_tilt, METH_VARARGS, NULL},
	 { (char *)"LookAt_clear_tilt", _wrap_LookAt_clear_tilt, METH_VARARGS, NULL},
	 { (char *)"LookAt_get_range", _wrap_LookAt_get_range, METH_VARARGS, NULL},
	 { (char *)"LookAt_set_range", _wrap_LookAt_set_range, METH_VARARGS, NULL},
	 { (char *)"LookAt_has_range", _wrap_LookAt_has_range, METH_VARARGS, NULL},
	 { (char *)"LookAt_clear_range", _wrap_LookAt_clear_range, METH_VARARGS, NULL},
	 { (char *)"LookAt_get_altitudemode", _wrap_LookAt_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LookAt_set_altitudemode", _wrap_LookAt_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LookAt_has_altitudemode", _wrap_LookAt_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LookAt_clear_altitudemode", _wrap_LookAt_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LookAt_get_gx_altitudemode", _wrap_LookAt_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LookAt_has_gx_altitudemode", _wrap_LookAt_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LookAt_set_gx_altitudemode", _wrap_LookAt_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LookAt_clear_gx_altitudemode", _wrap_LookAt_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"LookAt_SWIGSharedPtrUpcast", _wrap_LookAt_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_LookAt", _wrap_delete_LookAt, METH_VARARGS, NULL},
	 { (char *)"LookAt_swigregister", LookAt_swigregister, METH_VARARGS, NULL},
	 { (char *)"Orientation_get_heading", _wrap_Orientation_get_heading, METH_VARARGS, NULL},
	 { (char *)"Orientation_set_heading", _wrap_Orientation_set_heading, METH_VARARGS, NULL},
	 { (char *)"Orientation_has_heading", _wrap_Orientation_has_heading, METH_VARARGS, NULL},
	 { (char *)"Orientation_clear_heading", _wrap_Orientation_clear_heading, METH_VARARGS, NULL},
	 { (char *)"Orientation_get_tilt", _wrap_Orientation_get_tilt, METH_VARARGS, NULL},
	 { (char *)"Orientation_set_tilt", _wrap_Orientation_set_tilt, METH_VARARGS, NULL},
	 { (char *)"Orientation_has_tilt", _wrap_Orientation_has_tilt, METH_VARARGS, NULL},
	 { (char *)"Orientation_clear_tilt", _wrap_Orientation_clear_tilt, METH_VARARGS, NULL},
	 { (char *)"Orientation_get_roll", _wrap_Orientation_get_roll, METH_VARARGS, NULL},
	 { (char *)"Orientation_set_roll", _wrap_Orientation_set_roll, METH_VARARGS, NULL},
	 { (char *)"Orientation_has_roll", _wrap_Orientation_has_roll, METH_VARARGS, NULL},
	 { (char *)"Orientation_clear_roll", _wrap_Orientation_clear_roll, METH_VARARGS, NULL},
	 { (char *)"Orientation_SWIGSharedPtrUpcast", _wrap_Orientation_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Orientation", _wrap_delete_Orientation, METH_VARARGS, NULL},
	 { (char *)"Orientation_swigregister", Orientation_swigregister, METH_VARARGS, NULL},
	 { (char *)"Scale_get_x", _wrap_Scale_get_x, METH_VARARGS, NULL},
	 { (char *)"Scale_set_x", _wrap_Scale_set_x, METH_VARARGS, NULL},
	 { (char *)"Scale_has_x", _wrap_Scale_has_x, METH_VARARGS, NULL},
	 { (char *)"Scale_clear_x", _wrap_Scale_clear_x, METH_VARARGS, NULL},
	 { (char *)"Scale_get_y", _wrap_Scale_get_y, METH_VARARGS, NULL},
	 { (char *)"Scale_set_y", _wrap_Scale_set_y, METH_VARARGS, NULL},
	 { (char *)"Scale_has_y", _wrap_Scale_has_y, METH_VARARGS, NULL},
	 { (char *)"Scale_clear_y", _wrap_Scale_clear_y, METH_VARARGS, NULL},
	 { (char *)"Scale_get_z", _wrap_Scale_get_z, METH_VARARGS, NULL},
	 { (char *)"Scale_set_z", _wrap_Scale_set_z, METH_VARARGS, NULL},
	 { (char *)"Scale_has_z", _wrap_Scale_has_z, METH_VARARGS, NULL},
	 { (char *)"Scale_clear_z", _wrap_Scale_clear_z, METH_VARARGS, NULL},
	 { (char *)"Scale_SWIGSharedPtrUpcast", _wrap_Scale_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Scale", _wrap_delete_Scale, METH_VARARGS, NULL},
	 { (char *)"Scale_swigregister", Scale_swigregister, METH_VARARGS, NULL},
	 { (char *)"Alias_get_targethref", _wrap_Alias_get_targethref, METH_VARARGS, NULL},
	 { (char *)"Alias_set_targethref", _wrap_Alias_set_targethref, METH_VARARGS, NULL},
	 { (char *)"Alias_has_targethref", _wrap_Alias_has_targethref, METH_VARARGS, NULL},
	 { (char *)"Alias_clear_targethref", _wrap_Alias_clear_targethref, METH_VARARGS, NULL},
	 { (char *)"Alias_get_sourcehref", _wrap_Alias_get_sourcehref, METH_VARARGS, NULL},
	 { (char *)"Alias_set_sourcehref", _wrap_Alias_set_sourcehref, METH_VARARGS, NULL},
	 { (char *)"Alias_has_sourcehref", _wrap_Alias_has_sourcehref, METH_VARARGS, NULL},
	 { (char *)"Alias_clear_sourcehref", _wrap_Alias_clear_sourcehref, METH_VARARGS, NULL},
	 { (char *)"Alias_SWIGSharedPtrUpcast", _wrap_Alias_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Alias", _wrap_delete_Alias, METH_VARARGS, NULL},
	 { (char *)"Alias_swigregister", Alias_swigregister, METH_VARARGS, NULL},
	 { (char *)"ResourceMap_add_alias", _wrap_ResourceMap_add_alias, METH_VARARGS, NULL},
	 { (char *)"ResourceMap_get_alias_array_size", _wrap_ResourceMap_get_alias_array_size, METH_VARARGS, NULL},
	 { (char *)"ResourceMap_get_alias_array_at", _wrap_ResourceMap_get_alias_array_at, METH_VARARGS, NULL},
	 { (char *)"ResourceMap_SWIGSharedPtrUpcast", _wrap_ResourceMap_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ResourceMap", _wrap_delete_ResourceMap, METH_VARARGS, NULL},
	 { (char *)"ResourceMap_swigregister", ResourceMap_swigregister, METH_VARARGS, NULL},
	 { (char *)"Model_get_altitudemode", _wrap_Model_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Model_set_altitudemode", _wrap_Model_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Model_has_altitudemode", _wrap_Model_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Model_clear_altitudemode", _wrap_Model_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Model_get_gx_altitudemode", _wrap_Model_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Model_has_gx_altitudemode", _wrap_Model_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Model_set_gx_altitudemode", _wrap_Model_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Model_clear_gx_altitudemode", _wrap_Model_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Model_get_location", _wrap_Model_get_location, METH_VARARGS, NULL},
	 { (char *)"Model_set_location", _wrap_Model_set_location, METH_VARARGS, NULL},
	 { (char *)"Model_has_location", _wrap_Model_has_location, METH_VARARGS, NULL},
	 { (char *)"Model_clear_location", _wrap_Model_clear_location, METH_VARARGS, NULL},
	 { (char *)"Model_get_orientation", _wrap_Model_get_orientation, METH_VARARGS, NULL},
	 { (char *)"Model_set_orientation", _wrap_Model_set_orientation, METH_VARARGS, NULL},
	 { (char *)"Model_has_orientation", _wrap_Model_has_orientation, METH_VARARGS, NULL},
	 { (char *)"Model_clear_orientation", _wrap_Model_clear_orientation, METH_VARARGS, NULL},
	 { (char *)"Model_get_scale", _wrap_Model_get_scale, METH_VARARGS, NULL},
	 { (char *)"Model_set_scale", _wrap_Model_set_scale, METH_VARARGS, NULL},
	 { (char *)"Model_has_scale", _wrap_Model_has_scale, METH_VARARGS, NULL},
	 { (char *)"Model_clear_scale", _wrap_Model_clear_scale, METH_VARARGS, NULL},
	 { (char *)"Model_get_link", _wrap_Model_get_link, METH_VARARGS, NULL},
	 { (char *)"Model_set_link", _wrap_Model_set_link, METH_VARARGS, NULL},
	 { (char *)"Model_has_link", _wrap_Model_has_link, METH_VARARGS, NULL},
	 { (char *)"Model_clear_link", _wrap_Model_clear_link, METH_VARARGS, NULL},
	 { (char *)"Model_get_resourcemap", _wrap_Model_get_resourcemap, METH_VARARGS, NULL},
	 { (char *)"Model_set_resourcemap", _wrap_Model_set_resourcemap, METH_VARARGS, NULL},
	 { (char *)"Model_has_resourcemap", _wrap_Model_has_resourcemap, METH_VARARGS, NULL},
	 { (char *)"Model_clear_resourcemap", _wrap_Model_clear_resourcemap, METH_VARARGS, NULL},
	 { (char *)"Model_SWIGSharedPtrUpcast", _wrap_Model_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Model", _wrap_delete_Model, METH_VARARGS, NULL},
	 { (char *)"Model_swigregister", Model_swigregister, METH_VARARGS, NULL},
	 { (char *)"MultiGeometry_add_geometry", _wrap_MultiGeometry_add_geometry, METH_VARARGS, NULL},
	 { (char *)"MultiGeometry_get_geometry_array_size", _wrap_MultiGeometry_get_geometry_array_size, METH_VARARGS, NULL},
	 { (char *)"MultiGeometry_get_geometry_array_at", _wrap_MultiGeometry_get_geometry_array_at, METH_VARARGS, NULL},
	 { (char *)"MultiGeometry_SWIGSharedPtrUpcast", _wrap_MultiGeometry_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_MultiGeometry", _wrap_delete_MultiGeometry, METH_VARARGS, NULL},
	 { (char *)"MultiGeometry_swigregister", MultiGeometry_swigregister, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_get_refreshvisibility", _wrap_NetworkLink_get_refreshvisibility, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_set_refreshvisibility", _wrap_NetworkLink_set_refreshvisibility, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_has_refreshvisibility", _wrap_NetworkLink_has_refreshvisibility, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_clear_refreshvisibility", _wrap_NetworkLink_clear_refreshvisibility, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_get_flytoview", _wrap_NetworkLink_get_flytoview, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_set_flytoview", _wrap_NetworkLink_set_flytoview, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_has_flytoview", _wrap_NetworkLink_has_flytoview, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_clear_flytoview", _wrap_NetworkLink_clear_flytoview, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_get_link", _wrap_NetworkLink_get_link, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_set_link", _wrap_NetworkLink_set_link, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_has_link", _wrap_NetworkLink_has_link, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_clear_link", _wrap_NetworkLink_clear_link, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_SWIGSharedPtrUpcast", _wrap_NetworkLink_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_NetworkLink", _wrap_delete_NetworkLink, METH_VARARGS, NULL},
	 { (char *)"NetworkLink_swigregister", NetworkLink_swigregister, METH_VARARGS, NULL},
	 { (char *)"Update_get_targethref", _wrap_Update_get_targethref, METH_VARARGS, NULL},
	 { (char *)"Update_has_targethref", _wrap_Update_has_targethref, METH_VARARGS, NULL},
	 { (char *)"Update_set_targethref", _wrap_Update_set_targethref, METH_VARARGS, NULL},
	 { (char *)"Update_clear_targethref", _wrap_Update_clear_targethref, METH_VARARGS, NULL},
	 { (char *)"Update_add_updateoperation", _wrap_Update_add_updateoperation, METH_VARARGS, NULL},
	 { (char *)"Update_get_updateoperation_array_size", _wrap_Update_get_updateoperation_array_size, METH_VARARGS, NULL},
	 { (char *)"Update_get_updateoperation_array_at", _wrap_Update_get_updateoperation_array_at, METH_VARARGS, NULL},
	 { (char *)"Update_SWIGSharedPtrUpcast", _wrap_Update_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Update", _wrap_delete_Update, METH_VARARGS, NULL},
	 { (char *)"Update_swigregister", Update_swigregister, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_minrefreshperiod", _wrap_NetworkLinkControl_get_minrefreshperiod, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_minrefreshperiod", _wrap_NetworkLinkControl_set_minrefreshperiod, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_minrefreshperiod", _wrap_NetworkLinkControl_has_minrefreshperiod, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_minrefreshperiod", _wrap_NetworkLinkControl_clear_minrefreshperiod, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_maxsessionlength", _wrap_NetworkLinkControl_get_maxsessionlength, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_maxsessionlength", _wrap_NetworkLinkControl_set_maxsessionlength, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_maxsessionlength", _wrap_NetworkLinkControl_has_maxsessionlength, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_maxsessionlength", _wrap_NetworkLinkControl_clear_maxsessionlength, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_cookie", _wrap_NetworkLinkControl_get_cookie, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_cookie", _wrap_NetworkLinkControl_set_cookie, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_cookie", _wrap_NetworkLinkControl_has_cookie, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_cookie", _wrap_NetworkLinkControl_clear_cookie, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_message", _wrap_NetworkLinkControl_get_message, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_message", _wrap_NetworkLinkControl_set_message, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_message", _wrap_NetworkLinkControl_has_message, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_message", _wrap_NetworkLinkControl_clear_message, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_linkname", _wrap_NetworkLinkControl_get_linkname, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_linkname", _wrap_NetworkLinkControl_set_linkname, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_linkname", _wrap_NetworkLinkControl_has_linkname, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_linkname", _wrap_NetworkLinkControl_clear_linkname, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_linkdescription", _wrap_NetworkLinkControl_get_linkdescription, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_linkdescription", _wrap_NetworkLinkControl_set_linkdescription, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_linkdescription", _wrap_NetworkLinkControl_has_linkdescription, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_linkdescription", _wrap_NetworkLinkControl_clear_linkdescription, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_linksnippet", _wrap_NetworkLinkControl_get_linksnippet, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_linksnippet", _wrap_NetworkLinkControl_set_linksnippet, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_linksnippet", _wrap_NetworkLinkControl_has_linksnippet, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_linksnippet", _wrap_NetworkLinkControl_clear_linksnippet, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_expires", _wrap_NetworkLinkControl_get_expires, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_expires", _wrap_NetworkLinkControl_set_expires, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_expires", _wrap_NetworkLinkControl_has_expires, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_expires", _wrap_NetworkLinkControl_clear_expires, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_update", _wrap_NetworkLinkControl_get_update, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_update", _wrap_NetworkLinkControl_set_update, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_update", _wrap_NetworkLinkControl_has_update, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_update", _wrap_NetworkLinkControl_clear_update, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_get_abstractview", _wrap_NetworkLinkControl_get_abstractview, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_set_abstractview", _wrap_NetworkLinkControl_set_abstractview, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_has_abstractview", _wrap_NetworkLinkControl_has_abstractview, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_clear_abstractview", _wrap_NetworkLinkControl_clear_abstractview, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_SWIGSharedPtrUpcast", _wrap_NetworkLinkControl_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_NetworkLinkControl", _wrap_delete_NetworkLinkControl, METH_VARARGS, NULL},
	 { (char *)"NetworkLinkControl_swigregister", NetworkLinkControl_swigregister, METH_VARARGS, NULL},
	 { (char *)"Pair_get_key", _wrap_Pair_get_key, METH_VARARGS, NULL},
	 { (char *)"Pair_set_key", _wrap_Pair_set_key, METH_VARARGS, NULL},
	 { (char *)"Pair_has_key", _wrap_Pair_has_key, METH_VARARGS, NULL},
	 { (char *)"Pair_clear_key", _wrap_Pair_clear_key, METH_VARARGS, NULL},
	 { (char *)"Pair_get_styleurl", _wrap_Pair_get_styleurl, METH_VARARGS, NULL},
	 { (char *)"Pair_set_styleurl", _wrap_Pair_set_styleurl, METH_VARARGS, NULL},
	 { (char *)"Pair_has_styleurl", _wrap_Pair_has_styleurl, METH_VARARGS, NULL},
	 { (char *)"Pair_clear_styleurl", _wrap_Pair_clear_styleurl, METH_VARARGS, NULL},
	 { (char *)"Pair_get_styleselector", _wrap_Pair_get_styleselector, METH_VARARGS, NULL},
	 { (char *)"Pair_set_styleselector", _wrap_Pair_set_styleselector, METH_VARARGS, NULL},
	 { (char *)"Pair_has_styleselector", _wrap_Pair_has_styleselector, METH_VARARGS, NULL},
	 { (char *)"Pair_clear_styleselector", _wrap_Pair_clear_styleselector, METH_VARARGS, NULL},
	 { (char *)"Pair_SWIGSharedPtrUpcast", _wrap_Pair_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Pair", _wrap_delete_Pair, METH_VARARGS, NULL},
	 { (char *)"Pair_swigregister", Pair_swigregister, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_get_leftfov", _wrap_ViewVolume_get_leftfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_set_leftfov", _wrap_ViewVolume_set_leftfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_has_leftfov", _wrap_ViewVolume_has_leftfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_clear_leftfov", _wrap_ViewVolume_clear_leftfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_get_rightfov", _wrap_ViewVolume_get_rightfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_set_rightfov", _wrap_ViewVolume_set_rightfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_has_rightfov", _wrap_ViewVolume_has_rightfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_clear_rightfov", _wrap_ViewVolume_clear_rightfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_get_bottomfov", _wrap_ViewVolume_get_bottomfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_set_bottomfov", _wrap_ViewVolume_set_bottomfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_has_bottomfov", _wrap_ViewVolume_has_bottomfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_clear_bottomfov", _wrap_ViewVolume_clear_bottomfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_get_topfov", _wrap_ViewVolume_get_topfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_set_topfov", _wrap_ViewVolume_set_topfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_has_topfov", _wrap_ViewVolume_has_topfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_clear_topfov", _wrap_ViewVolume_clear_topfov, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_get_near", _wrap_ViewVolume_get_near, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_set_near", _wrap_ViewVolume_set_near, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_has_near", _wrap_ViewVolume_has_near, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_clear_near", _wrap_ViewVolume_clear_near, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_SWIGSharedPtrUpcast", _wrap_ViewVolume_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ViewVolume", _wrap_delete_ViewVolume, METH_VARARGS, NULL},
	 { (char *)"ViewVolume_swigregister", ViewVolume_swigregister, METH_VARARGS, NULL},
	 { (char *)"Point_get_extrude", _wrap_Point_get_extrude, METH_VARARGS, NULL},
	 { (char *)"Point_set_extrude", _wrap_Point_set_extrude, METH_VARARGS, NULL},
	 { (char *)"Point_has_extrude", _wrap_Point_has_extrude, METH_VARARGS, NULL},
	 { (char *)"Point_clear_extrude", _wrap_Point_clear_extrude, METH_VARARGS, NULL},
	 { (char *)"Point_get_altitudemode", _wrap_Point_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Point_set_altitudemode", _wrap_Point_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Point_has_altitudemode", _wrap_Point_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Point_clear_altitudemode", _wrap_Point_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Point_get_gx_altitudemode", _wrap_Point_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Point_has_gx_altitudemode", _wrap_Point_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Point_set_gx_altitudemode", _wrap_Point_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Point_clear_gx_altitudemode", _wrap_Point_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Point_get_coordinates", _wrap_Point_get_coordinates, METH_VARARGS, NULL},
	 { (char *)"Point_set_coordinates", _wrap_Point_set_coordinates, METH_VARARGS, NULL},
	 { (char *)"Point_has_coordinates", _wrap_Point_has_coordinates, METH_VARARGS, NULL},
	 { (char *)"Point_clear_coordinates", _wrap_Point_clear_coordinates, METH_VARARGS, NULL},
	 { (char *)"Point_SWIGSharedPtrUpcast", _wrap_Point_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Point", _wrap_delete_Point, METH_VARARGS, NULL},
	 { (char *)"Point_swigregister", Point_swigregister, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_get_rotation", _wrap_PhotoOverlay_get_rotation, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_set_rotation", _wrap_PhotoOverlay_set_rotation, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_has_rotation", _wrap_PhotoOverlay_has_rotation, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_clear_rotation", _wrap_PhotoOverlay_clear_rotation, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_get_viewvolume", _wrap_PhotoOverlay_get_viewvolume, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_set_viewvolume", _wrap_PhotoOverlay_set_viewvolume, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_has_viewvolume", _wrap_PhotoOverlay_has_viewvolume, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_clear_viewvolume", _wrap_PhotoOverlay_clear_viewvolume, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_get_imagepyramid", _wrap_PhotoOverlay_get_imagepyramid, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_set_imagepyramid", _wrap_PhotoOverlay_set_imagepyramid, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_has_imagepyramid", _wrap_PhotoOverlay_has_imagepyramid, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_clear_imagepyramid", _wrap_PhotoOverlay_clear_imagepyramid, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_get_point", _wrap_PhotoOverlay_get_point, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_set_point", _wrap_PhotoOverlay_set_point, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_has_point", _wrap_PhotoOverlay_has_point, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_clear_point", _wrap_PhotoOverlay_clear_point, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_get_shape", _wrap_PhotoOverlay_get_shape, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_has_shape", _wrap_PhotoOverlay_has_shape, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_set_shape", _wrap_PhotoOverlay_set_shape, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_clear_shape", _wrap_PhotoOverlay_clear_shape, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_SWIGSharedPtrUpcast", _wrap_PhotoOverlay_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_PhotoOverlay", _wrap_delete_PhotoOverlay, METH_VARARGS, NULL},
	 { (char *)"PhotoOverlay_swigregister", PhotoOverlay_swigregister, METH_VARARGS, NULL},
	 { (char *)"Placemark_get_geometry", _wrap_Placemark_get_geometry, METH_VARARGS, NULL},
	 { (char *)"Placemark_set_geometry", _wrap_Placemark_set_geometry, METH_VARARGS, NULL},
	 { (char *)"Placemark_has_geometry", _wrap_Placemark_has_geometry, METH_VARARGS, NULL},
	 { (char *)"Placemark_clear_geometry", _wrap_Placemark_clear_geometry, METH_VARARGS, NULL},
	 { (char *)"Placemark_SWIGSharedPtrUpcast", _wrap_Placemark_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Placemark", _wrap_delete_Placemark, METH_VARARGS, NULL},
	 { (char *)"Placemark_swigregister", Placemark_swigregister, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_get_fill", _wrap_PolyStyle_get_fill, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_set_fill", _wrap_PolyStyle_set_fill, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_has_fill", _wrap_PolyStyle_has_fill, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_clear_fill", _wrap_PolyStyle_clear_fill, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_get_outline", _wrap_PolyStyle_get_outline, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_set_outline", _wrap_PolyStyle_set_outline, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_has_outline", _wrap_PolyStyle_has_outline, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_clear_outline", _wrap_PolyStyle_clear_outline, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_SWIGSharedPtrUpcast", _wrap_PolyStyle_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_PolyStyle", _wrap_delete_PolyStyle, METH_VARARGS, NULL},
	 { (char *)"PolyStyle_swigregister", PolyStyle_swigregister, METH_VARARGS, NULL},
	 { (char *)"OuterBoundaryIs_get_linearring", _wrap_OuterBoundaryIs_get_linearring, METH_VARARGS, NULL},
	 { (char *)"OuterBoundaryIs_set_linearring", _wrap_OuterBoundaryIs_set_linearring, METH_VARARGS, NULL},
	 { (char *)"OuterBoundaryIs_has_linearring", _wrap_OuterBoundaryIs_has_linearring, METH_VARARGS, NULL},
	 { (char *)"OuterBoundaryIs_clear_linearring", _wrap_OuterBoundaryIs_clear_linearring, METH_VARARGS, NULL},
	 { (char *)"OuterBoundaryIs_SWIGSharedPtrUpcast", _wrap_OuterBoundaryIs_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_OuterBoundaryIs", _wrap_delete_OuterBoundaryIs, METH_VARARGS, NULL},
	 { (char *)"OuterBoundaryIs_swigregister", OuterBoundaryIs_swigregister, METH_VARARGS, NULL},
	 { (char *)"InnerBoundaryIs_get_linearring", _wrap_InnerBoundaryIs_get_linearring, METH_VARARGS, NULL},
	 { (char *)"InnerBoundaryIs_set_linearring", _wrap_InnerBoundaryIs_set_linearring, METH_VARARGS, NULL},
	 { (char *)"InnerBoundaryIs_has_linearring", _wrap_InnerBoundaryIs_has_linearring, METH_VARARGS, NULL},
	 { (char *)"InnerBoundaryIs_clear_linearring", _wrap_InnerBoundaryIs_clear_linearring, METH_VARARGS, NULL},
	 { (char *)"InnerBoundaryIs_SWIGSharedPtrUpcast", _wrap_InnerBoundaryIs_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_InnerBoundaryIs", _wrap_delete_InnerBoundaryIs, METH_VARARGS, NULL},
	 { (char *)"InnerBoundaryIs_swigregister", InnerBoundaryIs_swigregister, METH_VARARGS, NULL},
	 { (char *)"Polygon_get_extrude", _wrap_Polygon_get_extrude, METH_VARARGS, NULL},
	 { (char *)"Polygon_set_extrude", _wrap_Polygon_set_extrude, METH_VARARGS, NULL},
	 { (char *)"Polygon_has_extrude", _wrap_Polygon_has_extrude, METH_VARARGS, NULL},
	 { (char *)"Polygon_clear_extrude", _wrap_Polygon_clear_extrude, METH_VARARGS, NULL},
	 { (char *)"Polygon_get_tessellate", _wrap_Polygon_get_tessellate, METH_VARARGS, NULL},
	 { (char *)"Polygon_set_tessellate", _wrap_Polygon_set_tessellate, METH_VARARGS, NULL},
	 { (char *)"Polygon_has_tessellate", _wrap_Polygon_has_tessellate, METH_VARARGS, NULL},
	 { (char *)"Polygon_clear_tessellate", _wrap_Polygon_clear_tessellate, METH_VARARGS, NULL},
	 { (char *)"Polygon_get_altitudemode", _wrap_Polygon_get_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Polygon_set_altitudemode", _wrap_Polygon_set_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Polygon_has_altitudemode", _wrap_Polygon_has_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Polygon_clear_altitudemode", _wrap_Polygon_clear_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Polygon_get_gx_altitudemode", _wrap_Polygon_get_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Polygon_has_gx_altitudemode", _wrap_Polygon_has_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Polygon_set_gx_altitudemode", _wrap_Polygon_set_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Polygon_clear_gx_altitudemode", _wrap_Polygon_clear_gx_altitudemode, METH_VARARGS, NULL},
	 { (char *)"Polygon_get_outerboundaryis", _wrap_Polygon_get_outerboundaryis, METH_VARARGS, NULL},
	 { (char *)"Polygon_set_outerboundaryis", _wrap_Polygon_set_outerboundaryis, METH_VARARGS, NULL},
	 { (char *)"Polygon_has_outerboundaryis", _wrap_Polygon_has_outerboundaryis, METH_VARARGS, NULL},
	 { (char *)"Polygon_clear_outerboundaryis", _wrap_Polygon_clear_outerboundaryis, METH_VARARGS, NULL},
	 { (char *)"Polygon_add_innerboundaryis", _wrap_Polygon_add_innerboundaryis, METH_VARARGS, NULL},
	 { (char *)"Polygon_get_innerboundaryis_array_size", _wrap_Polygon_get_innerboundaryis_array_size, METH_VARARGS, NULL},
	 { (char *)"Polygon_get_innerboundaryis_array_at", _wrap_Polygon_get_innerboundaryis_array_at, METH_VARARGS, NULL},
	 { (char *)"Polygon_SWIGSharedPtrUpcast", _wrap_Polygon_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Polygon", _wrap_delete_Polygon, METH_VARARGS, NULL},
	 { (char *)"Polygon_swigregister", Polygon_swigregister, METH_VARARGS, NULL},
	 { (char *)"SimpleData_get_name", _wrap_SimpleData_get_name, METH_VARARGS, NULL},
	 { (char *)"SimpleData_has_name", _wrap_SimpleData_has_name, METH_VARARGS, NULL},
	 { (char *)"SimpleData_set_name", _wrap_SimpleData_set_name, METH_VARARGS, NULL},
	 { (char *)"SimpleData_clear_name", _wrap_SimpleData_clear_name, METH_VARARGS, NULL},
	 { (char *)"SimpleData_get_text", _wrap_SimpleData_get_text, METH_VARARGS, NULL},
	 { (char *)"SimpleData_has_text", _wrap_SimpleData_has_text, METH_VARARGS, NULL},
	 { (char *)"SimpleData_set_text", _wrap_SimpleData_set_text, METH_VARARGS, NULL},
	 { (char *)"SimpleData_clear_text", _wrap_SimpleData_clear_text, METH_VARARGS, NULL},
	 { (char *)"SimpleData_SWIGSharedPtrUpcast", _wrap_SimpleData_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_SimpleData", _wrap_delete_SimpleData, METH_VARARGS, NULL},
	 { (char *)"SimpleData_swigregister", SimpleData_swigregister, METH_VARARGS, NULL},
	 { (char *)"SchemaData_get_schemaurl", _wrap_SchemaData_get_schemaurl, METH_VARARGS, NULL},
	 { (char *)"SchemaData_has_schemaurl", _wrap_SchemaData_has_schemaurl, METH_VARARGS, NULL},
	 { (char *)"SchemaData_set_schemaurl", _wrap_SchemaData_set_schemaurl, METH_VARARGS, NULL},
	 { (char *)"SchemaData_clear_schemaurl", _wrap_SchemaData_clear_schemaurl, METH_VARARGS, NULL},
	 { (char *)"SchemaData_add_simpledata", _wrap_SchemaData_add_simpledata, METH_VARARGS, NULL},
	 { (char *)"SchemaData_get_simpledata_array_size", _wrap_SchemaData_get_simpledata_array_size, METH_VARARGS, NULL},
	 { (char *)"SchemaData_get_simpledata_array_at", _wrap_SchemaData_get_simpledata_array_at, METH_VARARGS, NULL},
	 { (char *)"SchemaData_SWIGSharedPtrUpcast", _wrap_SchemaData_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_SchemaData", _wrap_delete_SchemaData, METH_VARARGS, NULL},
	 { (char *)"SchemaData_swigregister", SchemaData_swigregister, METH_VARARGS, NULL},
	 { (char *)"OverlayXY_SWIGSharedPtrUpcast", _wrap_OverlayXY_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_OverlayXY", _wrap_delete_OverlayXY, METH_VARARGS, NULL},
	 { (char *)"OverlayXY_swigregister", OverlayXY_swigregister, METH_VARARGS, NULL},
	 { (char *)"ScreenXY_SWIGSharedPtrUpcast", _wrap_ScreenXY_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ScreenXY", _wrap_delete_ScreenXY, METH_VARARGS, NULL},
	 { (char *)"ScreenXY_swigregister", ScreenXY_swigregister, METH_VARARGS, NULL},
	 { (char *)"RotationXY_SWIGSharedPtrUpcast", _wrap_RotationXY_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_RotationXY", _wrap_delete_RotationXY, METH_VARARGS, NULL},
	 { (char *)"RotationXY_swigregister", RotationXY_swigregister, METH_VARARGS, NULL},
	 { (char *)"Size_SWIGSharedPtrUpcast", _wrap_Size_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Size", _wrap_delete_Size, METH_VARARGS, NULL},
	 { (char *)"Size_swigregister", Size_swigregister, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_get_overlayxy", _wrap_ScreenOverlay_get_overlayxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_set_overlayxy", _wrap_ScreenOverlay_set_overlayxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_has_overlayxy", _wrap_ScreenOverlay_has_overlayxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_clear_overlayxy", _wrap_ScreenOverlay_clear_overlayxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_get_screenxy", _wrap_ScreenOverlay_get_screenxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_set_screenxy", _wrap_ScreenOverlay_set_screenxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_has_screenxy", _wrap_ScreenOverlay_has_screenxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_clear_screenxy", _wrap_ScreenOverlay_clear_screenxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_get_rotationxy", _wrap_ScreenOverlay_get_rotationxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_set_rotationxy", _wrap_ScreenOverlay_set_rotationxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_has_rotationxy", _wrap_ScreenOverlay_has_rotationxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_clear_rotationxy", _wrap_ScreenOverlay_clear_rotationxy, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_get_size", _wrap_ScreenOverlay_get_size, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_set_size", _wrap_ScreenOverlay_set_size, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_has_size", _wrap_ScreenOverlay_has_size, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_clear_size", _wrap_ScreenOverlay_clear_size, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_get_rotation", _wrap_ScreenOverlay_get_rotation, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_set_rotation", _wrap_ScreenOverlay_set_rotation, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_has_rotation", _wrap_ScreenOverlay_has_rotation, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_clear_rotation", _wrap_ScreenOverlay_clear_rotation, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_SWIGSharedPtrUpcast", _wrap_ScreenOverlay_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_ScreenOverlay", _wrap_delete_ScreenOverlay, METH_VARARGS, NULL},
	 { (char *)"ScreenOverlay_swigregister", ScreenOverlay_swigregister, METH_VARARGS, NULL},
	 { (char *)"Style_get_iconstyle", _wrap_Style_get_iconstyle, METH_VARARGS, NULL},
	 { (char *)"Style_set_iconstyle", _wrap_Style_set_iconstyle, METH_VARARGS, NULL},
	 { (char *)"Style_has_iconstyle", _wrap_Style_has_iconstyle, METH_VARARGS, NULL},
	 { (char *)"Style_clear_iconstyle", _wrap_Style_clear_iconstyle, METH_VARARGS, NULL},
	 { (char *)"Style_get_labelstyle", _wrap_Style_get_labelstyle, METH_VARARGS, NULL},
	 { (char *)"Style_set_labelstyle", _wrap_Style_set_labelstyle, METH_VARARGS, NULL},
	 { (char *)"Style_has_labelstyle", _wrap_Style_has_labelstyle, METH_VARARGS, NULL},
	 { (char *)"Style_clear_labelstyle", _wrap_Style_clear_labelstyle, METH_VARARGS, NULL},
	 { (char *)"Style_get_linestyle", _wrap_Style_get_linestyle, METH_VARARGS, NULL},
	 { (char *)"Style_set_linestyle", _wrap_Style_set_linestyle, METH_VARARGS, NULL},
	 { (char *)"Style_has_linestyle", _wrap_Style_has_linestyle, METH_VARARGS, NULL},
	 { (char *)"Style_clear_linestyle", _wrap_Style_clear_linestyle, METH_VARARGS, NULL},
	 { (char *)"Style_get_polystyle", _wrap_Style_get_polystyle, METH_VARARGS, NULL},
	 { (char *)"Style_set_polystyle", _wrap_Style_set_polystyle, METH_VARARGS, NULL},
	 { (char *)"Style_has_polystyle", _wrap_Style_has_polystyle, METH_VARARGS, NULL},
	 { (char *)"Style_clear_polystyle", _wrap_Style_clear_polystyle, METH_VARARGS, NULL},
	 { (char *)"Style_get_balloonstyle", _wrap_Style_get_balloonstyle, METH_VARARGS, NULL},
	 { (char *)"Style_set_balloonstyle", _wrap_Style_set_balloonstyle, METH_VARARGS, NULL},
	 { (char *)"Style_has_balloonstyle", _wrap_Style_has_balloonstyle, METH_VARARGS, NULL},
	 { (char *)"Style_clear_balloonstyle", _wrap_Style_clear_balloonstyle, METH_VARARGS, NULL},
	 { (char *)"Style_get_liststyle", _wrap_Style_get_liststyle, METH_VARARGS, NULL},
	 { (char *)"Style_set_liststyle", _wrap_Style_set_liststyle, METH_VARARGS, NULL},
	 { (char *)"Style_has_liststyle", _wrap_Style_has_liststyle, METH_VARARGS, NULL},
	 { (char *)"Style_clear_liststyle", _wrap_Style_clear_liststyle, METH_VARARGS, NULL},
	 { (char *)"Style_SWIGSharedPtrUpcast", _wrap_Style_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Style", _wrap_delete_Style, METH_VARARGS, NULL},
	 { (char *)"Style_swigregister", Style_swigregister, METH_VARARGS, NULL},
	 { (char *)"StyleMap_add_pair", _wrap_StyleMap_add_pair, METH_VARARGS, NULL},
	 { (char *)"StyleMap_get_pair_array_size", _wrap_StyleMap_get_pair_array_size, METH_VARARGS, NULL},
	 { (char *)"StyleMap_get_pair_array_at", _wrap_StyleMap_get_pair_array_at, METH_VARARGS, NULL},
	 { (char *)"StyleMap_SWIGSharedPtrUpcast", _wrap_StyleMap_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_StyleMap", _wrap_delete_StyleMap, METH_VARARGS, NULL},
	 { (char *)"StyleMap_swigregister", StyleMap_swigregister, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_get_begin", _wrap_TimeSpan_get_begin, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_set_begin", _wrap_TimeSpan_set_begin, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_has_begin", _wrap_TimeSpan_has_begin, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_clear_begin", _wrap_TimeSpan_clear_begin, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_get_end", _wrap_TimeSpan_get_end, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_set_end", _wrap_TimeSpan_set_end, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_has_end", _wrap_TimeSpan_has_end, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_clear_end", _wrap_TimeSpan_clear_end, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_SWIGSharedPtrUpcast", _wrap_TimeSpan_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_TimeSpan", _wrap_delete_TimeSpan, METH_VARARGS, NULL},
	 { (char *)"TimeSpan_swigregister", TimeSpan_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxTimeSpan_SWIGSharedPtrUpcast", _wrap_GxTimeSpan_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxTimeSpan", _wrap_delete_GxTimeSpan, METH_VARARGS, NULL},
	 { (char *)"GxTimeSpan_swigregister", GxTimeSpan_swigregister, METH_VARARGS, NULL},
	 { (char *)"TimeStamp_get_when", _wrap_TimeStamp_get_when, METH_VARARGS, NULL},
	 { (char *)"TimeStamp_set_when", _wrap_TimeStamp_set_when, METH_VARARGS, NULL},
	 { (char *)"TimeStamp_has_when", _wrap_TimeStamp_has_when, METH_VARARGS, NULL},
	 { (char *)"TimeStamp_clear_when", _wrap_TimeStamp_clear_when, METH_VARARGS, NULL},
	 { (char *)"TimeStamp_SWIGSharedPtrUpcast", _wrap_TimeStamp_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_TimeStamp", _wrap_delete_TimeStamp, METH_VARARGS, NULL},
	 { (char *)"TimeStamp_swigregister", TimeStamp_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxTimeStamp_SWIGSharedPtrUpcast", _wrap_GxTimeStamp_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxTimeStamp", _wrap_delete_GxTimeStamp, METH_VARARGS, NULL},
	 { (char *)"GxTimeStamp_swigregister", GxTimeStamp_swigregister, METH_VARARGS, NULL},
	 { (char *)"Kml_get_hint", _wrap_Kml_get_hint, METH_VARARGS, NULL},
	 { (char *)"Kml_set_hint", _wrap_Kml_set_hint, METH_VARARGS, NULL},
	 { (char *)"Kml_has_hint", _wrap_Kml_has_hint, METH_VARARGS, NULL},
	 { (char *)"Kml_clear_hint", _wrap_Kml_clear_hint, METH_VARARGS, NULL},
	 { (char *)"Kml_get_networklinkcontrol", _wrap_Kml_get_networklinkcontrol, METH_VARARGS, NULL},
	 { (char *)"Kml_set_networklinkcontrol", _wrap_Kml_set_networklinkcontrol, METH_VARARGS, NULL},
	 { (char *)"Kml_has_networklinkcontrol", _wrap_Kml_has_networklinkcontrol, METH_VARARGS, NULL},
	 { (char *)"Kml_clear_networklinkcontrol", _wrap_Kml_clear_networklinkcontrol, METH_VARARGS, NULL},
	 { (char *)"Kml_get_feature", _wrap_Kml_get_feature, METH_VARARGS, NULL},
	 { (char *)"Kml_set_feature", _wrap_Kml_set_feature, METH_VARARGS, NULL},
	 { (char *)"Kml_has_feature", _wrap_Kml_has_feature, METH_VARARGS, NULL},
	 { (char *)"Kml_clear_feature", _wrap_Kml_clear_feature, METH_VARARGS, NULL},
	 { (char *)"Kml_SWIGSharedPtrUpcast", _wrap_Kml_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_Kml", _wrap_delete_Kml, METH_VARARGS, NULL},
	 { (char *)"Kml_swigregister", Kml_swigregister, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_get_name", _wrap_AtomAuthor_get_name, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_set_name", _wrap_AtomAuthor_set_name, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_has_name", _wrap_AtomAuthor_has_name, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_clear_name", _wrap_AtomAuthor_clear_name, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_get_uri", _wrap_AtomAuthor_get_uri, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_set_uri", _wrap_AtomAuthor_set_uri, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_has_uri", _wrap_AtomAuthor_has_uri, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_clear_uri", _wrap_AtomAuthor_clear_uri, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_get_email", _wrap_AtomAuthor_get_email, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_set_email", _wrap_AtomAuthor_set_email, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_has_email", _wrap_AtomAuthor_has_email, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_clear_email", _wrap_AtomAuthor_clear_email, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_SWIGSharedPtrUpcast", _wrap_AtomAuthor_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_AtomAuthor", _wrap_delete_AtomAuthor, METH_VARARGS, NULL},
	 { (char *)"AtomAuthor_swigregister", AtomAuthor_swigregister, METH_VARARGS, NULL},
	 { (char *)"AtomLink_get_href", _wrap_AtomLink_get_href, METH_VARARGS, NULL},
	 { (char *)"AtomLink_has_href", _wrap_AtomLink_has_href, METH_VARARGS, NULL},
	 { (char *)"AtomLink_set_href", _wrap_AtomLink_set_href, METH_VARARGS, NULL},
	 { (char *)"AtomLink_clear_href", _wrap_AtomLink_clear_href, METH_VARARGS, NULL},
	 { (char *)"AtomLink_get_rel", _wrap_AtomLink_get_rel, METH_VARARGS, NULL},
	 { (char *)"AtomLink_has_rel", _wrap_AtomLink_has_rel, METH_VARARGS, NULL},
	 { (char *)"AtomLink_set_rel", _wrap_AtomLink_set_rel, METH_VARARGS, NULL},
	 { (char *)"AtomLink_clear_rel", _wrap_AtomLink_clear_rel, METH_VARARGS, NULL},
	 { (char *)"AtomLink_get_type", _wrap_AtomLink_get_type, METH_VARARGS, NULL},
	 { (char *)"AtomLink_has_type", _wrap_AtomLink_has_type, METH_VARARGS, NULL},
	 { (char *)"AtomLink_set_type", _wrap_AtomLink_set_type, METH_VARARGS, NULL},
	 { (char *)"AtomLink_clear_type", _wrap_AtomLink_clear_type, METH_VARARGS, NULL},
	 { (char *)"AtomLink_get_hreflang", _wrap_AtomLink_get_hreflang, METH_VARARGS, NULL},
	 { (char *)"AtomLink_has_hreflang", _wrap_AtomLink_has_hreflang, METH_VARARGS, NULL},
	 { (char *)"AtomLink_set_hreflang", _wrap_AtomLink_set_hreflang, METH_VARARGS, NULL},
	 { (char *)"AtomLink_clear_hreflang", _wrap_AtomLink_clear_hreflang, METH_VARARGS, NULL},
	 { (char *)"AtomLink_get_title", _wrap_AtomLink_get_title, METH_VARARGS, NULL},
	 { (char *)"AtomLink_has_title", _wrap_AtomLink_has_title, METH_VARARGS, NULL},
	 { (char *)"AtomLink_set_title", _wrap_AtomLink_set_title, METH_VARARGS, NULL},
	 { (char *)"AtomLink_clear_title", _wrap_AtomLink_clear_title, METH_VARARGS, NULL},
	 { (char *)"AtomLink_get_length", _wrap_AtomLink_get_length, METH_VARARGS, NULL},
	 { (char *)"AtomLink_has_length", _wrap_AtomLink_has_length, METH_VARARGS, NULL},
	 { (char *)"AtomLink_set_length", _wrap_AtomLink_set_length, METH_VARARGS, NULL},
	 { (char *)"AtomLink_clear_length", _wrap_AtomLink_clear_length, METH_VARARGS, NULL},
	 { (char *)"AtomLink_SWIGSharedPtrUpcast", _wrap_AtomLink_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_AtomLink", _wrap_delete_AtomLink, METH_VARARGS, NULL},
	 { (char *)"AtomLink_swigregister", AtomLink_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxTourPrimitive_SWIGSharedPtrUpcast", _wrap_GxTourPrimitive_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxTourPrimitive", _wrap_delete_GxTourPrimitive, METH_VARARGS, NULL},
	 { (char *)"GxTourPrimitive_swigregister", GxTourPrimitive_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxPlaylist_add_gx_tourprimitive", _wrap_GxPlaylist_add_gx_tourprimitive, METH_VARARGS, NULL},
	 { (char *)"GxPlaylist_get_gx_tourprimitive_array_size", _wrap_GxPlaylist_get_gx_tourprimitive_array_size, METH_VARARGS, NULL},
	 { (char *)"GxPlaylist_get_gx_tourprimitive_array_at", _wrap_GxPlaylist_get_gx_tourprimitive_array_at, METH_VARARGS, NULL},
	 { (char *)"GxPlaylist_SWIGSharedPtrUpcast", _wrap_GxPlaylist_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxPlaylist", _wrap_delete_GxPlaylist, METH_VARARGS, NULL},
	 { (char *)"GxPlaylist_swigregister", GxPlaylist_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxTour_get_gx_playlist", _wrap_GxTour_get_gx_playlist, METH_VARARGS, NULL},
	 { (char *)"GxTour_has_gx_playlist", _wrap_GxTour_has_gx_playlist, METH_VARARGS, NULL},
	 { (char *)"GxTour_set_gx_playlist", _wrap_GxTour_set_gx_playlist, METH_VARARGS, NULL},
	 { (char *)"GxTour_clear_gx_playlist", _wrap_GxTour_clear_gx_playlist, METH_VARARGS, NULL},
	 { (char *)"GxTour_SWIGSharedPtrUpcast", _wrap_GxTour_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxTour", _wrap_delete_GxTour, METH_VARARGS, NULL},
	 { (char *)"GxTour_swigregister", GxTour_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_get_gx_duration", _wrap_GxAnimatedUpdate_get_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_has_gx_duration", _wrap_GxAnimatedUpdate_has_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_set_gx_duration", _wrap_GxAnimatedUpdate_set_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_clear_gx_duration", _wrap_GxAnimatedUpdate_clear_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_get_update", _wrap_GxAnimatedUpdate_get_update, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_has_update", _wrap_GxAnimatedUpdate_has_update, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_set_update", _wrap_GxAnimatedUpdate_set_update, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_clear_update", _wrap_GxAnimatedUpdate_clear_update, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_SWIGSharedPtrUpcast", _wrap_GxAnimatedUpdate_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxAnimatedUpdate", _wrap_delete_GxAnimatedUpdate, METH_VARARGS, NULL},
	 { (char *)"GxAnimatedUpdate_swigregister", GxAnimatedUpdate_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_get_gx_duration", _wrap_GxFlyTo_get_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_has_gx_duration", _wrap_GxFlyTo_has_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_set_gx_duration", _wrap_GxFlyTo_set_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_clear_gx_duration", _wrap_GxFlyTo_clear_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_get_gx_flytomode", _wrap_GxFlyTo_get_gx_flytomode, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_has_gx_flytomode", _wrap_GxFlyTo_has_gx_flytomode, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_set_gx_flytomode", _wrap_GxFlyTo_set_gx_flytomode, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_clear_gx_flytomode", _wrap_GxFlyTo_clear_gx_flytomode, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_get_abstractview", _wrap_GxFlyTo_get_abstractview, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_has_abstractview", _wrap_GxFlyTo_has_abstractview, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_set_abstractview", _wrap_GxFlyTo_set_abstractview, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_clear_abstractview", _wrap_GxFlyTo_clear_abstractview, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_SWIGSharedPtrUpcast", _wrap_GxFlyTo_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxFlyTo", _wrap_delete_GxFlyTo, METH_VARARGS, NULL},
	 { (char *)"GxFlyTo_swigregister", GxFlyTo_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxWait_get_gx_duration", _wrap_GxWait_get_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxWait_has_gx_duration", _wrap_GxWait_has_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxWait_set_gx_duration", _wrap_GxWait_set_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxWait_clear_gx_duration", _wrap_GxWait_clear_gx_duration, METH_VARARGS, NULL},
	 { (char *)"GxWait_SWIGSharedPtrUpcast", _wrap_GxWait_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxWait", _wrap_delete_GxWait, METH_VARARGS, NULL},
	 { (char *)"GxWait_swigregister", GxWait_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxSoundCue_get_href", _wrap_GxSoundCue_get_href, METH_VARARGS, NULL},
	 { (char *)"GxSoundCue_has_href", _wrap_GxSoundCue_has_href, METH_VARARGS, NULL},
	 { (char *)"GxSoundCue_set_href", _wrap_GxSoundCue_set_href, METH_VARARGS, NULL},
	 { (char *)"GxSoundCue_clear_href", _wrap_GxSoundCue_clear_href, METH_VARARGS, NULL},
	 { (char *)"GxSoundCue_SWIGSharedPtrUpcast", _wrap_GxSoundCue_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxSoundCue", _wrap_delete_GxSoundCue, METH_VARARGS, NULL},
	 { (char *)"GxSoundCue_swigregister", GxSoundCue_swigregister, METH_VARARGS, NULL},
	 { (char *)"GxTourControl_get_gx_playmode", _wrap_GxTourControl_get_gx_playmode, METH_VARARGS, NULL},
	 { (char *)"GxTourControl_has_gx_playmode", _wrap_GxTourControl_has_gx_playmode, METH_VARARGS, NULL},
	 { (char *)"GxTourControl_set_gx_playmode", _wrap_GxTourControl_set_gx_playmode, METH_VARARGS, NULL},
	 { (char *)"GxTourControl_clear_gx_playmode", _wrap_GxTourControl_clear_gx_playmode, METH_VARARGS, NULL},
	 { (char *)"GxTourControl_SWIGSharedPtrUpcast", _wrap_GxTourControl_SWIGSharedPtrUpcast, METH_VARARGS, NULL},
	 { (char *)"delete_GxTourControl", _wrap_delete_GxTourControl, METH_VARARGS, NULL},
	 { (char *)"GxTourControl_swigregister", GxTourControl_swigregister, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_GetFactory", _wrap_KmlFactory_GetFactory, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateElementById", _wrap_KmlFactory_CreateElementById, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateAlias", _wrap_KmlFactory_CreateAlias, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateAtomAuthor", _wrap_KmlFactory_CreateAtomAuthor, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateAtomLink", _wrap_KmlFactory_CreateAtomLink, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateBalloonStyle", _wrap_KmlFactory_CreateBalloonStyle, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateCamera", _wrap_KmlFactory_CreateCamera, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateChange", _wrap_KmlFactory_CreateChange, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateCoordinates", _wrap_KmlFactory_CreateCoordinates, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateCreate", _wrap_KmlFactory_CreateCreate, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateData", _wrap_KmlFactory_CreateData, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateDelete", _wrap_KmlFactory_CreateDelete, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateDocument", _wrap_KmlFactory_CreateDocument, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateExtendedData", _wrap_KmlFactory_CreateExtendedData, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateFolder", _wrap_KmlFactory_CreateFolder, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGroundOverlay", _wrap_KmlFactory_CreateGroundOverlay, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateHotSpot", _wrap_KmlFactory_CreateHotSpot, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateIcon", _wrap_KmlFactory_CreateIcon, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateIconStyle", _wrap_KmlFactory_CreateIconStyle, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateIconStyleIcon", _wrap_KmlFactory_CreateIconStyleIcon, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateImagePyramid", _wrap_KmlFactory_CreateImagePyramid, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateInnerBoundaryIs", _wrap_KmlFactory_CreateInnerBoundaryIs, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateItemIcon", _wrap_KmlFactory_CreateItemIcon, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateKml", _wrap_KmlFactory_CreateKml, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLabelStyle", _wrap_KmlFactory_CreateLabelStyle, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLatLonBox", _wrap_KmlFactory_CreateLatLonBox, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLatLonAltBox", _wrap_KmlFactory_CreateLatLonAltBox, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLinearRing", _wrap_KmlFactory_CreateLinearRing, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLineString", _wrap_KmlFactory_CreateLineString, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLineStyle", _wrap_KmlFactory_CreateLineStyle, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLink", _wrap_KmlFactory_CreateLink, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLinkSnippet", _wrap_KmlFactory_CreateLinkSnippet, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateListStyle", _wrap_KmlFactory_CreateListStyle, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLocation", _wrap_KmlFactory_CreateLocation, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLod", _wrap_KmlFactory_CreateLod, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateLookAt", _wrap_KmlFactory_CreateLookAt, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateModel", _wrap_KmlFactory_CreateModel, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateMultiGeometry", _wrap_KmlFactory_CreateMultiGeometry, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateNetworkLink", _wrap_KmlFactory_CreateNetworkLink, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateOrientation", _wrap_KmlFactory_CreateOrientation, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateNetworkLinkControl", _wrap_KmlFactory_CreateNetworkLinkControl, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateOuterBoundaryIs", _wrap_KmlFactory_CreateOuterBoundaryIs, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateOverlayXY", _wrap_KmlFactory_CreateOverlayXY, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreatePair", _wrap_KmlFactory_CreatePair, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreatePhotoOverlay", _wrap_KmlFactory_CreatePhotoOverlay, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreatePlacemark", _wrap_KmlFactory_CreatePlacemark, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreatePolygon", _wrap_KmlFactory_CreatePolygon, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreatePoint", _wrap_KmlFactory_CreatePoint, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreatePolyStyle", _wrap_KmlFactory_CreatePolyStyle, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateRegion", _wrap_KmlFactory_CreateRegion, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateResourceMap", _wrap_KmlFactory_CreateResourceMap, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateRotationXY", _wrap_KmlFactory_CreateRotationXY, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateScale", _wrap_KmlFactory_CreateScale, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateSchema", _wrap_KmlFactory_CreateSchema, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateSchemaData", _wrap_KmlFactory_CreateSchemaData, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateScreenOverlay", _wrap_KmlFactory_CreateScreenOverlay, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateScreenXY", _wrap_KmlFactory_CreateScreenXY, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateSize", _wrap_KmlFactory_CreateSize, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateSimpleData", _wrap_KmlFactory_CreateSimpleData, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateSimpleField", _wrap_KmlFactory_CreateSimpleField, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateSnippet", _wrap_KmlFactory_CreateSnippet, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateStyle", _wrap_KmlFactory_CreateStyle, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateStyleMap", _wrap_KmlFactory_CreateStyleMap, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateTimeSpan", _wrap_KmlFactory_CreateTimeSpan, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateTimeStamp", _wrap_KmlFactory_CreateTimeStamp, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateViewVolume", _wrap_KmlFactory_CreateViewVolume, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateUpdate", _wrap_KmlFactory_CreateUpdate, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxAnimatedUpdate", _wrap_KmlFactory_CreateGxAnimatedUpdate, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxFlyTo", _wrap_KmlFactory_CreateGxFlyTo, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxLatLonQuad", _wrap_KmlFactory_CreateGxLatLonQuad, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxPlaylist", _wrap_KmlFactory_CreateGxPlaylist, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxSoundCue", _wrap_KmlFactory_CreateGxSoundCue, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxTimeSpan", _wrap_KmlFactory_CreateGxTimeSpan, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxTimeStamp", _wrap_KmlFactory_CreateGxTimeStamp, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxTour", _wrap_KmlFactory_CreateGxTour, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxTourControl", _wrap_KmlFactory_CreateGxTourControl, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_CreateGxWait", _wrap_KmlFactory_CreateGxWait, METH_VARARGS, NULL},
	 { (char *)"delete_KmlFactory", _wrap_delete_KmlFactory, METH_VARARGS, NULL},
	 { (char *)"KmlFactory_swigregister", KmlFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"ParseKml", _wrap_ParseKml, METH_VARARGS, NULL},
	 { (char *)"SerializePretty", _wrap_SerializePretty, METH_VARARGS, NULL},
	 { (char *)"SerializeRaw", _wrap_SerializeRaw, METH_VARARGS, NULL},
	 { (char *)"AsElement", _wrap_AsElement, METH_VARARGS, NULL},
	 { (char *)"AsAbstractLatLonBox", _wrap_AsAbstractLatLonBox, METH_VARARGS, NULL},
	 { (char *)"AsAbstractView", _wrap_AsAbstractView, METH_VARARGS, NULL},
	 { (char *)"AsColorStyle", _wrap_AsColorStyle, METH_VARARGS, NULL},
	 { (char *)"AsContainer", _wrap_AsContainer, METH_VARARGS, NULL},
	 { (char *)"AsFeature", _wrap_AsFeature, METH_VARARGS, NULL},
	 { (char *)"AsGeometry", _wrap_AsGeometry, METH_VARARGS, NULL},
	 { (char *)"AsObject", _wrap_AsObject, METH_VARARGS, NULL},
	 { (char *)"AsOverlay", _wrap_AsOverlay, METH_VARARGS, NULL},
	 { (char *)"AsStyleSelector", _wrap_AsStyleSelector, METH_VARARGS, NULL},
	 { (char *)"AsSubStyle", _wrap_AsSubStyle, METH_VARARGS, NULL},
	 { (char *)"AsTimePrimitive", _wrap_AsTimePrimitive, METH_VARARGS, NULL},
	 { (char *)"AsAlias", _wrap_AsAlias, METH_VARARGS, NULL},
	 { (char *)"AsBalloonStyle", _wrap_AsBalloonStyle, METH_VARARGS, NULL},
	 { (char *)"AsCamera", _wrap_AsCamera, METH_VARARGS, NULL},
	 { (char *)"AsChange", _wrap_AsChange, METH_VARARGS, NULL},
	 { (char *)"AsCoordinates", _wrap_AsCoordinates, METH_VARARGS, NULL},
	 { (char *)"AsCreate", _wrap_AsCreate, METH_VARARGS, NULL},
	 { (char *)"AsData", _wrap_AsData, METH_VARARGS, NULL},
	 { (char *)"AsDelete", _wrap_AsDelete, METH_VARARGS, NULL},
	 { (char *)"AsDocument", _wrap_AsDocument, METH_VARARGS, NULL},
	 { (char *)"AsExtendedData", _wrap_AsExtendedData, METH_VARARGS, NULL},
	 { (char *)"AsFolder", _wrap_AsFolder, METH_VARARGS, NULL},
	 { (char *)"AsGroundOverlay", _wrap_AsGroundOverlay, METH_VARARGS, NULL},
	 { (char *)"AsHotSpot", _wrap_AsHotSpot, METH_VARARGS, NULL},
	 { (char *)"AsIcon", _wrap_AsIcon, METH_VARARGS, NULL},
	 { (char *)"AsIconStyle", _wrap_AsIconStyle, METH_VARARGS, NULL},
	 { (char *)"AsIconStyleIcon", _wrap_AsIconStyleIcon, METH_VARARGS, NULL},
	 { (char *)"AsImagePyramid", _wrap_AsImagePyramid, METH_VARARGS, NULL},
	 { (char *)"AsInnerBoundaryIs", _wrap_AsInnerBoundaryIs, METH_VARARGS, NULL},
	 { (char *)"AsItemIcon", _wrap_AsItemIcon, METH_VARARGS, NULL},
	 { (char *)"AsKml", _wrap_AsKml, METH_VARARGS, NULL},
	 { (char *)"AsLabelStyle", _wrap_AsLabelStyle, METH_VARARGS, NULL},
	 { (char *)"AsLatLonAltBox", _wrap_AsLatLonAltBox, METH_VARARGS, NULL},
	 { (char *)"AsLatLonBox", _wrap_AsLatLonBox, METH_VARARGS, NULL},
	 { (char *)"AsLineString", _wrap_AsLineString, METH_VARARGS, NULL},
	 { (char *)"AsLineStyle", _wrap_AsLineStyle, METH_VARARGS, NULL},
	 { (char *)"AsLinearRing", _wrap_AsLinearRing, METH_VARARGS, NULL},
	 { (char *)"AsLink", _wrap_AsLink, METH_VARARGS, NULL},
	 { (char *)"AsLinkSnippet", _wrap_AsLinkSnippet, METH_VARARGS, NULL},
	 { (char *)"AsListStyle", _wrap_AsListStyle, METH_VARARGS, NULL},
	 { (char *)"AsLocation", _wrap_AsLocation, METH_VARARGS, NULL},
	 { (char *)"AsLod", _wrap_AsLod, METH_VARARGS, NULL},
	 { (char *)"AsLookAt", _wrap_AsLookAt, METH_VARARGS, NULL},
	 { (char *)"AsMetadata", _wrap_AsMetadata, METH_VARARGS, NULL},
	 { (char *)"AsModel", _wrap_AsModel, METH_VARARGS, NULL},
	 { (char *)"AsMultiGeometry", _wrap_AsMultiGeometry, METH_VARARGS, NULL},
	 { (char *)"AsNetworkLink", _wrap_AsNetworkLink, METH_VARARGS, NULL},
	 { (char *)"AsNetworkLinkControl", _wrap_AsNetworkLinkControl, METH_VARARGS, NULL},
	 { (char *)"AsOrientation", _wrap_AsOrientation, METH_VARARGS, NULL},
	 { (char *)"AsOuterBoundaryIs", _wrap_AsOuterBoundaryIs, METH_VARARGS, NULL},
	 { (char *)"AsOverlayXY", _wrap_AsOverlayXY, METH_VARARGS, NULL},
	 { (char *)"AsPair", _wrap_AsPair, METH_VARARGS, NULL},
	 { (char *)"AsPhotoOverlay", _wrap_AsPhotoOverlay, METH_VARARGS, NULL},
	 { (char *)"AsPlacemark", _wrap_AsPlacemark, METH_VARARGS, NULL},
	 { (char *)"AsPoint", _wrap_AsPoint, METH_VARARGS, NULL},
	 { (char *)"AsPolyStyle", _wrap_AsPolyStyle, METH_VARARGS, NULL},
	 { (char *)"AsPolygon", _wrap_AsPolygon, METH_VARARGS, NULL},
	 { (char *)"AsRegion", _wrap_AsRegion, METH_VARARGS, NULL},
	 { (char *)"AsResourceMap", _wrap_AsResourceMap, METH_VARARGS, NULL},
	 { (char *)"AsRotationXY", _wrap_AsRotationXY, METH_VARARGS, NULL},
	 { (char *)"AsScale", _wrap_AsScale, METH_VARARGS, NULL},
	 { (char *)"AsSchema", _wrap_AsSchema, METH_VARARGS, NULL},
	 { (char *)"AsSchemaData", _wrap_AsSchemaData, METH_VARARGS, NULL},
	 { (char *)"AsScreenOverlay", _wrap_AsScreenOverlay, METH_VARARGS, NULL},
	 { (char *)"AsScreenXY", _wrap_AsScreenXY, METH_VARARGS, NULL},
	 { (char *)"AsSimpleData", _wrap_AsSimpleData, METH_VARARGS, NULL},
	 { (char *)"AsSimpleField", _wrap_AsSimpleField, METH_VARARGS, NULL},
	 { (char *)"AsSize", _wrap_AsSize, METH_VARARGS, NULL},
	 { (char *)"AsSnippet", _wrap_AsSnippet, METH_VARARGS, NULL},
	 { (char *)"AsStyle", _wrap_AsStyle, METH_VARARGS, NULL},
	 { (char *)"AsStyleMap", _wrap_AsStyleMap, METH_VARARGS, NULL},
	 { (char *)"AsTimeSpan", _wrap_AsTimeSpan, METH_VARARGS, NULL},
	 { (char *)"AsTimeStamp", _wrap_AsTimeStamp, METH_VARARGS, NULL},
	 { (char *)"AsUpdate", _wrap_AsUpdate, METH_VARARGS, NULL},
	 { (char *)"AsViewVolume", _wrap_AsViewVolume, METH_VARARGS, NULL},
	 { (char *)"AsAtomAuthor", _wrap_AsAtomAuthor, METH_VARARGS, NULL},
	 { (char *)"AsAtomCategory", _wrap_AsAtomCategory, METH_VARARGS, NULL},
	 { (char *)"AsAtomContent", _wrap_AsAtomContent, METH_VARARGS, NULL},
	 { (char *)"AsAtomEntry", _wrap_AsAtomEntry, METH_VARARGS, NULL},
	 { (char *)"AsAtomFeed", _wrap_AsAtomFeed, METH_VARARGS, NULL},
	 { (char *)"AsAtomLink", _wrap_AsAtomLink, METH_VARARGS, NULL},
	 { (char *)"AsXalAddressDetails", _wrap_AsXalAddressDetails, METH_VARARGS, NULL},
	 { (char *)"AsXalAdministrativeArea", _wrap_AsXalAdministrativeArea, METH_VARARGS, NULL},
	 { (char *)"AsXalCountry", _wrap_AsXalCountry, METH_VARARGS, NULL},
	 { (char *)"AsXalLocality", _wrap_AsXalLocality, METH_VARARGS, NULL},
	 { (char *)"AsXalPostalCode", _wrap_AsXalPostalCode, METH_VARARGS, NULL},
	 { (char *)"AsXalSubAdministrativeArea", _wrap_AsXalSubAdministrativeArea, METH_VARARGS, NULL},
	 { (char *)"AsXalThoroughfare", _wrap_AsXalThoroughfare, METH_VARARGS, NULL},
	 { (char *)"AsGxAnimatedUpdate", _wrap_AsGxAnimatedUpdate, METH_VARARGS, NULL},
	 { (char *)"AsGxFlyTo", _wrap_AsGxFlyTo, METH_VARARGS, NULL},
	 { (char *)"AsGxLatLonQuad", _wrap_AsGxLatLonQuad, METH_VARARGS, NULL},
	 { (char *)"AsGxPlaylist", _wrap_AsGxPlaylist, METH_VARARGS, NULL},
	 { (char *)"AsGxSoundCue", _wrap_AsGxSoundCue, METH_VARARGS, NULL},
	 { (char *)"AsGxTimeSpan", _wrap_AsGxTimeSpan, METH_VARARGS, NULL},
	 { (char *)"AsGxTimeStamp", _wrap_AsGxTimeStamp, METH_VARARGS, NULL},
	 { (char *)"AsGxTour", _wrap_AsGxTour, METH_VARARGS, NULL},
	 { (char *)"AsGxTourControl", _wrap_AsGxTourControl, METH_VARARGS, NULL},
	 { (char *)"AsGxTourPrimitive", _wrap_AsGxTourPrimitive, METH_VARARGS, NULL},
	 { (char *)"AsGxWait", _wrap_AsGxWait, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_kmldom__FolderTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *) (kmldom::Container *) ((kmldom::Folder *) x));
}
static void *_p_kmldom__NetworkLinkTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *)  ((kmldom::NetworkLink *) x));
}
static void *_p_kmldom__PlacemarkTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *)  ((kmldom::Placemark *) x));
}
static void *_p_kmldom__GxTourTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *)  ((kmldom::GxTour *) x));
}
static void *_p_kmldom__DocumentTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *) (kmldom::Container *) ((kmldom::Document *) x));
}
static void *_p_kmldom__ContainerTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *)  ((kmldom::Container *) x));
}
static void *_p_kmldom__OverlayTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *)  ((kmldom::Overlay *) x));
}
static void *_p_kmldom__GroundOverlayTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *) (kmldom::Overlay *) ((kmldom::GroundOverlay *) x));
}
static void *_p_kmldom__PhotoOverlayTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *) (kmldom::Overlay *) ((kmldom::PhotoOverlay *) x));
}
static void *_p_kmldom__ScreenOverlayTo_p_kmldom__Feature(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Feature *) (kmldom::Overlay *) ((kmldom::ScreenOverlay *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__AtomLink_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::AtomLink > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Kml_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::Kml > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__SimpleField_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::SimpleField > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Coordinates_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::Coordinates > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::NetworkLinkControl > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::OuterBoundaryIs > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::InnerBoundaryIs > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Object_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::Object > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Update_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::Update > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__SnippetCommon_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::SnippetCommon > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__SimpleData_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::SimpleData > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__AtomAuthor_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::AtomAuthor > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Vec2_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::Vec2 > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__UpdateOperation_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::UpdateOperation > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ExtendedData_tTo_p_boost__intrusive_ptrT_kmldom__Element_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Element >(*(boost::intrusive_ptr< kmldom::ExtendedData > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Element_tTo_p_boost__intrusive_ptrT_kmlbase__XmlElement_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmlbase::XmlElement >(*(boost::intrusive_ptr< kmldom::Element > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmlbase__XmlElement_tTo_p_boost__intrusive_ptrT_kmlbase__Referent_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmlbase::Referent >(*(boost::intrusive_ptr< kmlbase::XmlElement > *)x);
  }
static void *_p_kmldom__IconStyleIconTo_p_kmldom__BasicLink(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::BasicLink *)  ((kmldom::IconStyleIcon *) x));
}
static void *_p_kmldom__IconTo_p_kmldom__BasicLink(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::BasicLink *)  ((kmldom::Icon *) x));
}
static void *_p_kmldom__LinkTo_p_kmldom__BasicLink(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::BasicLink *)  ((kmldom::Link *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__Style_tTo_p_boost__intrusive_ptrT_kmldom__StyleSelector_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::StyleSelector >(*(boost::intrusive_ptr< kmldom::Style > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__StyleMap_tTo_p_boost__intrusive_ptrT_kmldom__StyleSelector_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::StyleSelector >(*(boost::intrusive_ptr< kmldom::StyleMap > *)x);
  }
static void *_p_kmldom__PolygonTo_p_kmldom__Geometry(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Geometry *)  ((kmldom::Polygon *) x));
}
static void *_p_kmldom__ModelTo_p_kmldom__Geometry(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Geometry *)  ((kmldom::Model *) x));
}
static void *_p_kmldom__MultiGeometryTo_p_kmldom__Geometry(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Geometry *)  ((kmldom::MultiGeometry *) x));
}
static void *_p_kmldom__PointTo_p_kmldom__Geometry(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Geometry *)  ((kmldom::Point *) x));
}
static void *_p_kmldom__LineStringTo_p_kmldom__Geometry(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Geometry *)  ((kmldom::LineString *) x));
}
static void *_p_kmldom__LinearRingTo_p_kmldom__Geometry(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Geometry *)  ((kmldom::LinearRing *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__Link_tTo_p_boost__intrusive_ptrT_kmldom__BasicLink_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::BasicLink >(*(boost::intrusive_ptr< kmldom::Link > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Icon_tTo_p_boost__intrusive_ptrT_kmldom__BasicLink_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::BasicLink >(*(boost::intrusive_ptr< kmldom::Icon > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_tTo_p_boost__intrusive_ptrT_kmldom__BasicLink_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::BasicLink >(*(boost::intrusive_ptr< kmldom::IconStyleIcon > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Change_tTo_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::UpdateOperation >(*(boost::intrusive_ptr< kmldom::Change > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Create_tTo_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::UpdateOperation >(*(boost::intrusive_ptr< kmldom::Create > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Delete_tTo_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::UpdateOperation >(*(boost::intrusive_ptr< kmldom::Delete > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__LinkSnippet_tTo_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::SnippetCommon >(*(boost::intrusive_ptr< kmldom::LinkSnippet > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Snippet_tTo_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::SnippetCommon >(*(boost::intrusive_ptr< kmldom::Snippet > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__LookAt_tTo_p_boost__intrusive_ptrT_kmldom__AbstractView_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::AbstractView >(*(boost::intrusive_ptr< kmldom::LookAt > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Camera_tTo_p_boost__intrusive_ptrT_kmldom__AbstractView_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::AbstractView >(*(boost::intrusive_ptr< kmldom::Camera > *)x);
  }
static void *_p_kmldom__DocumentTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *)(kmldom::Container *) ((kmldom::Document *) x));
}
static void *_p_kmldom__OrientationTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Orientation *) x));
}
static void *_p_kmldom__LinkSnippetTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::SnippetCommon *) ((kmldom::LinkSnippet *) x));
}
static void *_p_kmldom__SnippetTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::SnippetCommon *) ((kmldom::Snippet *) x));
}
static void *_p_kmldom__PolygonTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Geometry *) ((kmldom::Polygon *) x));
}
static void *_p_kmldom__GxFlyToTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxFlyTo *) x));
}
static void *_p_kmldom__UpdateOperationTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::UpdateOperation *) x));
}
static void *_p_kmldom__AbstractViewTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::AbstractView *) x));
}
static void *_p_kmldom__CoordinatesTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::Coordinates *) x));
}
static void *_p_kmldom__CameraTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::AbstractView *) ((kmldom::Camera *) x));
}
static void *_p_kmldom__AtomAuthorTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::AtomAuthor *) x));
}
static void *_p_kmldom__IconStyleIconTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::BasicLink *) ((kmldom::IconStyleIcon *) x));
}
static void *_p_kmldom__StyleMapTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::StyleSelector *) ((kmldom::StyleMap *) x));
}
static void *_p_kmldom__ExtendedDataTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::ExtendedData *) x));
}
static void *_p_kmldom__InnerBoundaryIsTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::InnerBoundaryIs *) x));
}
static void *_p_kmldom__OuterBoundaryIsTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::OuterBoundaryIs *) x));
}
static void *_p_kmldom__ItemIconTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::ItemIcon *) x));
}
static void *_p_kmldom__KmlTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::Kml *) x));
}
static void *_p_kmldom__ContainerTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *) ((kmldom::Container *) x));
}
static void *_p_kmldom__SubStyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::SubStyle *) x));
}
static void *_p_kmldom__OverlayXYTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Vec2 *) ((kmldom::OverlayXY *) x));
}
static void *_p_kmldom__SizeTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Vec2 *) ((kmldom::Size *) x));
}
static void *_p_kmldom__LookAtTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::AbstractView *) ((kmldom::LookAt *) x));
}
static void *_p_kmldom__ViewVolumeTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::ViewVolume *) x));
}
static void *_p_kmldom__NetworkLinkControlTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::NetworkLinkControl *) x));
}
static void *_p_kmldom__GxTourControlTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxTourControl *) x));
}
static void *_p_kmldom__DeleteTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::UpdateOperation *) ((kmldom::Delete *) x));
}
static void *_p_kmldom__IconTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::BasicLink *) ((kmldom::Icon *) x));
}
static void *_p_kmldom__DataTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Data *) x));
}
static void *_p_kmldom__RegionTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Region *) x));
}
static void *_p_kmldom__AtomLinkTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::AtomLink *) x));
}
static void *_p_kmldom__SchemaDataTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::SchemaData *) x));
}
static void *_p_kmldom__SnippetCommonTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::SnippetCommon *) x));
}
static void *_p_kmldom__AliasTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Alias *) x));
}
static void *_p_kmldom__StyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::StyleSelector *) ((kmldom::Style *) x));
}
static void *_p_kmldom__NetworkLinkTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *) ((kmldom::NetworkLink *) x));
}
static void *_p_kmldom__UpdateTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::Update *) x));
}
static void *_p_kmldom__GxAnimatedUpdateTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxAnimatedUpdate *) x));
}
static void *_p_kmldom__LocationTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Location *) x));
}
static void *_p_kmldom__SimpleFieldTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::SimpleField *) x));
}
static void *_p_kmldom__PairTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Pair *) x));
}
static void *_p_kmldom__TimeSpanTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::TimePrimitive *) ((kmldom::TimeSpan *) x));
}
static void *_p_kmldom__GxTimeSpanTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::TimePrimitive *)(kmldom::TimeSpan *) ((kmldom::GxTimeSpan *) x));
}
static void *_p_kmldom__LineStringTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Geometry *) ((kmldom::LineString *) x));
}
static void *_p_kmldom__TimePrimitiveTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::TimePrimitive *) x));
}
static void *_p_kmldom__GxTourPrimitiveTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::GxTourPrimitive *) x));
}
static void *_p_kmldom__ColorStyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::SubStyle *) ((kmldom::ColorStyle *) x));
}
static void *_p_kmldom__GxLatLonQuadTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::GxLatLonQuad *) x));
}
static void *_p_kmldom__ImagePyramidTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::ImagePyramid *) x));
}
static void *_p_kmldom__RotationXYTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Vec2 *) ((kmldom::RotationXY *) x));
}
static void *_p_kmldom__TimeStampTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::TimePrimitive *) ((kmldom::TimeStamp *) x));
}
static void *_p_kmldom__GxTimeStampTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::TimePrimitive *)(kmldom::TimeStamp *) ((kmldom::GxTimeStamp *) x));
}
static void *_p_kmldom__BasicLinkTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::BasicLink *) x));
}
static void *_p_kmldom__LabelStyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::LabelStyle *) x));
}
static void *_p_kmldom__MultiGeometryTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Geometry *) ((kmldom::MultiGeometry *) x));
}
static void *_p_kmldom__GeometryTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Geometry *) x));
}
static void *_p_kmldom__LatLonBoxTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::AbstractLatLonBox *) ((kmldom::LatLonBox *) x));
}
static void *_p_kmldom__AbstractLatLonBoxTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::AbstractLatLonBox *) x));
}
static void *_p_kmldom__GxSoundCueTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxSoundCue *) x));
}
static void *_p_kmldom__PointTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Geometry *) ((kmldom::Point *) x));
}
static void *_p_kmldom__SchemaTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Schema *) x));
}
static void *_p_kmldom__PolyStyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::PolyStyle *) x));
}
static void *_p_kmldom__ChangeTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::UpdateOperation *) ((kmldom::Change *) x));
}
static void *_p_kmldom__GxTourTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *) ((kmldom::GxTour *) x));
}
static void *_p_kmldom__CreateTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::UpdateOperation *) ((kmldom::Create *) x));
}
static void *_p_kmldom__ObjectTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::Object *) x));
}
static void *_p_kmldom__Vec2To_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::Vec2 *) x));
}
static void *_p_kmldom__GxWaitTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxWait *) x));
}
static void *_p_kmldom__ModelTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Geometry *) ((kmldom::Model *) x));
}
static void *_p_kmldom__SimpleDataTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *) ((kmldom::SimpleData *) x));
}
static void *_p_kmldom__LineStyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::LineStyle *) x));
}
static void *_p_kmldom__ListStyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::SubStyle *) ((kmldom::ListStyle *) x));
}
static void *_p_kmldom__PlacemarkTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *) ((kmldom::Placemark *) x));
}
static void *_p_kmldom__FolderTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *)(kmldom::Container *) ((kmldom::Folder *) x));
}
static void *_p_kmldom__LodTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Lod *) x));
}
static void *_p_kmldom__LinearRingTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Geometry *) ((kmldom::LinearRing *) x));
}
static void *_p_kmldom__HotSpotTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Vec2 *) ((kmldom::HotSpot *) x));
}
static void *_p_kmldom__PhotoOverlayTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *)(kmldom::Overlay *) ((kmldom::PhotoOverlay *) x));
}
static void *_p_kmldom__GroundOverlayTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *)(kmldom::Overlay *) ((kmldom::GroundOverlay *) x));
}
static void *_p_kmldom__OverlayTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *) ((kmldom::Overlay *) x));
}
static void *_p_kmldom__ScreenOverlayTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::Feature *)(kmldom::Overlay *) ((kmldom::ScreenOverlay *) x));
}
static void *_p_kmldom__GxPlaylistTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::GxPlaylist *) x));
}
static void *_p_kmldom__ScaleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Scale *) x));
}
static void *_p_kmldom__ResourceMapTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::ResourceMap *) x));
}
static void *_p_kmldom__StyleSelectorTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::StyleSelector *) x));
}
static void *_p_kmldom__LatLonAltBoxTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::AbstractLatLonBox *) ((kmldom::LatLonAltBox *) x));
}
static void *_p_kmldom__IconStyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::IconStyle *) x));
}
static void *_p_kmldom__BalloonStyleTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::SubStyle *) ((kmldom::BalloonStyle *) x));
}
static void *_p_kmldom__LinkTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *)(kmldom::BasicLink *) ((kmldom::Link *) x));
}
static void *_p_kmldom__ElementTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *)  ((kmldom::Element *) x));
}
static void *_p_kmldom__ScreenXYTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Vec2 *) ((kmldom::ScreenXY *) x));
}
static void *_p_kmldom__FeatureTo_p_kmlbase__XmlElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmlbase::XmlElement *) (kmldom::Element *)(kmldom::Object *) ((kmldom::Feature *) x));
}
static void *_p_kmldom__DocumentTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *)(kmldom::Container *) ((kmldom::Document *) x));
}
static void *_p_kmldom__OrientationTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Orientation *) x));
}
static void *_p_kmldom__LinkSnippetTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::SnippetCommon *) ((kmldom::LinkSnippet *) x));
}
static void *_p_kmldom__SnippetTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::SnippetCommon *) ((kmldom::Snippet *) x));
}
static void *_p_kmldom__PolygonTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Geometry *) ((kmldom::Polygon *) x));
}
static void *_p_kmldom__GxFlyToTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxFlyTo *) x));
}
static void *_p_kmldom__UpdateOperationTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::UpdateOperation *) x));
}
static void *_p_kmldom__AbstractViewTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::AbstractView *) x));
}
static void *_p_kmldom__CoordinatesTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::Coordinates *) x));
}
static void *_p_kmldom__CameraTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::AbstractView *) ((kmldom::Camera *) x));
}
static void *_p_kmldom__AtomAuthorTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::AtomAuthor *) x));
}
static void *_p_kmldom__IconStyleIconTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::BasicLink *) ((kmldom::IconStyleIcon *) x));
}
static void *_p_kmldom__StyleMapTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::StyleSelector *) ((kmldom::StyleMap *) x));
}
static void *_p_kmldom__ExtendedDataTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::ExtendedData *) x));
}
static void *_p_kmldom__InnerBoundaryIsTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::InnerBoundaryIs *) x));
}
static void *_p_kmldom__OuterBoundaryIsTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::OuterBoundaryIs *) x));
}
static void *_p_kmldom__ItemIconTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::ItemIcon *) x));
}
static void *_p_kmldom__KmlTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::Kml *) x));
}
static void *_p_kmldom__ContainerTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *) ((kmldom::Container *) x));
}
static void *_p_kmldom__SubStyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::SubStyle *) x));
}
static void *_p_kmldom__OverlayXYTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Vec2 *) ((kmldom::OverlayXY *) x));
}
static void *_p_kmldom__SizeTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Vec2 *) ((kmldom::Size *) x));
}
static void *_p_kmldom__LookAtTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::AbstractView *) ((kmldom::LookAt *) x));
}
static void *_p_kmldom__ViewVolumeTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::ViewVolume *) x));
}
static void *_p_kmldom__NetworkLinkControlTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::NetworkLinkControl *) x));
}
static void *_p_kmldom__GxTourControlTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxTourControl *) x));
}
static void *_p_kmldom__DeleteTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::UpdateOperation *) ((kmldom::Delete *) x));
}
static void *_p_kmldom__IconTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::BasicLink *) ((kmldom::Icon *) x));
}
static void *_p_kmldom__DataTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Data *) x));
}
static void *_p_kmldom__RegionTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Region *) x));
}
static void *_p_kmldom__AtomLinkTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::AtomLink *) x));
}
static void *_p_kmldom__SchemaDataTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::SchemaData *) x));
}
static void *_p_kmldom__SnippetCommonTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::SnippetCommon *) x));
}
static void *_p_kmldom__AliasTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Alias *) x));
}
static void *_p_kmldom__StyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::StyleSelector *) ((kmldom::Style *) x));
}
static void *_p_kmldom__NetworkLinkTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *) ((kmldom::NetworkLink *) x));
}
static void *_p_kmldom__UpdateTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::Update *) x));
}
static void *_p_kmldom__GxAnimatedUpdateTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxAnimatedUpdate *) x));
}
static void *_p_kmldom__LocationTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Location *) x));
}
static void *_p_kmldom__SimpleFieldTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::SimpleField *) x));
}
static void *_p_kmldom__PairTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Pair *) x));
}
static void *_p_kmldom__TimeSpanTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::TimePrimitive *) ((kmldom::TimeSpan *) x));
}
static void *_p_kmldom__GxTimeSpanTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::TimePrimitive *)(kmldom::TimeSpan *) ((kmldom::GxTimeSpan *) x));
}
static void *_p_kmldom__LineStringTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Geometry *) ((kmldom::LineString *) x));
}
static void *_p_kmldom__TimePrimitiveTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::TimePrimitive *) x));
}
static void *_p_kmldom__GxTourPrimitiveTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::GxTourPrimitive *) x));
}
static void *_p_kmldom__ColorStyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::SubStyle *) ((kmldom::ColorStyle *) x));
}
static void *_p_kmldom__GxLatLonQuadTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::GxLatLonQuad *) x));
}
static void *_p_kmldom__ImagePyramidTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::ImagePyramid *) x));
}
static void *_p_kmldom__RotationXYTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Vec2 *) ((kmldom::RotationXY *) x));
}
static void *_p_kmldom__TimeStampTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::TimePrimitive *) ((kmldom::TimeStamp *) x));
}
static void *_p_kmldom__GxTimeStampTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::TimePrimitive *)(kmldom::TimeStamp *) ((kmldom::GxTimeStamp *) x));
}
static void *_p_kmldom__BasicLinkTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::BasicLink *) x));
}
static void *_p_kmldom__LabelStyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::LabelStyle *) x));
}
static void *_p_kmldom__MultiGeometryTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Geometry *) ((kmldom::MultiGeometry *) x));
}
static void *_p_kmldom__GeometryTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Geometry *) x));
}
static void *_p_kmldom__LatLonBoxTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::AbstractLatLonBox *) ((kmldom::LatLonBox *) x));
}
static void *_p_kmldom__AbstractLatLonBoxTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::AbstractLatLonBox *) x));
}
static void *_p_kmldom__GxSoundCueTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxSoundCue *) x));
}
static void *_p_kmldom__PointTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Geometry *) ((kmldom::Point *) x));
}
static void *_p_kmldom__SchemaTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Schema *) x));
}
static void *_p_kmldom__PolyStyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::PolyStyle *) x));
}
static void *_p_kmldom__ChangeTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::UpdateOperation *) ((kmldom::Change *) x));
}
static void *_p_kmldom__GxTourTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *) ((kmldom::GxTour *) x));
}
static void *_p_kmldom__CreateTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::UpdateOperation *) ((kmldom::Create *) x));
}
static void *_p_kmldom__ObjectTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::Object *) x));
}
static void *_p_kmldom__Vec2To_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::Vec2 *) x));
}
static void *_p_kmldom__GxWaitTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::GxTourPrimitive *) ((kmldom::GxWait *) x));
}
static void *_p_kmldom__ModelTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Geometry *) ((kmldom::Model *) x));
}
static void *_p_kmldom__SimpleDataTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *)  ((kmldom::SimpleData *) x));
}
static void *_p_kmldom__LineStyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::LineStyle *) x));
}
static void *_p_kmldom__ListStyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::SubStyle *) ((kmldom::ListStyle *) x));
}
static void *_p_kmldom__PlacemarkTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *) ((kmldom::Placemark *) x));
}
static void *_p_kmldom__FolderTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *)(kmldom::Container *) ((kmldom::Folder *) x));
}
static void *_p_kmldom__LodTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Lod *) x));
}
static void *_p_kmldom__LinearRingTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Geometry *) ((kmldom::LinearRing *) x));
}
static void *_p_kmldom__HotSpotTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Vec2 *) ((kmldom::HotSpot *) x));
}
static void *_p_kmldom__ScreenOverlayTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *)(kmldom::Overlay *) ((kmldom::ScreenOverlay *) x));
}
static void *_p_kmldom__PhotoOverlayTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *)(kmldom::Overlay *) ((kmldom::PhotoOverlay *) x));
}
static void *_p_kmldom__GroundOverlayTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *)(kmldom::Overlay *) ((kmldom::GroundOverlay *) x));
}
static void *_p_kmldom__OverlayTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::Feature *) ((kmldom::Overlay *) x));
}
static void *_p_kmldom__GxPlaylistTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::GxPlaylist *) x));
}
static void *_p_kmldom__ScaleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Scale *) x));
}
static void *_p_kmldom__ResourceMapTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::ResourceMap *) x));
}
static void *_p_kmldom__StyleSelectorTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::StyleSelector *) x));
}
static void *_p_kmldom__LatLonAltBoxTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::AbstractLatLonBox *) ((kmldom::LatLonAltBox *) x));
}
static void *_p_kmldom__IconStyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::IconStyle *) x));
}
static void *_p_kmldom__BalloonStyleTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::SubStyle *) ((kmldom::BalloonStyle *) x));
}
static void *_p_kmldom__LinkTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *)(kmldom::BasicLink *) ((kmldom::Link *) x));
}
static void *_p_kmldom__ScreenXYTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Vec2 *) ((kmldom::ScreenXY *) x));
}
static void *_p_kmldom__FeatureTo_p_kmldom__Element(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Element *) (kmldom::Object *) ((kmldom::Feature *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__IconStyle_tTo_p_boost__intrusive_ptrT_kmldom__ColorStyle_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::ColorStyle >(*(boost::intrusive_ptr< kmldom::IconStyle > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__LabelStyle_tTo_p_boost__intrusive_ptrT_kmldom__ColorStyle_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::ColorStyle >(*(boost::intrusive_ptr< kmldom::LabelStyle > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__LineStyle_tTo_p_boost__intrusive_ptrT_kmldom__ColorStyle_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::ColorStyle >(*(boost::intrusive_ptr< kmldom::LineStyle > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__PolyStyle_tTo_p_boost__intrusive_ptrT_kmldom__ColorStyle_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::ColorStyle >(*(boost::intrusive_ptr< kmldom::PolyStyle > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ColorStyle_tTo_p_boost__intrusive_ptrT_kmldom__SubStyle_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::SubStyle >(*(boost::intrusive_ptr< kmldom::ColorStyle > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__BalloonStyle_tTo_p_boost__intrusive_ptrT_kmldom__SubStyle_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::SubStyle >(*(boost::intrusive_ptr< kmldom::BalloonStyle > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ListStyle_tTo_p_boost__intrusive_ptrT_kmldom__SubStyle_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::SubStyle >(*(boost::intrusive_ptr< kmldom::ListStyle > *)x);
  }
static void *_p_kmldom__LinkTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::BasicLink *) ((kmldom::Link *) x));
}
static void *_p_kmldom__FeatureTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Feature *) x));
}
static void *_p_kmldom__GxAnimatedUpdateTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::GxTourPrimitive *) ((kmldom::GxAnimatedUpdate *) x));
}
static void *_p_kmldom__LineStyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::LineStyle *) x));
}
static void *_p_kmldom__IconTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::BasicLink *) ((kmldom::Icon *) x));
}
static void *_p_kmldom__AbstractViewTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::AbstractView *) x));
}
static void *_p_kmldom__LinearRingTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Geometry *) ((kmldom::LinearRing *) x));
}
static void *_p_kmldom__SubStyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::SubStyle *) x));
}
static void *_p_kmldom__LookAtTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::AbstractView *) ((kmldom::LookAt *) x));
}
static void *_p_kmldom__LocationTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Location *) x));
}
static void *_p_kmldom__DocumentTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *)(kmldom::Container *) ((kmldom::Document *) x));
}
static void *_p_kmldom__TimeSpanTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::TimePrimitive *) ((kmldom::TimeSpan *) x));
}
static void *_p_kmldom__GxTimeSpanTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::TimePrimitive *)(kmldom::TimeSpan *) ((kmldom::GxTimeSpan *) x));
}
static void *_p_kmldom__GxTourControlTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::GxTourPrimitive *) ((kmldom::GxTourControl *) x));
}
static void *_p_kmldom__SchemaDataTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::SchemaData *) x));
}
static void *_p_kmldom__GxTourTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *) ((kmldom::GxTour *) x));
}
static void *_p_kmldom__GeometryTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Geometry *) x));
}
static void *_p_kmldom__CameraTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::AbstractView *) ((kmldom::Camera *) x));
}
static void *_p_kmldom__SchemaTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Schema *) x));
}
static void *_p_kmldom__MultiGeometryTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Geometry *) ((kmldom::MultiGeometry *) x));
}
static void *_p_kmldom__FolderTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *)(kmldom::Container *) ((kmldom::Folder *) x));
}
static void *_p_kmldom__BasicLinkTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::BasicLink *) x));
}
static void *_p_kmldom__NetworkLinkTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *) ((kmldom::NetworkLink *) x));
}
static void *_p_kmldom__ViewVolumeTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::ViewVolume *) x));
}
static void *_p_kmldom__StyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::StyleSelector *) ((kmldom::Style *) x));
}
static void *_p_kmldom__GxWaitTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::GxTourPrimitive *) ((kmldom::GxWait *) x));
}
static void *_p_kmldom__AliasTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Alias *) x));
}
static void *_p_kmldom__GxPlaylistTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::GxPlaylist *) x));
}
static void *_p_kmldom__ItemIconTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::ItemIcon *) x));
}
static void *_p_kmldom__PlacemarkTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *) ((kmldom::Placemark *) x));
}
static void *_p_kmldom__GxLatLonQuadTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::GxLatLonQuad *) x));
}
static void *_p_kmldom__LabelStyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::LabelStyle *) x));
}
static void *_p_kmldom__TimePrimitiveTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::TimePrimitive *) x));
}
static void *_p_kmldom__PolygonTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Geometry *) ((kmldom::Polygon *) x));
}
static void *_p_kmldom__GxTourPrimitiveTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::GxTourPrimitive *) x));
}
static void *_p_kmldom__DataTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Data *) x));
}
static void *_p_kmldom__StyleSelectorTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::StyleSelector *) x));
}
static void *_p_kmldom__IconStyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::IconStyle *) x));
}
static void *_p_kmldom__BalloonStyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::SubStyle *) ((kmldom::BalloonStyle *) x));
}
static void *_p_kmldom__ScaleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Scale *) x));
}
static void *_p_kmldom__ContainerTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *) ((kmldom::Container *) x));
}
static void *_p_kmldom__OrientationTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Orientation *) x));
}
static void *_p_kmldom__TimeStampTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::TimePrimitive *) ((kmldom::TimeStamp *) x));
}
static void *_p_kmldom__GxTimeStampTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::TimePrimitive *)(kmldom::TimeStamp *) ((kmldom::GxTimeStamp *) x));
}
static void *_p_kmldom__LatLonBoxTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::AbstractLatLonBox *) ((kmldom::LatLonBox *) x));
}
static void *_p_kmldom__AbstractLatLonBoxTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::AbstractLatLonBox *) x));
}
static void *_p_kmldom__RegionTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Region *) x));
}
static void *_p_kmldom__LineStringTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Geometry *) ((kmldom::LineString *) x));
}
static void *_p_kmldom__ColorStyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::SubStyle *) ((kmldom::ColorStyle *) x));
}
static void *_p_kmldom__ResourceMapTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::ResourceMap *) x));
}
static void *_p_kmldom__IconStyleIconTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::BasicLink *) ((kmldom::IconStyleIcon *) x));
}
static void *_p_kmldom__LatLonAltBoxTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::AbstractLatLonBox *) ((kmldom::LatLonAltBox *) x));
}
static void *_p_kmldom__GxSoundCueTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::GxTourPrimitive *) ((kmldom::GxSoundCue *) x));
}
static void *_p_kmldom__ListStyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::SubStyle *) ((kmldom::ListStyle *) x));
}
static void *_p_kmldom__PolyStyleTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::SubStyle *)(kmldom::ColorStyle *) ((kmldom::PolyStyle *) x));
}
static void *_p_kmldom__LodTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Lod *) x));
}
static void *_p_kmldom__ModelTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Geometry *) ((kmldom::Model *) x));
}
static void *_p_kmldom__StyleMapTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::StyleSelector *) ((kmldom::StyleMap *) x));
}
static void *_p_kmldom__PointTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Geometry *) ((kmldom::Point *) x));
}
static void *_p_kmldom__ImagePyramidTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::ImagePyramid *) x));
}
static void *_p_kmldom__PairTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *)  ((kmldom::Pair *) x));
}
static void *_p_kmldom__GxFlyToTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::GxTourPrimitive *) ((kmldom::GxFlyTo *) x));
}
static void *_p_kmldom__GroundOverlayTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *)(kmldom::Overlay *) ((kmldom::GroundOverlay *) x));
}
static void *_p_kmldom__OverlayTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *) ((kmldom::Overlay *) x));
}
static void *_p_kmldom__PhotoOverlayTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *)(kmldom::Overlay *) ((kmldom::PhotoOverlay *) x));
}
static void *_p_kmldom__ScreenOverlayTo_p_kmldom__Object(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Object *) (kmldom::Feature *)(kmldom::Overlay *) ((kmldom::ScreenOverlay *) x));
}
static void *_p_kmldom__ChangeTo_p_kmldom__UpdateOperation(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::UpdateOperation *)  ((kmldom::Change *) x));
}
static void *_p_kmldom__CreateTo_p_kmldom__UpdateOperation(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::UpdateOperation *)  ((kmldom::Create *) x));
}
static void *_p_kmldom__DeleteTo_p_kmldom__UpdateOperation(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::UpdateOperation *)  ((kmldom::Delete *) x));
}
static void *_p_kmldom__StyleTo_p_kmldom__StyleSelector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::StyleSelector *)  ((kmldom::Style *) x));
}
static void *_p_kmldom__StyleMapTo_p_kmldom__StyleSelector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::StyleSelector *)  ((kmldom::StyleMap *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__GxTimeSpan_tTo_p_boost__intrusive_ptrT_kmldom__TimeSpan_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::TimeSpan >(*(boost::intrusive_ptr< kmldom::GxTimeSpan > *)x);
  }
static void *_p_kmldom__GxTimeSpanTo_p_kmldom__TimeSpan(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::TimeSpan *)  ((kmldom::GxTimeSpan *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__Document_tTo_p_boost__intrusive_ptrT_kmldom__Container_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Container >(*(boost::intrusive_ptr< kmldom::Document > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Folder_tTo_p_boost__intrusive_ptrT_kmldom__Container_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Container >(*(boost::intrusive_ptr< kmldom::Folder > *)x);
  }
static void *_p_kmldom__FolderTo_p_kmldom__Container(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Container *)  ((kmldom::Folder *) x));
}
static void *_p_kmldom__DocumentTo_p_kmldom__Container(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Container *)  ((kmldom::Document *) x));
}
static void *_p_kmldom__GxTourControlTo_p_kmldom__GxTourPrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::GxTourPrimitive *)  ((kmldom::GxTourControl *) x));
}
static void *_p_kmldom__GxWaitTo_p_kmldom__GxTourPrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::GxTourPrimitive *)  ((kmldom::GxWait *) x));
}
static void *_p_kmldom__GxSoundCueTo_p_kmldom__GxTourPrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::GxTourPrimitive *)  ((kmldom::GxSoundCue *) x));
}
static void *_p_kmldom__GxAnimatedUpdateTo_p_kmldom__GxTourPrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::GxTourPrimitive *)  ((kmldom::GxAnimatedUpdate *) x));
}
static void *_p_kmldom__GxFlyToTo_p_kmldom__GxTourPrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::GxTourPrimitive *)  ((kmldom::GxFlyTo *) x));
}
static void *_p_kmldom__TimeSpanTo_p_kmldom__TimePrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::TimePrimitive *)  ((kmldom::TimeSpan *) x));
}
static void *_p_kmldom__GxTimeSpanTo_p_kmldom__TimePrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::TimePrimitive *) (kmldom::TimeSpan *) ((kmldom::GxTimeSpan *) x));
}
static void *_p_kmldom__TimeStampTo_p_kmldom__TimePrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::TimePrimitive *)  ((kmldom::TimeStamp *) x));
}
static void *_p_kmldom__GxTimeStampTo_p_kmldom__TimePrimitive(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::TimePrimitive *) (kmldom::TimeStamp *) ((kmldom::GxTimeStamp *) x));
}
static void *_p_kmldom__PolyStyleTo_p_kmldom__ColorStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::ColorStyle *)  ((kmldom::PolyStyle *) x));
}
static void *_p_kmldom__LabelStyleTo_p_kmldom__ColorStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::ColorStyle *)  ((kmldom::LabelStyle *) x));
}
static void *_p_kmldom__LineStyleTo_p_kmldom__ColorStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::ColorStyle *)  ((kmldom::LineStyle *) x));
}
static void *_p_kmldom__IconStyleTo_p_kmldom__ColorStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::ColorStyle *)  ((kmldom::IconStyle *) x));
}
static void *_p_kmldom__LatLonAltBoxTo_p_kmldom__AbstractLatLonBox(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::AbstractLatLonBox *)  ((kmldom::LatLonAltBox *) x));
}
static void *_p_kmldom__LatLonBoxTo_p_kmldom__AbstractLatLonBox(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::AbstractLatLonBox *)  ((kmldom::LatLonBox *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_tTo_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::AbstractLatLonBox >(*(boost::intrusive_ptr< kmldom::LatLonAltBox > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__LatLonBox_tTo_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::AbstractLatLonBox >(*(boost::intrusive_ptr< kmldom::LatLonBox > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__NetworkLink_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Feature >(*(boost::intrusive_ptr< kmldom::NetworkLink > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Placemark_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Feature >(*(boost::intrusive_ptr< kmldom::Placemark > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Overlay_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Feature >(*(boost::intrusive_ptr< kmldom::Overlay > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Container_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Feature >(*(boost::intrusive_ptr< kmldom::Container > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__GxTour_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Feature >(*(boost::intrusive_ptr< kmldom::GxTour > *)x);
  }
static void *_p_kmldom__RotationXYTo_p_kmldom__Vec2(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Vec2 *)  ((kmldom::RotationXY *) x));
}
static void *_p_kmldom__OverlayXYTo_p_kmldom__Vec2(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Vec2 *)  ((kmldom::OverlayXY *) x));
}
static void *_p_kmldom__HotSpotTo_p_kmldom__Vec2(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Vec2 *)  ((kmldom::HotSpot *) x));
}
static void *_p_kmldom__SizeTo_p_kmldom__Vec2(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Vec2 *)  ((kmldom::Size *) x));
}
static void *_p_kmldom__ScreenXYTo_p_kmldom__Vec2(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Vec2 *)  ((kmldom::ScreenXY *) x));
}
static void *_p_kmldom__GxTimeStampTo_p_kmldom__TimeStamp(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::TimeStamp *)  ((kmldom::GxTimeStamp *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__SubStyle_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::SubStyle > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Region_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Region > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__TimePrimitive_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::TimePrimitive > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__BasicLink_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::BasicLink > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::GxTourPrimitive > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__GxPlaylist_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::GxPlaylist > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Schema_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Schema > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Geometry_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Geometry > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ImagePyramid_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::ImagePyramid > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Feature_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Feature > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Pair_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Pair > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Scale_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Scale > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ItemIcon_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::ItemIcon > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Lod_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Lod > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Alias_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Alias > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::AbstractLatLonBox > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ResourceMap_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::ResourceMap > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__SchemaData_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::SchemaData > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Location_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Location > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Orientation_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Orientation > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__AbstractView_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::AbstractView > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Data_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::Data > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ViewVolume_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::ViewVolume > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::GxLatLonQuad > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__StyleSelector_tTo_p_boost__intrusive_ptrT_kmldom__Object_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Object >(*(boost::intrusive_ptr< kmldom::StyleSelector > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Size_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Vec2 >(*(boost::intrusive_ptr< kmldom::Size > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__RotationXY_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Vec2 >(*(boost::intrusive_ptr< kmldom::RotationXY > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ScreenXY_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Vec2 >(*(boost::intrusive_ptr< kmldom::ScreenXY > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__HotSpot_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Vec2 >(*(boost::intrusive_ptr< kmldom::HotSpot > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__OverlayXY_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Vec2 >(*(boost::intrusive_ptr< kmldom::OverlayXY > *)x);
  }
static void *_p_kmldom__SnippetTo_p_kmldom__SnippetCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SnippetCommon *)  ((kmldom::Snippet *) x));
}
static void *_p_kmldom__LinkSnippetTo_p_kmldom__SnippetCommon(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SnippetCommon *)  ((kmldom::LinkSnippet *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__GxTimeStamp_tTo_p_boost__intrusive_ptrT_kmldom__TimeStamp_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::TimeStamp >(*(boost::intrusive_ptr< kmldom::GxTimeStamp > *)x);
  }
static void *_p_kmldom__PolyStyleTo_p_kmldom__SubStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SubStyle *) (kmldom::ColorStyle *) ((kmldom::PolyStyle *) x));
}
static void *_p_kmldom__LabelStyleTo_p_kmldom__SubStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SubStyle *) (kmldom::ColorStyle *) ((kmldom::LabelStyle *) x));
}
static void *_p_kmldom__LineStyleTo_p_kmldom__SubStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SubStyle *) (kmldom::ColorStyle *) ((kmldom::LineStyle *) x));
}
static void *_p_kmldom__ListStyleTo_p_kmldom__SubStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SubStyle *)  ((kmldom::ListStyle *) x));
}
static void *_p_kmldom__BalloonStyleTo_p_kmldom__SubStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SubStyle *)  ((kmldom::BalloonStyle *) x));
}
static void *_p_kmldom__IconStyleTo_p_kmldom__SubStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SubStyle *) (kmldom::ColorStyle *) ((kmldom::IconStyle *) x));
}
static void *_p_kmldom__ColorStyleTo_p_kmldom__SubStyle(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::SubStyle *)  ((kmldom::ColorStyle *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__GxTourControl_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::GxTourPrimitive >(*(boost::intrusive_ptr< kmldom::GxTourControl > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::GxTourPrimitive >(*(boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__GxSoundCue_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::GxTourPrimitive >(*(boost::intrusive_ptr< kmldom::GxSoundCue > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__GxWait_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::GxTourPrimitive >(*(boost::intrusive_ptr< kmldom::GxWait > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__GxFlyTo_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::GxTourPrimitive >(*(boost::intrusive_ptr< kmldom::GxFlyTo > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__TimeStamp_tTo_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::TimePrimitive >(*(boost::intrusive_ptr< kmldom::TimeStamp > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__TimeSpan_tTo_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::TimePrimitive >(*(boost::intrusive_ptr< kmldom::TimeSpan > *)x);
  }
static void *_p_kmldom__LookAtTo_p_kmldom__AbstractView(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::AbstractView *)  ((kmldom::LookAt *) x));
}
static void *_p_kmldom__CameraTo_p_kmldom__AbstractView(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::AbstractView *)  ((kmldom::Camera *) x));
}
static void *_p_kmldom__GroundOverlayTo_p_kmldom__Overlay(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Overlay *)  ((kmldom::GroundOverlay *) x));
}
static void *_p_kmldom__PhotoOverlayTo_p_kmldom__Overlay(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Overlay *)  ((kmldom::PhotoOverlay *) x));
}
static void *_p_kmldom__ScreenOverlayTo_p_kmldom__Overlay(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((kmldom::Overlay *)  ((kmldom::ScreenOverlay *) x));
}
static void *_p_boost__intrusive_ptrT_kmldom__GroundOverlay_tTo_p_boost__intrusive_ptrT_kmldom__Overlay_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Overlay >(*(boost::intrusive_ptr< kmldom::GroundOverlay > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_tTo_p_boost__intrusive_ptrT_kmldom__Overlay_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Overlay >(*(boost::intrusive_ptr< kmldom::PhotoOverlay > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_tTo_p_boost__intrusive_ptrT_kmldom__Overlay_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Overlay >(*(boost::intrusive_ptr< kmldom::ScreenOverlay > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Model_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Geometry >(*(boost::intrusive_ptr< kmldom::Model > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__LinearRing_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Geometry >(*(boost::intrusive_ptr< kmldom::LinearRing > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Point_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Geometry >(*(boost::intrusive_ptr< kmldom::Point > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__LineString_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Geometry >(*(boost::intrusive_ptr< kmldom::LineString > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__Polygon_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Geometry >(*(boost::intrusive_ptr< kmldom::Polygon > *)x);
  }
static void *_p_boost__intrusive_ptrT_kmldom__MultiGeometry_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t(void *x, int *newmemory) {
  *newmemory = SWIG_CAST_NEW_MEMORY;
  return (void *) new boost::intrusive_ptr< kmldom::Geometry >(*(boost::intrusive_ptr< kmldom::MultiGeometry > *)x);
  }
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmlbase__Referent_t = {"_p_boost__intrusive_ptrT_kmlbase__Referent_t", "boost::intrusive_ptr< kmlbase::Referent > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmlbase__XmlElement_t = {"_p_boost__intrusive_ptrT_kmlbase__XmlElement_t", "boost::intrusive_ptr< kmlbase::XmlElement > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t = {"_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t", "kmldom::AbstractLatLonBoxPtr *|boost::intrusive_ptr< kmldom::AbstractLatLonBox > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AbstractLink_t = {"_p_boost__intrusive_ptrT_kmldom__AbstractLink_t", "kmldom::AbstractLinkPtr *|boost::intrusive_ptr< kmldom::AbstractLink > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AbstractView_t = {"_p_boost__intrusive_ptrT_kmldom__AbstractView_t", "boost::intrusive_ptr< kmldom::AbstractView > *|kmldom::AbstractViewPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Alias_t = {"_p_boost__intrusive_ptrT_kmldom__Alias_t", "boost::intrusive_ptr< kmldom::Alias > *|kmldom::AliasPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AtomAuthor_t = {"_p_boost__intrusive_ptrT_kmldom__AtomAuthor_t", "boost::intrusive_ptr< kmldom::AtomAuthor > *|kmldom::AtomAuthorPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AtomCategory_t = {"_p_boost__intrusive_ptrT_kmldom__AtomCategory_t", "kmldom::AtomCategoryPtr *|boost::intrusive_ptr< kmldom::AtomCategory > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AtomContent_t = {"_p_boost__intrusive_ptrT_kmldom__AtomContent_t", "kmldom::AtomContentPtr *|boost::intrusive_ptr< kmldom::AtomContent > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AtomEntry_t = {"_p_boost__intrusive_ptrT_kmldom__AtomEntry_t", "boost::intrusive_ptr< kmldom::AtomEntry > *|kmldom::AtomEntryPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AtomFeed_t = {"_p_boost__intrusive_ptrT_kmldom__AtomFeed_t", "boost::intrusive_ptr< kmldom::AtomFeed > *|kmldom::AtomFeedPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__AtomLink_t = {"_p_boost__intrusive_ptrT_kmldom__AtomLink_t", "kmldom::AtomLinkPtr *|boost::intrusive_ptr< kmldom::AtomLink > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t = {"_p_boost__intrusive_ptrT_kmldom__BalloonStyle_t", "boost::intrusive_ptr< kmldom::BalloonStyle > *|kmldom::BalloonStylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__BasicLink_t = {"_p_boost__intrusive_ptrT_kmldom__BasicLink_t", "kmldom::BasicLinkPtr *|boost::intrusive_ptr< kmldom::BasicLink > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Camera_t = {"_p_boost__intrusive_ptrT_kmldom__Camera_t", "boost::intrusive_ptr< kmldom::Camera > *|kmldom::CameraPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Change_t = {"_p_boost__intrusive_ptrT_kmldom__Change_t", "boost::intrusive_ptr< kmldom::Change > *|kmldom::ChangePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ColorStyle_t = {"_p_boost__intrusive_ptrT_kmldom__ColorStyle_t", "boost::intrusive_ptr< kmldom::ColorStyle > *|kmldom::ColorStylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Container_t = {"_p_boost__intrusive_ptrT_kmldom__Container_t", "boost::intrusive_ptr< kmldom::Container > *|kmldom::ContainerPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Coordinates_t = {"_p_boost__intrusive_ptrT_kmldom__Coordinates_t", "kmldom::CoordinatesPtr *|boost::intrusive_ptr< kmldom::Coordinates > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Create_t = {"_p_boost__intrusive_ptrT_kmldom__Create_t", "boost::intrusive_ptr< kmldom::Create > *|kmldom::CreatePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Data_t = {"_p_boost__intrusive_ptrT_kmldom__Data_t", "kmldom::DataPtr *|boost::intrusive_ptr< kmldom::Data > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Delete_t = {"_p_boost__intrusive_ptrT_kmldom__Delete_t", "boost::intrusive_ptr< kmldom::Delete > *|kmldom::DeletePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Document_t = {"_p_boost__intrusive_ptrT_kmldom__Document_t", "kmldom::DocumentPtr *|boost::intrusive_ptr< kmldom::Document > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Element_t = {"_p_boost__intrusive_ptrT_kmldom__Element_t", "kmldom::ElementPtr *|boost::intrusive_ptr< kmldom::Element > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ExtendedData_t = {"_p_boost__intrusive_ptrT_kmldom__ExtendedData_t", "kmldom::ExtendedDataPtr *|boost::intrusive_ptr< kmldom::ExtendedData > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Feature_t = {"_p_boost__intrusive_ptrT_kmldom__Feature_t", "boost::intrusive_ptr< kmldom::Feature > *|kmldom::FeaturePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Field_t = {"_p_boost__intrusive_ptrT_kmldom__Field_t", "boost::intrusive_ptr< kmldom::Field > *|kmldom::FieldPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Folder_t = {"_p_boost__intrusive_ptrT_kmldom__Folder_t", "boost::intrusive_ptr< kmldom::Folder > *|kmldom::FolderPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Geometry_t = {"_p_boost__intrusive_ptrT_kmldom__Geometry_t", "boost::intrusive_ptr< kmldom::Geometry > *|kmldom::GeometryPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t = {"_p_boost__intrusive_ptrT_kmldom__GroundOverlay_t", "boost::intrusive_ptr< kmldom::GroundOverlay > *|kmldom::GroundOverlayPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t = {"_p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t", "boost::intrusive_ptr< kmldom::GxAnimatedUpdate > *|kmldom::GxAnimatedUpdatePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t = {"_p_boost__intrusive_ptrT_kmldom__GxFlyTo_t", "kmldom::GxFlyToPtr *|boost::intrusive_ptr< kmldom::GxFlyTo > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t = {"_p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t", "boost::intrusive_ptr< kmldom::GxLatLonQuad > *|kmldom::GxLatLonQuadPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t = {"_p_boost__intrusive_ptrT_kmldom__GxPlaylist_t", "boost::intrusive_ptr< kmldom::GxPlaylist > *|kmldom::GxPlaylistPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t = {"_p_boost__intrusive_ptrT_kmldom__GxSoundCue_t", "boost::intrusive_ptr< kmldom::GxSoundCue > *|kmldom::GxSoundCuePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t = {"_p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t", "kmldom::GxTimeSpanPtr *|boost::intrusive_ptr< kmldom::GxTimeSpan > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t = {"_p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t", "boost::intrusive_ptr< kmldom::GxTimeStamp > *|kmldom::GxTimeStampPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxTourControl_t = {"_p_boost__intrusive_ptrT_kmldom__GxTourControl_t", "kmldom::GxTourControlPtr *|boost::intrusive_ptr< kmldom::GxTourControl > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t = {"_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t", "boost::intrusive_ptr< kmldom::GxTourPrimitive > *|kmldom::GxTourPrimitivePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxTour_t = {"_p_boost__intrusive_ptrT_kmldom__GxTour_t", "kmldom::GxTourPtr *|boost::intrusive_ptr< kmldom::GxTour > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__GxWait_t = {"_p_boost__intrusive_ptrT_kmldom__GxWait_t", "boost::intrusive_ptr< kmldom::GxWait > *|kmldom::GxWaitPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__HotSpot_t = {"_p_boost__intrusive_ptrT_kmldom__HotSpot_t", "boost::intrusive_ptr< kmldom::HotSpot > *|kmldom::HotSpotPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t = {"_p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t", "kmldom::IconStyleIconPtr *|boost::intrusive_ptr< kmldom::IconStyleIcon > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t = {"_p_boost__intrusive_ptrT_kmldom__IconStyle_t", "boost::intrusive_ptr< kmldom::IconStyle > *|kmldom::IconStylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Icon_t = {"_p_boost__intrusive_ptrT_kmldom__Icon_t", "kmldom::IconPtr *|boost::intrusive_ptr< kmldom::Icon > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t = {"_p_boost__intrusive_ptrT_kmldom__ImagePyramid_t", "boost::intrusive_ptr< kmldom::ImagePyramid > *|kmldom::ImagePyramidPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t = {"_p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t", "boost::intrusive_ptr< kmldom::InnerBoundaryIs > *|kmldom::InnerBoundaryIsPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ItemIcon_t = {"_p_boost__intrusive_ptrT_kmldom__ItemIcon_t", "kmldom::ItemIconPtr *|boost::intrusive_ptr< kmldom::ItemIcon > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Kml_t = {"_p_boost__intrusive_ptrT_kmldom__Kml_t", "boost::intrusive_ptr< kmldom::Kml > *|kmldom::KmlPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t = {"_p_boost__intrusive_ptrT_kmldom__LabelStyle_t", "boost::intrusive_ptr< kmldom::LabelStyle > *|kmldom::LabelStylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t = {"_p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t", "kmldom::LatLonAltBoxPtr *|boost::intrusive_ptr< kmldom::LatLonAltBox > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__LatLonBox_t = {"_p_boost__intrusive_ptrT_kmldom__LatLonBox_t", "kmldom::LatLonBoxPtr *|boost::intrusive_ptr< kmldom::LatLonBox > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__LineString_t = {"_p_boost__intrusive_ptrT_kmldom__LineString_t", "kmldom::LineStringPtr *|boost::intrusive_ptr< kmldom::LineString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t = {"_p_boost__intrusive_ptrT_kmldom__LineStyle_t", "boost::intrusive_ptr< kmldom::LineStyle > *|kmldom::LineStylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__LinearRing_t = {"_p_boost__intrusive_ptrT_kmldom__LinearRing_t", "kmldom::LinearRingPtr *|boost::intrusive_ptr< kmldom::LinearRing > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t = {"_p_boost__intrusive_ptrT_kmldom__LinkSnippet_t", "boost::intrusive_ptr< kmldom::LinkSnippet > *|kmldom::LinkSnippetPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Link_t = {"_p_boost__intrusive_ptrT_kmldom__Link_t", "kmldom::LinkPtr *|boost::intrusive_ptr< kmldom::Link > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ListStyle_t = {"_p_boost__intrusive_ptrT_kmldom__ListStyle_t", "boost::intrusive_ptr< kmldom::ListStyle > *|kmldom::ListStylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Location_t = {"_p_boost__intrusive_ptrT_kmldom__Location_t", "kmldom::LocationPtr *|boost::intrusive_ptr< kmldom::Location > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Lod_t = {"_p_boost__intrusive_ptrT_kmldom__Lod_t", "boost::intrusive_ptr< kmldom::Lod > *|kmldom::LodPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__LookAt_t = {"_p_boost__intrusive_ptrT_kmldom__LookAt_t", "boost::intrusive_ptr< kmldom::LookAt > *|kmldom::LookAtPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Metadata_t = {"_p_boost__intrusive_ptrT_kmldom__Metadata_t", "kmldom::MetadataPtr *|boost::intrusive_ptr< kmldom::Metadata > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Model_t = {"_p_boost__intrusive_ptrT_kmldom__Model_t", "kmldom::ModelPtr *|boost::intrusive_ptr< kmldom::Model > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t = {"_p_boost__intrusive_ptrT_kmldom__MultiGeometry_t", "boost::intrusive_ptr< kmldom::MultiGeometry > *|kmldom::MultiGeometryPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t = {"_p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t", "kmldom::NetworkLinkControlPtr *|boost::intrusive_ptr< kmldom::NetworkLinkControl > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__NetworkLink_t = {"_p_boost__intrusive_ptrT_kmldom__NetworkLink_t", "kmldom::NetworkLinkPtr *|boost::intrusive_ptr< kmldom::NetworkLink > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Object_t = {"_p_boost__intrusive_ptrT_kmldom__Object_t", "boost::intrusive_ptr< kmldom::Object > *|kmldom::ObjectPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Orientation_t = {"_p_boost__intrusive_ptrT_kmldom__Orientation_t", "kmldom::OrientationPtr *|boost::intrusive_ptr< kmldom::Orientation > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t = {"_p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t", "boost::intrusive_ptr< kmldom::OuterBoundaryIs > *|kmldom::OuterBoundaryIsPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__OverlayXY_t = {"_p_boost__intrusive_ptrT_kmldom__OverlayXY_t", "kmldom::OverlayXYPtr *|boost::intrusive_ptr< kmldom::OverlayXY > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Overlay_t = {"_p_boost__intrusive_ptrT_kmldom__Overlay_t", "boost::intrusive_ptr< kmldom::Overlay > *|kmldom::OverlayPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Pair_t = {"_p_boost__intrusive_ptrT_kmldom__Pair_t", "boost::intrusive_ptr< kmldom::Pair > *|kmldom::PairPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t = {"_p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t", "boost::intrusive_ptr< kmldom::PhotoOverlay > *|kmldom::PhotoOverlayPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Placemark_t = {"_p_boost__intrusive_ptrT_kmldom__Placemark_t", "kmldom::PlacemarkPtr *|boost::intrusive_ptr< kmldom::Placemark > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Point_t = {"_p_boost__intrusive_ptrT_kmldom__Point_t", "kmldom::PointPtr *|boost::intrusive_ptr< kmldom::Point > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t = {"_p_boost__intrusive_ptrT_kmldom__PolyStyle_t", "boost::intrusive_ptr< kmldom::PolyStyle > *|kmldom::PolyStylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Polygon_t = {"_p_boost__intrusive_ptrT_kmldom__Polygon_t", "kmldom::PolygonPtr *|boost::intrusive_ptr< kmldom::Polygon > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Region_t = {"_p_boost__intrusive_ptrT_kmldom__Region_t", "kmldom::RegionPtr *|boost::intrusive_ptr< kmldom::Region > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ResourceMap_t = {"_p_boost__intrusive_ptrT_kmldom__ResourceMap_t", "kmldom::ResourceMapPtr *|boost::intrusive_ptr< kmldom::ResourceMap > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__RotationXY_t = {"_p_boost__intrusive_ptrT_kmldom__RotationXY_t", "boost::intrusive_ptr< kmldom::RotationXY > *|kmldom::RotationXYPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Scale_t = {"_p_boost__intrusive_ptrT_kmldom__Scale_t", "boost::intrusive_ptr< kmldom::Scale > *|kmldom::ScalePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__SchemaData_t = {"_p_boost__intrusive_ptrT_kmldom__SchemaData_t", "kmldom::SchemaDataPtr *|boost::intrusive_ptr< kmldom::SchemaData > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Schema_t = {"_p_boost__intrusive_ptrT_kmldom__Schema_t", "kmldom::SchemaPtr *|boost::intrusive_ptr< kmldom::Schema > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t = {"_p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t", "boost::intrusive_ptr< kmldom::ScreenOverlay > *|kmldom::ScreenOverlayPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ScreenXY_t = {"_p_boost__intrusive_ptrT_kmldom__ScreenXY_t", "boost::intrusive_ptr< kmldom::ScreenXY > *|kmldom::ScreenXYPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__SimpleData_t = {"_p_boost__intrusive_ptrT_kmldom__SimpleData_t", "kmldom::SimpleDataPtr *|boost::intrusive_ptr< kmldom::SimpleData > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__SimpleField_t = {"_p_boost__intrusive_ptrT_kmldom__SimpleField_t", "boost::intrusive_ptr< kmldom::SimpleField > *|kmldom::SimpleFieldPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Size_t = {"_p_boost__intrusive_ptrT_kmldom__Size_t", "boost::intrusive_ptr< kmldom::Size > *|kmldom::SizePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__SnippetCommon_t = {"_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t", "boost::intrusive_ptr< kmldom::SnippetCommon > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Snippet_t = {"_p_boost__intrusive_ptrT_kmldom__Snippet_t", "boost::intrusive_ptr< kmldom::Snippet > *|kmldom::SnippetPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__StyleMap_t = {"_p_boost__intrusive_ptrT_kmldom__StyleMap_t", "kmldom::StyleMapPtr *|boost::intrusive_ptr< kmldom::StyleMap > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__StyleSelector_t = {"_p_boost__intrusive_ptrT_kmldom__StyleSelector_t", "boost::intrusive_ptr< kmldom::StyleSelector > *|kmldom::StyleSelectorPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Style_t = {"_p_boost__intrusive_ptrT_kmldom__Style_t", "boost::intrusive_ptr< kmldom::Style > *|kmldom::StylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__SubStyle_t = {"_p_boost__intrusive_ptrT_kmldom__SubStyle_t", "boost::intrusive_ptr< kmldom::SubStyle > *|kmldom::SubStylePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t = {"_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t", "boost::intrusive_ptr< kmldom::TimePrimitive > *|kmldom::TimePrimitivePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__TimeSpan_t = {"_p_boost__intrusive_ptrT_kmldom__TimeSpan_t", "kmldom::TimeSpanPtr *|boost::intrusive_ptr< kmldom::TimeSpan > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__TimeStamp_t = {"_p_boost__intrusive_ptrT_kmldom__TimeStamp_t", "boost::intrusive_ptr< kmldom::TimeStamp > *|kmldom::TimeStampPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__UpdateOperation_t = {"_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t", "kmldom::UpdateOperationPtr *|boost::intrusive_ptr< kmldom::UpdateOperation > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Update_t = {"_p_boost__intrusive_ptrT_kmldom__Update_t", "boost::intrusive_ptr< kmldom::Update > *|kmldom::UpdatePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Url_t = {"_p_boost__intrusive_ptrT_kmldom__Url_t", "boost::intrusive_ptr< kmldom::Url > *|kmldom::UrlPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__Vec2_t = {"_p_boost__intrusive_ptrT_kmldom__Vec2_t", "boost::intrusive_ptr< kmldom::Vec2 > *|kmldom::Vec2Ptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__ViewVolume_t = {"_p_boost__intrusive_ptrT_kmldom__ViewVolume_t", "boost::intrusive_ptr< kmldom::ViewVolume > *|kmldom::ViewVolumePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__XalAddressDetails_t = {"_p_boost__intrusive_ptrT_kmldom__XalAddressDetails_t", "kmldom::XalAddressDetailsPtr *|boost::intrusive_ptr< kmldom::XalAddressDetails > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__XalAdministrativeArea_t = {"_p_boost__intrusive_ptrT_kmldom__XalAdministrativeArea_t", "kmldom::XalAdministrativeAreaPtr *|boost::intrusive_ptr< kmldom::XalAdministrativeArea > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__XalCountry_t = {"_p_boost__intrusive_ptrT_kmldom__XalCountry_t", "boost::intrusive_ptr< kmldom::XalCountry > *|kmldom::XalCountryPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__XalLocality_t = {"_p_boost__intrusive_ptrT_kmldom__XalLocality_t", "boost::intrusive_ptr< kmldom::XalLocality > *|kmldom::XalLocalityPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__XalPostalCode_t = {"_p_boost__intrusive_ptrT_kmldom__XalPostalCode_t", "boost::intrusive_ptr< kmldom::XalPostalCode > *|kmldom::XalPostalCodePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__XalSubAdministrativeArea_t = {"_p_boost__intrusive_ptrT_kmldom__XalSubAdministrativeArea_t", "boost::intrusive_ptr< kmldom::XalSubAdministrativeArea > *|kmldom::XalSubAdministrativeAreaPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__intrusive_ptrT_kmldom__XalThoroughfare_t = {"_p_boost__intrusive_ptrT_kmldom__XalThoroughfare_t", "boost::intrusive_ptr< kmldom::XalThoroughfare > *|kmldom::XalThoroughfarePtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "intptr_t *|int *|int_least32_t *|int_fast32_t *|int32_t *|int_fast16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmlbase__Color32 = {"_p_kmlbase__Color32", "kmlbase::Color32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmlbase__Referent = {"_p_kmlbase__Referent", "kmlbase::Referent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmlbase__Vec3 = {"_p_kmlbase__Vec3", "kmlbase::Vec3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmlbase__XmlElement = {"_p_kmlbase__XmlElement", "kmlbase::XmlElement *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmlbase__XmlElementPtr = {"_p_kmlbase__XmlElementPtr", "kmlbase::XmlElementPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__AbstractLatLonBox = {"_p_kmldom__AbstractLatLonBox", "kmldom::AbstractLatLonBox *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__AbstractView = {"_p_kmldom__AbstractView", "kmldom::AbstractView *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Alias = {"_p_kmldom__Alias", "kmldom::Alias *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__AltitudeModeEnum = {"_p_kmldom__AltitudeModeEnum", "enum kmldom::AltitudeModeEnum *|kmldom::AltitudeModeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__AtomAuthor = {"_p_kmldom__AtomAuthor", "kmldom::AtomAuthor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__AtomLink = {"_p_kmldom__AtomLink", "kmldom::AtomLink *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__BalloonStyle = {"_p_kmldom__BalloonStyle", "kmldom::BalloonStyle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__BasicLink = {"_p_kmldom__BasicLink", "kmldom::BasicLink *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Camera = {"_p_kmldom__Camera", "kmldom::Camera *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Change = {"_p_kmldom__Change", "kmldom::Change *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ColorModeEnum = {"_p_kmldom__ColorModeEnum", "enum kmldom::ColorModeEnum *|kmldom::ColorModeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ColorStyle = {"_p_kmldom__ColorStyle", "kmldom::ColorStyle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Container = {"_p_kmldom__Container", "kmldom::Container *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Coordinates = {"_p_kmldom__Coordinates", "kmldom::Coordinates *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Create = {"_p_kmldom__Create", "kmldom::Create *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Data = {"_p_kmldom__Data", "kmldom::Data *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Delete = {"_p_kmldom__Delete", "kmldom::Delete *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__DisplayModeEnum = {"_p_kmldom__DisplayModeEnum", "enum kmldom::DisplayModeEnum *|kmldom::DisplayModeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Document = {"_p_kmldom__Document", "kmldom::Document *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Element = {"_p_kmldom__Element", "kmldom::Element *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ExtendedData = {"_p_kmldom__ExtendedData", "kmldom::ExtendedData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Feature = {"_p_kmldom__Feature", "kmldom::Feature *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Folder = {"_p_kmldom__Folder", "kmldom::Folder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Geometry = {"_p_kmldom__Geometry", "kmldom::Geometry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GridOriginEnum = {"_p_kmldom__GridOriginEnum", "enum kmldom::GridOriginEnum *|kmldom::GridOriginEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GroundOverlay = {"_p_kmldom__GroundOverlay", "kmldom::GroundOverlay *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxAltitudeModeEnum = {"_p_kmldom__GxAltitudeModeEnum", "enum kmldom::GxAltitudeModeEnum *|kmldom::GxAltitudeModeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxAnimatedUpdate = {"_p_kmldom__GxAnimatedUpdate", "kmldom::GxAnimatedUpdate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxFlyTo = {"_p_kmldom__GxFlyTo", "kmldom::GxFlyTo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxFlyToModeEnum = {"_p_kmldom__GxFlyToModeEnum", "enum kmldom::GxFlyToModeEnum *|kmldom::GxFlyToModeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxLatLonQuad = {"_p_kmldom__GxLatLonQuad", "kmldom::GxLatLonQuad *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxPlayModeEnum = {"_p_kmldom__GxPlayModeEnum", "enum kmldom::GxPlayModeEnum *|kmldom::GxPlayModeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxPlaylist = {"_p_kmldom__GxPlaylist", "kmldom::GxPlaylist *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxSoundCue = {"_p_kmldom__GxSoundCue", "kmldom::GxSoundCue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxTimeSpan = {"_p_kmldom__GxTimeSpan", "kmldom::GxTimeSpan *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxTimeStamp = {"_p_kmldom__GxTimeStamp", "kmldom::GxTimeStamp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxTour = {"_p_kmldom__GxTour", "kmldom::GxTour *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxTourControl = {"_p_kmldom__GxTourControl", "kmldom::GxTourControl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxTourPrimitive = {"_p_kmldom__GxTourPrimitive", "kmldom::GxTourPrimitive *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__GxWait = {"_p_kmldom__GxWait", "kmldom::GxWait *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__HotSpot = {"_p_kmldom__HotSpot", "kmldom::HotSpot *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Icon = {"_p_kmldom__Icon", "kmldom::Icon *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__IconStyle = {"_p_kmldom__IconStyle", "kmldom::IconStyle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__IconStyleIcon = {"_p_kmldom__IconStyleIcon", "kmldom::IconStyleIcon *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ImagePyramid = {"_p_kmldom__ImagePyramid", "kmldom::ImagePyramid *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__InnerBoundaryIs = {"_p_kmldom__InnerBoundaryIs", "kmldom::InnerBoundaryIs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ItemIcon = {"_p_kmldom__ItemIcon", "kmldom::ItemIcon *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ItemIconStateEnum = {"_p_kmldom__ItemIconStateEnum", "enum kmldom::ItemIconStateEnum *|kmldom::ItemIconStateEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Kml = {"_p_kmldom__Kml", "kmldom::Kml *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__KmlDomType = {"_p_kmldom__KmlDomType", "enum kmldom::KmlDomType *|kmldom::KmlDomType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__KmlFactory = {"_p_kmldom__KmlFactory", "kmldom::KmlFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__LabelStyle = {"_p_kmldom__LabelStyle", "kmldom::LabelStyle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__LatLonAltBox = {"_p_kmldom__LatLonAltBox", "kmldom::LatLonAltBox *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__LatLonBox = {"_p_kmldom__LatLonBox", "kmldom::LatLonBox *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__LineString = {"_p_kmldom__LineString", "kmldom::LineString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__LineStyle = {"_p_kmldom__LineStyle", "kmldom::LineStyle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__LinearRing = {"_p_kmldom__LinearRing", "kmldom::LinearRing *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Link = {"_p_kmldom__Link", "kmldom::Link *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__LinkSnippet = {"_p_kmldom__LinkSnippet", "kmldom::LinkSnippet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ListItemTypeEnum = {"_p_kmldom__ListItemTypeEnum", "enum kmldom::ListItemTypeEnum *|kmldom::ListItemTypeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ListStyle = {"_p_kmldom__ListStyle", "kmldom::ListStyle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Location = {"_p_kmldom__Location", "kmldom::Location *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Lod = {"_p_kmldom__Lod", "kmldom::Lod *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__LookAt = {"_p_kmldom__LookAt", "kmldom::LookAt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Model = {"_p_kmldom__Model", "kmldom::Model *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__MultiGeometry = {"_p_kmldom__MultiGeometry", "kmldom::MultiGeometry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__NetworkLink = {"_p_kmldom__NetworkLink", "kmldom::NetworkLink *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__NetworkLinkControl = {"_p_kmldom__NetworkLinkControl", "kmldom::NetworkLinkControl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Object = {"_p_kmldom__Object", "kmldom::Object *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Orientation = {"_p_kmldom__Orientation", "kmldom::Orientation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__OuterBoundaryIs = {"_p_kmldom__OuterBoundaryIs", "kmldom::OuterBoundaryIs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Overlay = {"_p_kmldom__Overlay", "kmldom::Overlay *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__OverlayXY = {"_p_kmldom__OverlayXY", "kmldom::OverlayXY *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Pair = {"_p_kmldom__Pair", "kmldom::Pair *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__PhotoOverlay = {"_p_kmldom__PhotoOverlay", "kmldom::PhotoOverlay *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Placemark = {"_p_kmldom__Placemark", "kmldom::Placemark *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Point = {"_p_kmldom__Point", "kmldom::Point *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__PolyStyle = {"_p_kmldom__PolyStyle", "kmldom::PolyStyle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Polygon = {"_p_kmldom__Polygon", "kmldom::Polygon *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__RefreshModeEnum = {"_p_kmldom__RefreshModeEnum", "enum kmldom::RefreshModeEnum *|kmldom::RefreshModeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Region = {"_p_kmldom__Region", "kmldom::Region *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ResourceMap = {"_p_kmldom__ResourceMap", "kmldom::ResourceMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__RotationXY = {"_p_kmldom__RotationXY", "kmldom::RotationXY *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Scale = {"_p_kmldom__Scale", "kmldom::Scale *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Schema = {"_p_kmldom__Schema", "kmldom::Schema *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__SchemaData = {"_p_kmldom__SchemaData", "kmldom::SchemaData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ScreenOverlay = {"_p_kmldom__ScreenOverlay", "kmldom::ScreenOverlay *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ScreenXY = {"_p_kmldom__ScreenXY", "kmldom::ScreenXY *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ShapeEnum = {"_p_kmldom__ShapeEnum", "enum kmldom::ShapeEnum *|kmldom::ShapeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__SimpleData = {"_p_kmldom__SimpleData", "kmldom::SimpleData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__SimpleField = {"_p_kmldom__SimpleField", "kmldom::SimpleField *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Size = {"_p_kmldom__Size", "kmldom::Size *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Snippet = {"_p_kmldom__Snippet", "kmldom::Snippet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__SnippetCommon = {"_p_kmldom__SnippetCommon", "kmldom::SnippetCommon *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Style = {"_p_kmldom__Style", "kmldom::Style *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__StyleMap = {"_p_kmldom__StyleMap", "kmldom::StyleMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__StyleSelector = {"_p_kmldom__StyleSelector", "kmldom::StyleSelector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__StyleStateEnum = {"_p_kmldom__StyleStateEnum", "enum kmldom::StyleStateEnum *|kmldom::StyleStateEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__SubStyle = {"_p_kmldom__SubStyle", "kmldom::SubStyle *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__TimePrimitive = {"_p_kmldom__TimePrimitive", "kmldom::TimePrimitive *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__TimeSpan = {"_p_kmldom__TimeSpan", "kmldom::TimeSpan *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__TimeStamp = {"_p_kmldom__TimeStamp", "kmldom::TimeStamp *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__UnitsEnum = {"_p_kmldom__UnitsEnum", "enum kmldom::UnitsEnum *|kmldom::UnitsEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Update = {"_p_kmldom__Update", "kmldom::Update *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__UpdateOperation = {"_p_kmldom__UpdateOperation", "kmldom::UpdateOperation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__Vec2 = {"_p_kmldom__Vec2", "kmldom::Vec2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ViewRefreshModeEnum = {"_p_kmldom__ViewRefreshModeEnum", "enum kmldom::ViewRefreshModeEnum *|kmldom::ViewRefreshModeEnum *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_kmldom__ViewVolume = {"_p_kmldom__ViewVolume", "kmldom::ViewVolume *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *|time_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "int_least64_t *|int_fast64_t *|int64_t *|long long *|intmax_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|int_least16_t *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|int_least8_t *|int_fast8_t *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|uint_least8_t *|uint_fast8_t *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "uintptr_t *|uint_least32_t *|uint_fast32_t *|uint32_t *|unsigned int *|uint_fast16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "uint_least64_t *|uint_fast64_t *|uint64_t *|unsigned long long *|uintmax_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|uint_least16_t *|uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wchar_t = {"_p_wchar_t", "wchar_t *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_boost__intrusive_ptrT_kmlbase__Referent_t,
  &_swigt__p_boost__intrusive_ptrT_kmlbase__XmlElement_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AbstractLink_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AbstractView_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Alias_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AtomCategory_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AtomContent_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AtomEntry_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AtomFeed_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__AtomLink_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__BasicLink_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Camera_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Change_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ColorStyle_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Container_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Coordinates_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Create_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Data_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Delete_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Document_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Element_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ExtendedData_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Feature_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Field_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Folder_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Geometry_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxTourControl_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxTour_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__GxWait_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__HotSpot_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Icon_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ItemIcon_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Kml_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__LatLonBox_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__LineString_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__LinearRing_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Link_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ListStyle_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Location_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Lod_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__LookAt_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Metadata_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Model_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLink_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Object_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Orientation_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__OverlayXY_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Overlay_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Pair_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Placemark_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Point_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Polygon_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Region_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ResourceMap_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__RotationXY_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Scale_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__SchemaData_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Schema_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ScreenXY_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__SimpleData_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__SimpleField_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Size_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Snippet_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__StyleMap_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__StyleSelector_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Style_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__SubStyle_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__TimeSpan_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__TimeStamp_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__UpdateOperation_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Update_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Url_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__Vec2_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__ViewVolume_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__XalAddressDetails_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__XalAdministrativeArea_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__XalCountry_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__XalLocality_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__XalPostalCode_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__XalSubAdministrativeArea_t,
  &_swigt__p_boost__intrusive_ptrT_kmldom__XalThoroughfare_t,
  &_swigt__p_char,
  &_swigt__p_int,
  &_swigt__p_kmlbase__Color32,
  &_swigt__p_kmlbase__Referent,
  &_swigt__p_kmlbase__Vec3,
  &_swigt__p_kmlbase__XmlElement,
  &_swigt__p_kmlbase__XmlElementPtr,
  &_swigt__p_kmldom__AbstractLatLonBox,
  &_swigt__p_kmldom__AbstractView,
  &_swigt__p_kmldom__Alias,
  &_swigt__p_kmldom__AltitudeModeEnum,
  &_swigt__p_kmldom__AtomAuthor,
  &_swigt__p_kmldom__AtomLink,
  &_swigt__p_kmldom__BalloonStyle,
  &_swigt__p_kmldom__BasicLink,
  &_swigt__p_kmldom__Camera,
  &_swigt__p_kmldom__Change,
  &_swigt__p_kmldom__ColorModeEnum,
  &_swigt__p_kmldom__ColorStyle,
  &_swigt__p_kmldom__Container,
  &_swigt__p_kmldom__Coordinates,
  &_swigt__p_kmldom__Create,
  &_swigt__p_kmldom__Data,
  &_swigt__p_kmldom__Delete,
  &_swigt__p_kmldom__DisplayModeEnum,
  &_swigt__p_kmldom__Document,
  &_swigt__p_kmldom__Element,
  &_swigt__p_kmldom__ExtendedData,
  &_swigt__p_kmldom__Feature,
  &_swigt__p_kmldom__Folder,
  &_swigt__p_kmldom__Geometry,
  &_swigt__p_kmldom__GridOriginEnum,
  &_swigt__p_kmldom__GroundOverlay,
  &_swigt__p_kmldom__GxAltitudeModeEnum,
  &_swigt__p_kmldom__GxAnimatedUpdate,
  &_swigt__p_kmldom__GxFlyTo,
  &_swigt__p_kmldom__GxFlyToModeEnum,
  &_swigt__p_kmldom__GxLatLonQuad,
  &_swigt__p_kmldom__GxPlayModeEnum,
  &_swigt__p_kmldom__GxPlaylist,
  &_swigt__p_kmldom__GxSoundCue,
  &_swigt__p_kmldom__GxTimeSpan,
  &_swigt__p_kmldom__GxTimeStamp,
  &_swigt__p_kmldom__GxTour,
  &_swigt__p_kmldom__GxTourControl,
  &_swigt__p_kmldom__GxTourPrimitive,
  &_swigt__p_kmldom__GxWait,
  &_swigt__p_kmldom__HotSpot,
  &_swigt__p_kmldom__Icon,
  &_swigt__p_kmldom__IconStyle,
  &_swigt__p_kmldom__IconStyleIcon,
  &_swigt__p_kmldom__ImagePyramid,
  &_swigt__p_kmldom__InnerBoundaryIs,
  &_swigt__p_kmldom__ItemIcon,
  &_swigt__p_kmldom__ItemIconStateEnum,
  &_swigt__p_kmldom__Kml,
  &_swigt__p_kmldom__KmlDomType,
  &_swigt__p_kmldom__KmlFactory,
  &_swigt__p_kmldom__LabelStyle,
  &_swigt__p_kmldom__LatLonAltBox,
  &_swigt__p_kmldom__LatLonBox,
  &_swigt__p_kmldom__LineString,
  &_swigt__p_kmldom__LineStyle,
  &_swigt__p_kmldom__LinearRing,
  &_swigt__p_kmldom__Link,
  &_swigt__p_kmldom__LinkSnippet,
  &_swigt__p_kmldom__ListItemTypeEnum,
  &_swigt__p_kmldom__ListStyle,
  &_swigt__p_kmldom__Location,
  &_swigt__p_kmldom__Lod,
  &_swigt__p_kmldom__LookAt,
  &_swigt__p_kmldom__Model,
  &_swigt__p_kmldom__MultiGeometry,
  &_swigt__p_kmldom__NetworkLink,
  &_swigt__p_kmldom__NetworkLinkControl,
  &_swigt__p_kmldom__Object,
  &_swigt__p_kmldom__Orientation,
  &_swigt__p_kmldom__OuterBoundaryIs,
  &_swigt__p_kmldom__Overlay,
  &_swigt__p_kmldom__OverlayXY,
  &_swigt__p_kmldom__Pair,
  &_swigt__p_kmldom__PhotoOverlay,
  &_swigt__p_kmldom__Placemark,
  &_swigt__p_kmldom__Point,
  &_swigt__p_kmldom__PolyStyle,
  &_swigt__p_kmldom__Polygon,
  &_swigt__p_kmldom__RefreshModeEnum,
  &_swigt__p_kmldom__Region,
  &_swigt__p_kmldom__ResourceMap,
  &_swigt__p_kmldom__RotationXY,
  &_swigt__p_kmldom__Scale,
  &_swigt__p_kmldom__Schema,
  &_swigt__p_kmldom__SchemaData,
  &_swigt__p_kmldom__ScreenOverlay,
  &_swigt__p_kmldom__ScreenXY,
  &_swigt__p_kmldom__ShapeEnum,
  &_swigt__p_kmldom__SimpleData,
  &_swigt__p_kmldom__SimpleField,
  &_swigt__p_kmldom__Size,
  &_swigt__p_kmldom__Snippet,
  &_swigt__p_kmldom__SnippetCommon,
  &_swigt__p_kmldom__Style,
  &_swigt__p_kmldom__StyleMap,
  &_swigt__p_kmldom__StyleSelector,
  &_swigt__p_kmldom__StyleStateEnum,
  &_swigt__p_kmldom__SubStyle,
  &_swigt__p_kmldom__TimePrimitive,
  &_swigt__p_kmldom__TimeSpan,
  &_swigt__p_kmldom__TimeStamp,
  &_swigt__p_kmldom__UnitsEnum,
  &_swigt__p_kmldom__Update,
  &_swigt__p_kmldom__UpdateOperation,
  &_swigt__p_kmldom__Vec2,
  &_swigt__p_kmldom__ViewRefreshModeEnum,
  &_swigt__p_kmldom__ViewVolume,
  &_swigt__p_long,
  &_swigt__p_long_long,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_wchar_t,
};

static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmlbase__Referent_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTour_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmlbase__Referent_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Folder_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Pair_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Create_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Vec2_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Point_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Model_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Container_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Lod_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Kml_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Coordinates_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Region_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Overlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Delete_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Alias_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Polygon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LookAt_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Update_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleMap_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Schema_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomAuthor_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourControl_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SubStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Style_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ListStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BasicLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Link_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Data_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SchemaData_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SimpleData_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineString_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Camera_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ItemIcon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Icon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__HotSpot_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__OverlayXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ViewVolume_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Size_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Orientation_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Location_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Document_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmlbase__XmlElement_t, _p_boost__intrusive_ptrT_kmlbase__XmlElement_tTo_p_boost__intrusive_ptrT_kmlbase__Referent_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Change_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Placemark_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ResourceMap_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxWait_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__RotationXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Scale_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractView_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleSelector_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SimpleField_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Snippet_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ExtendedData_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinearRing_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmlbase__XmlElement_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTour_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Folder_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Pair_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Create_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Vec2_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Point_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Model_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Container_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Lod_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Kml_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Coordinates_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Region_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Overlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Delete_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Alias_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Polygon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LookAt_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Update_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleMap_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Schema_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomAuthor_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourControl_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SubStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Style_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ListStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BasicLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Link_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Data_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SchemaData_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SimpleData_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineString_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Camera_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ItemIcon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Icon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__HotSpot_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__OverlayXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ViewVolume_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Size_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Orientation_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Location_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Document_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Element_t, _p_boost__intrusive_ptrT_kmldom__Element_tTo_p_boost__intrusive_ptrT_kmlbase__XmlElement_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmlbase__XmlElement_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Change_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Placemark_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ResourceMap_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxWait_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__RotationXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Scale_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractView_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleSelector_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SimpleField_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Snippet_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ExtendedData_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinearRing_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, _p_boost__intrusive_ptrT_kmldom__LatLonAltBox_tTo_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonBox_t, _p_boost__intrusive_ptrT_kmldom__LatLonBox_tTo_p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AbstractLink_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractLink_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AbstractView_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Camera_t, _p_boost__intrusive_ptrT_kmldom__Camera_tTo_p_boost__intrusive_ptrT_kmldom__AbstractView_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractView_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LookAt_t, _p_boost__intrusive_ptrT_kmldom__LookAt_tTo_p_boost__intrusive_ptrT_kmldom__AbstractView_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Alias_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Alias_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AtomAuthor_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomAuthor_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AtomCategory_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomCategory_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AtomContent_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomContent_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AtomEntry_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomEntry_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AtomFeed_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomFeed_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__AtomLink_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomLink_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__BasicLink_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Icon_t, _p_boost__intrusive_ptrT_kmldom__Icon_tTo_p_boost__intrusive_ptrT_kmldom__BasicLink_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, _p_boost__intrusive_ptrT_kmldom__IconStyleIcon_tTo_p_boost__intrusive_ptrT_kmldom__BasicLink_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BasicLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Link_t, _p_boost__intrusive_ptrT_kmldom__Link_tTo_p_boost__intrusive_ptrT_kmldom__BasicLink_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Camera_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Camera_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Change_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Change_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ColorStyle_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t, _p_boost__intrusive_ptrT_kmldom__IconStyle_tTo_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t, _p_boost__intrusive_ptrT_kmldom__LabelStyle_tTo_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t, _p_boost__intrusive_ptrT_kmldom__LineStyle_tTo_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t, _p_boost__intrusive_ptrT_kmldom__PolyStyle_tTo_p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Container_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Document_t, _p_boost__intrusive_ptrT_kmldom__Document_tTo_p_boost__intrusive_ptrT_kmldom__Container_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Container_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Folder_t, _p_boost__intrusive_ptrT_kmldom__Folder_tTo_p_boost__intrusive_ptrT_kmldom__Container_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Coordinates_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Coordinates_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Create_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Create_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Data_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Data_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Delete_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Delete_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Document_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Document_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Element_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTour_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Folder_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Pair_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Create_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Vec2_t, _p_boost__intrusive_ptrT_kmldom__Vec2_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Point_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Model_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Container_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Lod_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t, _p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t, _p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Kml_t, _p_boost__intrusive_ptrT_kmldom__Kml_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Coordinates_t, _p_boost__intrusive_ptrT_kmldom__Coordinates_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Region_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Overlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Delete_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Alias_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Polygon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LookAt_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Update_t, _p_boost__intrusive_ptrT_kmldom__Update_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleMap_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Schema_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomAuthor_t, _p_boost__intrusive_ptrT_kmldom__AtomAuthor_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourControl_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SubStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Style_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ListStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AtomLink_t, _p_boost__intrusive_ptrT_kmldom__AtomLink_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BasicLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Link_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Data_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SchemaData_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SimpleData_t, _p_boost__intrusive_ptrT_kmldom__SimpleData_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineString_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Camera_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ItemIcon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Icon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__HotSpot_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, _p_boost__intrusive_ptrT_kmldom__SnippetCommon_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__OverlayXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ViewVolume_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Size_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t, _p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Orientation_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Location_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, _p_boost__intrusive_ptrT_kmldom__UpdateOperation_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Document_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Change_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Placemark_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ResourceMap_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxWait_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__RotationXY_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Scale_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractView_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Object_t, _p_boost__intrusive_ptrT_kmldom__Object_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleSelector_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SimpleField_t, _p_boost__intrusive_ptrT_kmldom__SimpleField_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Snippet_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ExtendedData_t, _p_boost__intrusive_ptrT_kmldom__ExtendedData_tTo_p_boost__intrusive_ptrT_kmldom__Element_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinearRing_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ExtendedData_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ExtendedData_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Feature_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Overlay_t, _p_boost__intrusive_ptrT_kmldom__Overlay_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Document_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Container_t, _p_boost__intrusive_ptrT_kmldom__Container_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTour_t, _p_boost__intrusive_ptrT_kmldom__GxTour_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Folder_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLink_t, _p_boost__intrusive_ptrT_kmldom__NetworkLink_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Placemark_t, _p_boost__intrusive_ptrT_kmldom__Placemark_tTo_p_boost__intrusive_ptrT_kmldom__Feature_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Field_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Field_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Folder_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Folder_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Geometry_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinearRing_t, _p_boost__intrusive_ptrT_kmldom__LinearRing_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Point_t, _p_boost__intrusive_ptrT_kmldom__Point_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineString_t, _p_boost__intrusive_ptrT_kmldom__LineString_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Polygon_t, _p_boost__intrusive_ptrT_kmldom__Polygon_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, _p_boost__intrusive_ptrT_kmldom__MultiGeometry_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Model_t, _p_boost__intrusive_ptrT_kmldom__Model_tTo_p_boost__intrusive_ptrT_kmldom__Geometry_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxTourControl_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourControl_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, _p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, _p_boost__intrusive_ptrT_kmldom__GxSoundCue_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxWait_t, _p_boost__intrusive_ptrT_kmldom__GxWait_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, _p_boost__intrusive_ptrT_kmldom__GxFlyTo_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourControl_t, _p_boost__intrusive_ptrT_kmldom__GxTourControl_tTo_p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxTour_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTour_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__GxWait_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxWait_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__HotSpot_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__HotSpot_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__IconStyle_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Icon_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Icon_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ItemIcon_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ItemIcon_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Kml_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Kml_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__LabelStyle_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__LatLonBox_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonBox_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__LineString_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__LineStyle_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__LinearRing_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinearRing_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Link_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Link_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ListStyle_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ListStyle_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Location_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Location_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Lod_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Lod_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__LookAt_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LookAt_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Metadata_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Metadata_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Model_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Model_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__NetworkLink_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLink_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Object_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Schema_t, _p_boost__intrusive_ptrT_kmldom__Schema_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Placemark_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractView_t, _p_boost__intrusive_ptrT_kmldom__AbstractView_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourControl_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Pair_t, _p_boost__intrusive_ptrT_kmldom__Pair_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Region_t, _p_boost__intrusive_ptrT_kmldom__Region_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Container_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Icon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Geometry_t, _p_boost__intrusive_ptrT_kmldom__Geometry_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ItemIcon_t, _p_boost__intrusive_ptrT_kmldom__ItemIcon_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Location_t, _p_boost__intrusive_ptrT_kmldom__Location_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Orientation_t, _p_boost__intrusive_ptrT_kmldom__Orientation_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Point_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Lod_t, _p_boost__intrusive_ptrT_kmldom__Lod_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ViewVolume_t, _p_boost__intrusive_ptrT_kmldom__ViewVolume_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Document_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t, _p_boost__intrusive_ptrT_kmldom__ImagePyramid_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t, _p_boost__intrusive_ptrT_kmldom__GxPlaylist_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Polygon_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t, _p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, _p_boost__intrusive_ptrT_kmldom__TimePrimitive_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Model_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Overlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__NetworkLink_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BasicLink_t, _p_boost__intrusive_ptrT_kmldom__BasicLink_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Link_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleSelector_t, _p_boost__intrusive_ptrT_kmldom__StyleSelector_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Style_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SubStyle_t, _p_boost__intrusive_ptrT_kmldom__SubStyle_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ColorStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ListStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Alias_t, _p_boost__intrusive_ptrT_kmldom__Alias_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Feature_t, _p_boost__intrusive_ptrT_kmldom__Feature_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LookAt_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinearRing_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ResourceMap_t, _p_boost__intrusive_ptrT_kmldom__ResourceMap_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t, _p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t, _p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Folder_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Scale_t, _p_boost__intrusive_ptrT_kmldom__Scale_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Camera_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LatLonBox_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTour_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxWait_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SchemaData_t, _p_boost__intrusive_ptrT_kmldom__SchemaData_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Data_t, _p_boost__intrusive_ptrT_kmldom__Data_tTo_p_boost__intrusive_ptrT_kmldom__Object_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineString_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleMap_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Orientation_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Orientation_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__OverlayXY_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__OverlayXY_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Overlay_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Overlay_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t, _p_boost__intrusive_ptrT_kmldom__GroundOverlay_tTo_p_boost__intrusive_ptrT_kmldom__Overlay_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, _p_boost__intrusive_ptrT_kmldom__PhotoOverlay_tTo_p_boost__intrusive_ptrT_kmldom__Overlay_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, _p_boost__intrusive_ptrT_kmldom__ScreenOverlay_tTo_p_boost__intrusive_ptrT_kmldom__Overlay_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Pair_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Pair_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Placemark_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Placemark_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Point_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Point_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__PolyStyle_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Polygon_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Polygon_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Region_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Region_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ResourceMap_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ResourceMap_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__RotationXY_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__RotationXY_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Scale_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Scale_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__SchemaData_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__SchemaData_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Schema_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Schema_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ScreenXY_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenXY_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__SimpleData_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__SimpleData_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__SimpleField_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__SimpleField_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Size_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__SnippetCommon_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t, _p_boost__intrusive_ptrT_kmldom__LinkSnippet_tTo_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Snippet_t, _p_boost__intrusive_ptrT_kmldom__Snippet_tTo_p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__SnippetCommon_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Snippet_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Snippet_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__StyleMap_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleMap_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__StyleSelector_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Style_t, _p_boost__intrusive_ptrT_kmldom__Style_tTo_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleMap_t, _p_boost__intrusive_ptrT_kmldom__StyleMap_tTo_p_boost__intrusive_ptrT_kmldom__StyleSelector_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__StyleSelector_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Style_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Style_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__SubStyle_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__SubStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ColorStyle_t, _p_boost__intrusive_ptrT_kmldom__ColorStyle_tTo_p_boost__intrusive_ptrT_kmldom__SubStyle_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__IconStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LabelStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__LineStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__PolyStyle_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t, _p_boost__intrusive_ptrT_kmldom__BalloonStyle_tTo_p_boost__intrusive_ptrT_kmldom__SubStyle_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ListStyle_t, _p_boost__intrusive_ptrT_kmldom__ListStyle_tTo_p_boost__intrusive_ptrT_kmldom__SubStyle_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeStamp_t, _p_boost__intrusive_ptrT_kmldom__TimeStamp_tTo_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeSpan_t, _p_boost__intrusive_ptrT_kmldom__TimeSpan_tTo_p_boost__intrusive_ptrT_kmldom__TimePrimitive_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__TimeSpan_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeSpan_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t, _p_boost__intrusive_ptrT_kmldom__GxTimeSpan_tTo_p_boost__intrusive_ptrT_kmldom__TimeSpan_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__TimeStamp_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__TimeStamp_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t, _p_boost__intrusive_ptrT_kmldom__GxTimeStamp_tTo_p_boost__intrusive_ptrT_kmldom__TimeStamp_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__UpdateOperation_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Create_t, _p_boost__intrusive_ptrT_kmldom__Create_tTo_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Delete_t, _p_boost__intrusive_ptrT_kmldom__Delete_tTo_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Change_t, _p_boost__intrusive_ptrT_kmldom__Change_tTo_p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__UpdateOperation_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Update_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Update_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Url_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__Url_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__Vec2_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__RotationXY_t, _p_boost__intrusive_ptrT_kmldom__RotationXY_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__ScreenXY_t, _p_boost__intrusive_ptrT_kmldom__ScreenXY_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__HotSpot_t, _p_boost__intrusive_ptrT_kmldom__HotSpot_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Vec2_t, 0, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__OverlayXY_t, _p_boost__intrusive_ptrT_kmldom__OverlayXY_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t, 0, 0},  {&_swigt__p_boost__intrusive_ptrT_kmldom__Size_t, _p_boost__intrusive_ptrT_kmldom__Size_tTo_p_boost__intrusive_ptrT_kmldom__Vec2_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__ViewVolume_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__ViewVolume_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__XalAddressDetails_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__XalAddressDetails_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__XalAdministrativeArea_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__XalAdministrativeArea_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__XalCountry_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__XalCountry_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__XalLocality_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__XalLocality_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__XalPostalCode_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__XalPostalCode_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__XalSubAdministrativeArea_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__XalSubAdministrativeArea_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__intrusive_ptrT_kmldom__XalThoroughfare_t[] = {  {&_swigt__p_boost__intrusive_ptrT_kmldom__XalThoroughfare_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmlbase__Color32[] = {  {&_swigt__p_kmlbase__Color32, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmlbase__Referent[] = {  {&_swigt__p_kmlbase__Referent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmlbase__Vec3[] = {  {&_swigt__p_kmlbase__Vec3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmlbase__XmlElement[] = {  {&_swigt__p_kmldom__Document, _p_kmldom__DocumentTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Size, _p_kmldom__SizeTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Orientation, _p_kmldom__OrientationTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__LinkSnippet, _p_kmldom__LinkSnippetTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Snippet, _p_kmldom__SnippetTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Update, _p_kmldom__UpdateTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Polygon, _p_kmldom__PolygonTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxFlyTo, _p_kmldom__GxFlyToTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Icon, _p_kmldom__IconTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Data, _p_kmldom__DataTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__UpdateOperation, _p_kmldom__UpdateOperationTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__AbstractView, _p_kmldom__AbstractViewTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Coordinates, _p_kmldom__CoordinatesTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Lod, _p_kmldom__LodTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__AtomAuthor, _p_kmldom__AtomAuthorTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__IconStyleIcon, _p_kmldom__IconStyleIconTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__StyleMap, _p_kmldom__StyleMapTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ExtendedData, _p_kmldom__ExtendedDataTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__InnerBoundaryIs, _p_kmldom__InnerBoundaryIsTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__OuterBoundaryIs, _p_kmldom__OuterBoundaryIsTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ItemIcon, _p_kmldom__ItemIconTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Container, _p_kmldom__ContainerTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__SubStyle, _p_kmldom__SubStyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__OverlayXY, _p_kmldom__OverlayXYTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ViewVolume, _p_kmldom__ViewVolumeTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Pair, _p_kmldom__PairTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxTourControl, _p_kmldom__GxTourControlTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__NetworkLinkControl, _p_kmldom__NetworkLinkControlTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Alias, _p_kmldom__AliasTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Style, _p_kmldom__StyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__AtomLink, _p_kmldom__AtomLinkTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__SchemaData, _p_kmldom__SchemaDataTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__SnippetCommon, _p_kmldom__SnippetCommonTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Schema, _p_kmldom__SchemaTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__NetworkLink, _p_kmldom__NetworkLinkTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxAnimatedUpdate, _p_kmldom__GxAnimatedUpdateTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxTour, _p_kmldom__GxTourTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Location, _p_kmldom__LocationTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Change, _p_kmldom__ChangeTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Create, _p_kmldom__CreateTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Object, _p_kmldom__ObjectTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxWait, _p_kmldom__GxWaitTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Kml, _p_kmldom__KmlTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__SimpleField, _p_kmldom__SimpleFieldTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxTimeSpan, _p_kmldom__GxTimeSpanTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__TimeSpan, _p_kmldom__TimeSpanTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__LineString, _p_kmldom__LineStringTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__TimePrimitive, _p_kmldom__TimePrimitiveTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxTourPrimitive, _p_kmldom__GxTourPrimitiveTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Folder, _p_kmldom__FolderTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ColorStyle, _p_kmldom__ColorStyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxLatLonQuad, _p_kmldom__GxLatLonQuadTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ImagePyramid, _p_kmldom__ImagePyramidTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Vec2, _p_kmldom__Vec2To_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__RotationXY, _p_kmldom__RotationXYTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__TimeStamp, _p_kmldom__TimeStampTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxTimeStamp, _p_kmldom__GxTimeStampTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Point, _p_kmldom__PointTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__BasicLink, _p_kmldom__BasicLinkTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__LabelStyle, _p_kmldom__LabelStyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Geometry, _p_kmldom__GeometryTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__MultiGeometry, _p_kmldom__MultiGeometryTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxSoundCue, _p_kmldom__GxSoundCueTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__LatLonBox, _p_kmldom__LatLonBoxTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__AbstractLatLonBox, _p_kmldom__AbstractLatLonBoxTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Model, _p_kmldom__ModelTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__PolyStyle, _p_kmldom__PolyStyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Link, _p_kmldom__LinkTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Camera, _p_kmldom__CameraTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__LineStyle, _p_kmldom__LineStyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__SimpleData, _p_kmldom__SimpleDataTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ListStyle, _p_kmldom__ListStyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Placemark, _p_kmldom__PlacemarkTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Scale, _p_kmldom__ScaleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__LinearRing, _p_kmldom__LinearRingTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__HotSpot, _p_kmldom__HotSpotTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ScreenOverlay, _p_kmldom__ScreenOverlayTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__PhotoOverlay, _p_kmldom__PhotoOverlayTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GroundOverlay, _p_kmldom__GroundOverlayTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Overlay, _p_kmldom__OverlayTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__LookAt, _p_kmldom__LookAtTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__GxPlaylist, _p_kmldom__GxPlaylistTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Delete, _p_kmldom__DeleteTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__StyleSelector, _p_kmldom__StyleSelectorTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ResourceMap, _p_kmldom__ResourceMapTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__IconStyle, _p_kmldom__IconStyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__BalloonStyle, _p_kmldom__BalloonStyleTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__LatLonAltBox, _p_kmldom__LatLonAltBoxTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmlbase__XmlElement, 0, 0, 0},  {&_swigt__p_kmldom__Region, _p_kmldom__RegionTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Feature, _p_kmldom__FeatureTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__ScreenXY, _p_kmldom__ScreenXYTo_p_kmlbase__XmlElement, 0, 0},  {&_swigt__p_kmldom__Element, _p_kmldom__ElementTo_p_kmlbase__XmlElement, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmlbase__XmlElementPtr[] = {  {&_swigt__p_kmlbase__XmlElementPtr, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__AbstractLatLonBox[] = {  {&_swigt__p_kmldom__AbstractLatLonBox, 0, 0, 0},  {&_swigt__p_kmldom__LatLonAltBox, _p_kmldom__LatLonAltBoxTo_p_kmldom__AbstractLatLonBox, 0, 0},  {&_swigt__p_kmldom__LatLonBox, _p_kmldom__LatLonBoxTo_p_kmldom__AbstractLatLonBox, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__AbstractView[] = {  {&_swigt__p_kmldom__AbstractView, 0, 0, 0},  {&_swigt__p_kmldom__LookAt, _p_kmldom__LookAtTo_p_kmldom__AbstractView, 0, 0},  {&_swigt__p_kmldom__Camera, _p_kmldom__CameraTo_p_kmldom__AbstractView, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Alias[] = {  {&_swigt__p_kmldom__Alias, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__AltitudeModeEnum[] = {  {&_swigt__p_kmldom__AltitudeModeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__AtomAuthor[] = {  {&_swigt__p_kmldom__AtomAuthor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__AtomLink[] = {  {&_swigt__p_kmldom__AtomLink, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__BalloonStyle[] = {  {&_swigt__p_kmldom__BalloonStyle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__BasicLink[] = {  {&_swigt__p_kmldom__IconStyleIcon, _p_kmldom__IconStyleIconTo_p_kmldom__BasicLink, 0, 0},  {&_swigt__p_kmldom__Link, _p_kmldom__LinkTo_p_kmldom__BasicLink, 0, 0},  {&_swigt__p_kmldom__BasicLink, 0, 0, 0},  {&_swigt__p_kmldom__Icon, _p_kmldom__IconTo_p_kmldom__BasicLink, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Camera[] = {  {&_swigt__p_kmldom__Camera, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Change[] = {  {&_swigt__p_kmldom__Change, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ColorModeEnum[] = {  {&_swigt__p_kmldom__ColorModeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ColorStyle[] = {  {&_swigt__p_kmldom__PolyStyle, _p_kmldom__PolyStyleTo_p_kmldom__ColorStyle, 0, 0},  {&_swigt__p_kmldom__LabelStyle, _p_kmldom__LabelStyleTo_p_kmldom__ColorStyle, 0, 0},  {&_swigt__p_kmldom__LineStyle, _p_kmldom__LineStyleTo_p_kmldom__ColorStyle, 0, 0},  {&_swigt__p_kmldom__IconStyle, _p_kmldom__IconStyleTo_p_kmldom__ColorStyle, 0, 0},  {&_swigt__p_kmldom__ColorStyle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Container[] = {  {&_swigt__p_kmldom__Folder, _p_kmldom__FolderTo_p_kmldom__Container, 0, 0},  {&_swigt__p_kmldom__Document, _p_kmldom__DocumentTo_p_kmldom__Container, 0, 0},  {&_swigt__p_kmldom__Container, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Coordinates[] = {  {&_swigt__p_kmldom__Coordinates, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Create[] = {  {&_swigt__p_kmldom__Create, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Data[] = {  {&_swigt__p_kmldom__Data, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Delete[] = {  {&_swigt__p_kmldom__Delete, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__DisplayModeEnum[] = {  {&_swigt__p_kmldom__DisplayModeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Document[] = {  {&_swigt__p_kmldom__Document, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Element[] = {  {&_swigt__p_kmldom__Document, _p_kmldom__DocumentTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Size, _p_kmldom__SizeTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Orientation, _p_kmldom__OrientationTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__LinkSnippet, _p_kmldom__LinkSnippetTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Snippet, _p_kmldom__SnippetTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Update, _p_kmldom__UpdateTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Polygon, _p_kmldom__PolygonTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxFlyTo, _p_kmldom__GxFlyToTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Icon, _p_kmldom__IconTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Data, _p_kmldom__DataTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__UpdateOperation, _p_kmldom__UpdateOperationTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__AbstractView, _p_kmldom__AbstractViewTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Coordinates, _p_kmldom__CoordinatesTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Lod, _p_kmldom__LodTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__AtomAuthor, _p_kmldom__AtomAuthorTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__IconStyleIcon, _p_kmldom__IconStyleIconTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__StyleMap, _p_kmldom__StyleMapTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ExtendedData, _p_kmldom__ExtendedDataTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__InnerBoundaryIs, _p_kmldom__InnerBoundaryIsTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__OuterBoundaryIs, _p_kmldom__OuterBoundaryIsTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ItemIcon, _p_kmldom__ItemIconTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Container, _p_kmldom__ContainerTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__SubStyle, _p_kmldom__SubStyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__OverlayXY, _p_kmldom__OverlayXYTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ViewVolume, _p_kmldom__ViewVolumeTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Pair, _p_kmldom__PairTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxTourControl, _p_kmldom__GxTourControlTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__NetworkLinkControl, _p_kmldom__NetworkLinkControlTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Alias, _p_kmldom__AliasTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Style, _p_kmldom__StyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__AtomLink, _p_kmldom__AtomLinkTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__SchemaData, _p_kmldom__SchemaDataTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__SnippetCommon, _p_kmldom__SnippetCommonTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Schema, _p_kmldom__SchemaTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__NetworkLink, _p_kmldom__NetworkLinkTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxAnimatedUpdate, _p_kmldom__GxAnimatedUpdateTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxTour, _p_kmldom__GxTourTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Location, _p_kmldom__LocationTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Change, _p_kmldom__ChangeTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Create, _p_kmldom__CreateTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Object, _p_kmldom__ObjectTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxWait, _p_kmldom__GxWaitTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Kml, _p_kmldom__KmlTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__SimpleField, _p_kmldom__SimpleFieldTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxTimeSpan, _p_kmldom__GxTimeSpanTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__TimeSpan, _p_kmldom__TimeSpanTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__LineString, _p_kmldom__LineStringTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__TimePrimitive, _p_kmldom__TimePrimitiveTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxTourPrimitive, _p_kmldom__GxTourPrimitiveTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Folder, _p_kmldom__FolderTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ColorStyle, _p_kmldom__ColorStyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxLatLonQuad, _p_kmldom__GxLatLonQuadTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ImagePyramid, _p_kmldom__ImagePyramidTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Vec2, _p_kmldom__Vec2To_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__RotationXY, _p_kmldom__RotationXYTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__TimeStamp, _p_kmldom__TimeStampTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxTimeStamp, _p_kmldom__GxTimeStampTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Point, _p_kmldom__PointTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__BasicLink, _p_kmldom__BasicLinkTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__LabelStyle, _p_kmldom__LabelStyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Geometry, _p_kmldom__GeometryTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__MultiGeometry, _p_kmldom__MultiGeometryTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxSoundCue, _p_kmldom__GxSoundCueTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__LatLonBox, _p_kmldom__LatLonBoxTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__AbstractLatLonBox, _p_kmldom__AbstractLatLonBoxTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Model, _p_kmldom__ModelTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__PolyStyle, _p_kmldom__PolyStyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Link, _p_kmldom__LinkTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Camera, _p_kmldom__CameraTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__LineStyle, _p_kmldom__LineStyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__SimpleData, _p_kmldom__SimpleDataTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ListStyle, _p_kmldom__ListStyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Placemark, _p_kmldom__PlacemarkTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Scale, _p_kmldom__ScaleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__LinearRing, _p_kmldom__LinearRingTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__HotSpot, _p_kmldom__HotSpotTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ScreenOverlay, _p_kmldom__ScreenOverlayTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__PhotoOverlay, _p_kmldom__PhotoOverlayTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GroundOverlay, _p_kmldom__GroundOverlayTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Overlay, _p_kmldom__OverlayTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__LookAt, _p_kmldom__LookAtTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__GxPlaylist, _p_kmldom__GxPlaylistTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Delete, _p_kmldom__DeleteTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__StyleSelector, _p_kmldom__StyleSelectorTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ResourceMap, _p_kmldom__ResourceMapTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__IconStyle, _p_kmldom__IconStyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__BalloonStyle, _p_kmldom__BalloonStyleTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__LatLonAltBox, _p_kmldom__LatLonAltBoxTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Element, 0, 0, 0},  {&_swigt__p_kmldom__Region, _p_kmldom__RegionTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__Feature, _p_kmldom__FeatureTo_p_kmldom__Element, 0, 0},  {&_swigt__p_kmldom__ScreenXY, _p_kmldom__ScreenXYTo_p_kmldom__Element, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ExtendedData[] = {  {&_swigt__p_kmldom__ExtendedData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Feature[] = {  {&_swigt__p_kmldom__Folder, _p_kmldom__FolderTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__NetworkLink, _p_kmldom__NetworkLinkTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__Placemark, _p_kmldom__PlacemarkTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__Feature, 0, 0, 0},  {&_swigt__p_kmldom__GxTour, _p_kmldom__GxTourTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__Document, _p_kmldom__DocumentTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__Container, _p_kmldom__ContainerTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__Overlay, _p_kmldom__OverlayTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__GroundOverlay, _p_kmldom__GroundOverlayTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__PhotoOverlay, _p_kmldom__PhotoOverlayTo_p_kmldom__Feature, 0, 0},  {&_swigt__p_kmldom__ScreenOverlay, _p_kmldom__ScreenOverlayTo_p_kmldom__Feature, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Folder[] = {  {&_swigt__p_kmldom__Folder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Geometry[] = {  {&_swigt__p_kmldom__Polygon, _p_kmldom__PolygonTo_p_kmldom__Geometry, 0, 0},  {&_swigt__p_kmldom__Model, _p_kmldom__ModelTo_p_kmldom__Geometry, 0, 0},  {&_swigt__p_kmldom__Geometry, 0, 0, 0},  {&_swigt__p_kmldom__MultiGeometry, _p_kmldom__MultiGeometryTo_p_kmldom__Geometry, 0, 0},  {&_swigt__p_kmldom__Point, _p_kmldom__PointTo_p_kmldom__Geometry, 0, 0},  {&_swigt__p_kmldom__LineString, _p_kmldom__LineStringTo_p_kmldom__Geometry, 0, 0},  {&_swigt__p_kmldom__LinearRing, _p_kmldom__LinearRingTo_p_kmldom__Geometry, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GridOriginEnum[] = {  {&_swigt__p_kmldom__GridOriginEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GroundOverlay[] = {  {&_swigt__p_kmldom__GroundOverlay, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxAltitudeModeEnum[] = {  {&_swigt__p_kmldom__GxAltitudeModeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxAnimatedUpdate[] = {  {&_swigt__p_kmldom__GxAnimatedUpdate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxFlyTo[] = {  {&_swigt__p_kmldom__GxFlyTo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxFlyToModeEnum[] = {  {&_swigt__p_kmldom__GxFlyToModeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxLatLonQuad[] = {  {&_swigt__p_kmldom__GxLatLonQuad, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxPlayModeEnum[] = {  {&_swigt__p_kmldom__GxPlayModeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxPlaylist[] = {  {&_swigt__p_kmldom__GxPlaylist, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxSoundCue[] = {  {&_swigt__p_kmldom__GxSoundCue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxTimeSpan[] = {  {&_swigt__p_kmldom__GxTimeSpan, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxTimeStamp[] = {  {&_swigt__p_kmldom__GxTimeStamp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxTour[] = {  {&_swigt__p_kmldom__GxTour, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxTourControl[] = {  {&_swigt__p_kmldom__GxTourControl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxTourPrimitive[] = {  {&_swigt__p_kmldom__GxTourPrimitive, 0, 0, 0},  {&_swigt__p_kmldom__GxTourControl, _p_kmldom__GxTourControlTo_p_kmldom__GxTourPrimitive, 0, 0},  {&_swigt__p_kmldom__GxWait, _p_kmldom__GxWaitTo_p_kmldom__GxTourPrimitive, 0, 0},  {&_swigt__p_kmldom__GxSoundCue, _p_kmldom__GxSoundCueTo_p_kmldom__GxTourPrimitive, 0, 0},  {&_swigt__p_kmldom__GxAnimatedUpdate, _p_kmldom__GxAnimatedUpdateTo_p_kmldom__GxTourPrimitive, 0, 0},  {&_swigt__p_kmldom__GxFlyTo, _p_kmldom__GxFlyToTo_p_kmldom__GxTourPrimitive, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__GxWait[] = {  {&_swigt__p_kmldom__GxWait, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__HotSpot[] = {  {&_swigt__p_kmldom__HotSpot, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Icon[] = {  {&_swigt__p_kmldom__Icon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__IconStyle[] = {  {&_swigt__p_kmldom__IconStyle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__IconStyleIcon[] = {  {&_swigt__p_kmldom__IconStyleIcon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ImagePyramid[] = {  {&_swigt__p_kmldom__ImagePyramid, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__InnerBoundaryIs[] = {  {&_swigt__p_kmldom__InnerBoundaryIs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ItemIcon[] = {  {&_swigt__p_kmldom__ItemIcon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ItemIconStateEnum[] = {  {&_swigt__p_kmldom__ItemIconStateEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Kml[] = {  {&_swigt__p_kmldom__Kml, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__KmlDomType[] = {  {&_swigt__p_kmldom__KmlDomType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__KmlFactory[] = {  {&_swigt__p_kmldom__KmlFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__LabelStyle[] = {  {&_swigt__p_kmldom__LabelStyle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__LatLonAltBox[] = {  {&_swigt__p_kmldom__LatLonAltBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__LatLonBox[] = {  {&_swigt__p_kmldom__LatLonBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__LineString[] = {  {&_swigt__p_kmldom__LineString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__LineStyle[] = {  {&_swigt__p_kmldom__LineStyle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__LinearRing[] = {  {&_swigt__p_kmldom__LinearRing, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Link[] = {  {&_swigt__p_kmldom__Link, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__LinkSnippet[] = {  {&_swigt__p_kmldom__LinkSnippet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ListItemTypeEnum[] = {  {&_swigt__p_kmldom__ListItemTypeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ListStyle[] = {  {&_swigt__p_kmldom__ListStyle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Location[] = {  {&_swigt__p_kmldom__Location, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Lod[] = {  {&_swigt__p_kmldom__Lod, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__LookAt[] = {  {&_swigt__p_kmldom__LookAt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Model[] = {  {&_swigt__p_kmldom__Model, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__MultiGeometry[] = {  {&_swigt__p_kmldom__MultiGeometry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__NetworkLink[] = {  {&_swigt__p_kmldom__NetworkLink, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__NetworkLinkControl[] = {  {&_swigt__p_kmldom__NetworkLinkControl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Object[] = {  {&_swigt__p_kmldom__GxAnimatedUpdate, _p_kmldom__GxAnimatedUpdateTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Feature, _p_kmldom__FeatureTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__LineStyle, _p_kmldom__LineStyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Point, _p_kmldom__PointTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__AbstractView, _p_kmldom__AbstractViewTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__LinearRing, _p_kmldom__LinearRingTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Region, _p_kmldom__RegionTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__SubStyle, _p_kmldom__SubStyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Location, _p_kmldom__LocationTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxTimeSpan, _p_kmldom__GxTimeSpanTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__TimeSpan, _p_kmldom__TimeSpanTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Document, _p_kmldom__DocumentTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxTourControl, _p_kmldom__GxTourControlTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__SchemaData, _p_kmldom__SchemaDataTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Geometry, _p_kmldom__GeometryTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__MultiGeometry, _p_kmldom__MultiGeometryTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Pair, _p_kmldom__PairTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__NetworkLink, _p_kmldom__NetworkLinkTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__ViewVolume, _p_kmldom__ViewVolumeTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__BasicLink, _p_kmldom__BasicLinkTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Link, _p_kmldom__LinkTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__LookAt, _p_kmldom__LookAtTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Icon, _p_kmldom__IconTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxPlaylist, _p_kmldom__GxPlaylistTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__ItemIcon, _p_kmldom__ItemIconTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Placemark, _p_kmldom__PlacemarkTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Style, _p_kmldom__StyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__LabelStyle, _p_kmldom__LabelStyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Polygon, _p_kmldom__PolygonTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxLatLonQuad, _p_kmldom__GxLatLonQuadTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__TimePrimitive, _p_kmldom__TimePrimitiveTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Alias, _p_kmldom__AliasTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxTourPrimitive, _p_kmldom__GxTourPrimitiveTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__StyleSelector, _p_kmldom__StyleSelectorTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__IconStyle, _p_kmldom__IconStyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__BalloonStyle, _p_kmldom__BalloonStyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxTour, _p_kmldom__GxTourTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Container, _p_kmldom__ContainerTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Camera, _p_kmldom__CameraTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Schema, _p_kmldom__SchemaTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Orientation, _p_kmldom__OrientationTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Folder, _p_kmldom__FolderTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__TimeStamp, _p_kmldom__TimeStampTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxTimeStamp, _p_kmldom__GxTimeStampTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxWait, _p_kmldom__GxWaitTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Object, 0, 0, 0},  {&_swigt__p_kmldom__Scale, _p_kmldom__ScaleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__LatLonBox, _p_kmldom__LatLonBoxTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__AbstractLatLonBox, _p_kmldom__AbstractLatLonBoxTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__ColorStyle, _p_kmldom__ColorStyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__LineString, _p_kmldom__LineStringTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__ResourceMap, _p_kmldom__ResourceMapTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__IconStyleIcon, _p_kmldom__IconStyleIconTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxSoundCue, _p_kmldom__GxSoundCueTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__LatLonAltBox, _p_kmldom__LatLonAltBoxTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__PolyStyle, _p_kmldom__PolyStyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__ListStyle, _p_kmldom__ListStyleTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__StyleMap, _p_kmldom__StyleMapTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Lod, _p_kmldom__LodTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GxFlyTo, _p_kmldom__GxFlyToTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Data, _p_kmldom__DataTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__ImagePyramid, _p_kmldom__ImagePyramidTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Overlay, _p_kmldom__OverlayTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__GroundOverlay, _p_kmldom__GroundOverlayTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__PhotoOverlay, _p_kmldom__PhotoOverlayTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__ScreenOverlay, _p_kmldom__ScreenOverlayTo_p_kmldom__Object, 0, 0},  {&_swigt__p_kmldom__Model, _p_kmldom__ModelTo_p_kmldom__Object, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Orientation[] = {  {&_swigt__p_kmldom__Orientation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__OuterBoundaryIs[] = {  {&_swigt__p_kmldom__OuterBoundaryIs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Overlay[] = {  {&_swigt__p_kmldom__Overlay, 0, 0, 0},  {&_swigt__p_kmldom__GroundOverlay, _p_kmldom__GroundOverlayTo_p_kmldom__Overlay, 0, 0},  {&_swigt__p_kmldom__PhotoOverlay, _p_kmldom__PhotoOverlayTo_p_kmldom__Overlay, 0, 0},  {&_swigt__p_kmldom__ScreenOverlay, _p_kmldom__ScreenOverlayTo_p_kmldom__Overlay, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__OverlayXY[] = {  {&_swigt__p_kmldom__OverlayXY, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Pair[] = {  {&_swigt__p_kmldom__Pair, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__PhotoOverlay[] = {  {&_swigt__p_kmldom__PhotoOverlay, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Placemark[] = {  {&_swigt__p_kmldom__Placemark, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Point[] = {  {&_swigt__p_kmldom__Point, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__PolyStyle[] = {  {&_swigt__p_kmldom__PolyStyle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Polygon[] = {  {&_swigt__p_kmldom__Polygon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__RefreshModeEnum[] = {  {&_swigt__p_kmldom__RefreshModeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Region[] = {  {&_swigt__p_kmldom__Region, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ResourceMap[] = {  {&_swigt__p_kmldom__ResourceMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__RotationXY[] = {  {&_swigt__p_kmldom__RotationXY, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Scale[] = {  {&_swigt__p_kmldom__Scale, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Schema[] = {  {&_swigt__p_kmldom__Schema, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__SchemaData[] = {  {&_swigt__p_kmldom__SchemaData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ScreenOverlay[] = {  {&_swigt__p_kmldom__ScreenOverlay, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ScreenXY[] = {  {&_swigt__p_kmldom__ScreenXY, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ShapeEnum[] = {  {&_swigt__p_kmldom__ShapeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__SimpleData[] = {  {&_swigt__p_kmldom__SimpleData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__SimpleField[] = {  {&_swigt__p_kmldom__SimpleField, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Size[] = {  {&_swigt__p_kmldom__Size, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Snippet[] = {  {&_swigt__p_kmldom__Snippet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__SnippetCommon[] = {  {&_swigt__p_kmldom__SnippetCommon, 0, 0, 0},  {&_swigt__p_kmldom__Snippet, _p_kmldom__SnippetTo_p_kmldom__SnippetCommon, 0, 0},  {&_swigt__p_kmldom__LinkSnippet, _p_kmldom__LinkSnippetTo_p_kmldom__SnippetCommon, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Style[] = {  {&_swigt__p_kmldom__Style, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__StyleMap[] = {  {&_swigt__p_kmldom__StyleMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__StyleSelector[] = {  {&_swigt__p_kmldom__StyleSelector, 0, 0, 0},  {&_swigt__p_kmldom__Style, _p_kmldom__StyleTo_p_kmldom__StyleSelector, 0, 0},  {&_swigt__p_kmldom__StyleMap, _p_kmldom__StyleMapTo_p_kmldom__StyleSelector, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__StyleStateEnum[] = {  {&_swigt__p_kmldom__StyleStateEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__SubStyle[] = {  {&_swigt__p_kmldom__PolyStyle, _p_kmldom__PolyStyleTo_p_kmldom__SubStyle, 0, 0},  {&_swigt__p_kmldom__LabelStyle, _p_kmldom__LabelStyleTo_p_kmldom__SubStyle, 0, 0},  {&_swigt__p_kmldom__SubStyle, 0, 0, 0},  {&_swigt__p_kmldom__LineStyle, _p_kmldom__LineStyleTo_p_kmldom__SubStyle, 0, 0},  {&_swigt__p_kmldom__ListStyle, _p_kmldom__ListStyleTo_p_kmldom__SubStyle, 0, 0},  {&_swigt__p_kmldom__BalloonStyle, _p_kmldom__BalloonStyleTo_p_kmldom__SubStyle, 0, 0},  {&_swigt__p_kmldom__IconStyle, _p_kmldom__IconStyleTo_p_kmldom__SubStyle, 0, 0},  {&_swigt__p_kmldom__ColorStyle, _p_kmldom__ColorStyleTo_p_kmldom__SubStyle, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__TimePrimitive[] = {  {&_swigt__p_kmldom__TimePrimitive, 0, 0, 0},  {&_swigt__p_kmldom__TimeSpan, _p_kmldom__TimeSpanTo_p_kmldom__TimePrimitive, 0, 0},  {&_swigt__p_kmldom__GxTimeSpan, _p_kmldom__GxTimeSpanTo_p_kmldom__TimePrimitive, 0, 0},  {&_swigt__p_kmldom__TimeStamp, _p_kmldom__TimeStampTo_p_kmldom__TimePrimitive, 0, 0},  {&_swigt__p_kmldom__GxTimeStamp, _p_kmldom__GxTimeStampTo_p_kmldom__TimePrimitive, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__TimeSpan[] = {  {&_swigt__p_kmldom__TimeSpan, 0, 0, 0},  {&_swigt__p_kmldom__GxTimeSpan, _p_kmldom__GxTimeSpanTo_p_kmldom__TimeSpan, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__TimeStamp[] = {  {&_swigt__p_kmldom__TimeStamp, 0, 0, 0},  {&_swigt__p_kmldom__GxTimeStamp, _p_kmldom__GxTimeStampTo_p_kmldom__TimeStamp, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__UnitsEnum[] = {  {&_swigt__p_kmldom__UnitsEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Update[] = {  {&_swigt__p_kmldom__Update, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__UpdateOperation[] = {  {&_swigt__p_kmldom__Change, _p_kmldom__ChangeTo_p_kmldom__UpdateOperation, 0, 0},  {&_swigt__p_kmldom__Create, _p_kmldom__CreateTo_p_kmldom__UpdateOperation, 0, 0},  {&_swigt__p_kmldom__Delete, _p_kmldom__DeleteTo_p_kmldom__UpdateOperation, 0, 0},  {&_swigt__p_kmldom__UpdateOperation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__Vec2[] = {  {&_swigt__p_kmldom__RotationXY, _p_kmldom__RotationXYTo_p_kmldom__Vec2, 0, 0},  {&_swigt__p_kmldom__Size, _p_kmldom__SizeTo_p_kmldom__Vec2, 0, 0},  {&_swigt__p_kmldom__OverlayXY, _p_kmldom__OverlayXYTo_p_kmldom__Vec2, 0, 0},  {&_swigt__p_kmldom__HotSpot, _p_kmldom__HotSpotTo_p_kmldom__Vec2, 0, 0},  {&_swigt__p_kmldom__ScreenXY, _p_kmldom__ScreenXYTo_p_kmldom__Vec2, 0, 0},  {&_swigt__p_kmldom__Vec2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ViewRefreshModeEnum[] = {  {&_swigt__p_kmldom__ViewRefreshModeEnum, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_kmldom__ViewVolume[] = {  {&_swigt__p_kmldom__ViewVolume, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wchar_t[] = {  {&_swigt__p_wchar_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_boost__intrusive_ptrT_kmlbase__Referent_t,
  _swigc__p_boost__intrusive_ptrT_kmlbase__XmlElement_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AbstractLatLonBox_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AbstractLink_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AbstractView_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Alias_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AtomAuthor_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AtomCategory_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AtomContent_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AtomEntry_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AtomFeed_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__AtomLink_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__BalloonStyle_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__BasicLink_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Camera_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Change_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ColorStyle_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Container_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Coordinates_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Create_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Data_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Delete_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Document_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Element_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ExtendedData_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Feature_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Field_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Folder_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Geometry_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GroundOverlay_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxAnimatedUpdate_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxFlyTo_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxLatLonQuad_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxPlaylist_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxSoundCue_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxTimeSpan_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxTimeStamp_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxTourControl_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxTourPrimitive_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxTour_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__GxWait_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__HotSpot_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__IconStyleIcon_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__IconStyle_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Icon_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ImagePyramid_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__InnerBoundaryIs_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ItemIcon_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Kml_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__LabelStyle_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__LatLonAltBox_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__LatLonBox_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__LineString_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__LineStyle_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__LinearRing_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__LinkSnippet_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Link_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ListStyle_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Location_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Lod_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__LookAt_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Metadata_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Model_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__MultiGeometry_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__NetworkLinkControl_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__NetworkLink_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Object_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Orientation_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__OuterBoundaryIs_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__OverlayXY_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Overlay_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Pair_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__PhotoOverlay_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Placemark_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Point_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__PolyStyle_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Polygon_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Region_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ResourceMap_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__RotationXY_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Scale_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__SchemaData_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Schema_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ScreenOverlay_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ScreenXY_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__SimpleData_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__SimpleField_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Size_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__SnippetCommon_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Snippet_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__StyleMap_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__StyleSelector_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Style_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__SubStyle_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__TimePrimitive_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__TimeSpan_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__TimeStamp_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__UpdateOperation_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Update_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Url_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__Vec2_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__ViewVolume_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__XalAddressDetails_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__XalAdministrativeArea_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__XalCountry_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__XalLocality_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__XalPostalCode_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__XalSubAdministrativeArea_t,
  _swigc__p_boost__intrusive_ptrT_kmldom__XalThoroughfare_t,
  _swigc__p_char,
  _swigc__p_int,
  _swigc__p_kmlbase__Color32,
  _swigc__p_kmlbase__Referent,
  _swigc__p_kmlbase__Vec3,
  _swigc__p_kmlbase__XmlElement,
  _swigc__p_kmlbase__XmlElementPtr,
  _swigc__p_kmldom__AbstractLatLonBox,
  _swigc__p_kmldom__AbstractView,
  _swigc__p_kmldom__Alias,
  _swigc__p_kmldom__AltitudeModeEnum,
  _swigc__p_kmldom__AtomAuthor,
  _swigc__p_kmldom__AtomLink,
  _swigc__p_kmldom__BalloonStyle,
  _swigc__p_kmldom__BasicLink,
  _swigc__p_kmldom__Camera,
  _swigc__p_kmldom__Change,
  _swigc__p_kmldom__ColorModeEnum,
  _swigc__p_kmldom__ColorStyle,
  _swigc__p_kmldom__Container,
  _swigc__p_kmldom__Coordinates,
  _swigc__p_kmldom__Create,
  _swigc__p_kmldom__Data,
  _swigc__p_kmldom__Delete,
  _swigc__p_kmldom__DisplayModeEnum,
  _swigc__p_kmldom__Document,
  _swigc__p_kmldom__Element,
  _swigc__p_kmldom__ExtendedData,
  _swigc__p_kmldom__Feature,
  _swigc__p_kmldom__Folder,
  _swigc__p_kmldom__Geometry,
  _swigc__p_kmldom__GridOriginEnum,
  _swigc__p_kmldom__GroundOverlay,
  _swigc__p_kmldom__GxAltitudeModeEnum,
  _swigc__p_kmldom__GxAnimatedUpdate,
  _swigc__p_kmldom__GxFlyTo,
  _swigc__p_kmldom__GxFlyToModeEnum,
  _swigc__p_kmldom__GxLatLonQuad,
  _swigc__p_kmldom__GxPlayModeEnum,
  _swigc__p_kmldom__GxPlaylist,
  _swigc__p_kmldom__GxSoundCue,
  _swigc__p_kmldom__GxTimeSpan,
  _swigc__p_kmldom__GxTimeStamp,
  _swigc__p_kmldom__GxTour,
  _swigc__p_kmldom__GxTourControl,
  _swigc__p_kmldom__GxTourPrimitive,
  _swigc__p_kmldom__GxWait,
  _swigc__p_kmldom__HotSpot,
  _swigc__p_kmldom__Icon,
  _swigc__p_kmldom__IconStyle,
  _swigc__p_kmldom__IconStyleIcon,
  _swigc__p_kmldom__ImagePyramid,
  _swigc__p_kmldom__InnerBoundaryIs,
  _swigc__p_kmldom__ItemIcon,
  _swigc__p_kmldom__ItemIconStateEnum,
  _swigc__p_kmldom__Kml,
  _swigc__p_kmldom__KmlDomType,
  _swigc__p_kmldom__KmlFactory,
  _swigc__p_kmldom__LabelStyle,
  _swigc__p_kmldom__LatLonAltBox,
  _swigc__p_kmldom__LatLonBox,
  _swigc__p_kmldom__LineString,
  _swigc__p_kmldom__LineStyle,
  _swigc__p_kmldom__LinearRing,
  _swigc__p_kmldom__Link,
  _swigc__p_kmldom__LinkSnippet,
  _swigc__p_kmldom__ListItemTypeEnum,
  _swigc__p_kmldom__ListStyle,
  _swigc__p_kmldom__Location,
  _swigc__p_kmldom__Lod,
  _swigc__p_kmldom__LookAt,
  _swigc__p_kmldom__Model,
  _swigc__p_kmldom__MultiGeometry,
  _swigc__p_kmldom__NetworkLink,
  _swigc__p_kmldom__NetworkLinkControl,
  _swigc__p_kmldom__Object,
  _swigc__p_kmldom__Orientation,
  _swigc__p_kmldom__OuterBoundaryIs,
  _swigc__p_kmldom__Overlay,
  _swigc__p_kmldom__OverlayXY,
  _swigc__p_kmldom__Pair,
  _swigc__p_kmldom__PhotoOverlay,
  _swigc__p_kmldom__Placemark,
  _swigc__p_kmldom__Point,
  _swigc__p_kmldom__PolyStyle,
  _swigc__p_kmldom__Polygon,
  _swigc__p_kmldom__RefreshModeEnum,
  _swigc__p_kmldom__Region,
  _swigc__p_kmldom__ResourceMap,
  _swigc__p_kmldom__RotationXY,
  _swigc__p_kmldom__Scale,
  _swigc__p_kmldom__Schema,
  _swigc__p_kmldom__SchemaData,
  _swigc__p_kmldom__ScreenOverlay,
  _swigc__p_kmldom__ScreenXY,
  _swigc__p_kmldom__ShapeEnum,
  _swigc__p_kmldom__SimpleData,
  _swigc__p_kmldom__SimpleField,
  _swigc__p_kmldom__Size,
  _swigc__p_kmldom__Snippet,
  _swigc__p_kmldom__SnippetCommon,
  _swigc__p_kmldom__Style,
  _swigc__p_kmldom__StyleMap,
  _swigc__p_kmldom__StyleSelector,
  _swigc__p_kmldom__StyleStateEnum,
  _swigc__p_kmldom__SubStyle,
  _swigc__p_kmldom__TimePrimitive,
  _swigc__p_kmldom__TimeSpan,
  _swigc__p_kmldom__TimeStamp,
  _swigc__p_kmldom__UnitsEnum,
  _swigc__p_kmldom__Update,
  _swigc__p_kmldom__UpdateOperation,
  _swigc__p_kmldom__Vec2,
  _swigc__p_kmldom__ViewRefreshModeEnum,
  _swigc__p_kmldom__ViewVolume,
  _swigc__p_long,
  _swigc__p_long_long,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_wchar_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(&PyType_Type, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
#endif
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      /* for Python 3 we already assigned the ob_type in PyVarObject_HEAD_INIT() */
#if PY_VERSION_HEX < 0x03000000
      varlink_type.ob_type = &PyType_Type;
#endif
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d;  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  SWIG_Python_SetConstant(d, "Type_Unknown",SWIG_From_int(static_cast< int >(kmldom::Type_Unknown)));
  SWIG_Python_SetConstant(d, "Type_ColorStyle",SWIG_From_int(static_cast< int >(kmldom::Type_ColorStyle)));
  SWIG_Python_SetConstant(d, "Type_Container",SWIG_From_int(static_cast< int >(kmldom::Type_Container)));
  SWIG_Python_SetConstant(d, "Type_Feature",SWIG_From_int(static_cast< int >(kmldom::Type_Feature)));
  SWIG_Python_SetConstant(d, "Type_Geometry",SWIG_From_int(static_cast< int >(kmldom::Type_Geometry)));
  SWIG_Python_SetConstant(d, "Type_AbstractLatLonBox",SWIG_From_int(static_cast< int >(kmldom::Type_AbstractLatLonBox)));
  SWIG_Python_SetConstant(d, "Type_Object",SWIG_From_int(static_cast< int >(kmldom::Type_Object)));
  SWIG_Python_SetConstant(d, "Type_Overlay",SWIG_From_int(static_cast< int >(kmldom::Type_Overlay)));
  SWIG_Python_SetConstant(d, "Type_StyleSelector",SWIG_From_int(static_cast< int >(kmldom::Type_StyleSelector)));
  SWIG_Python_SetConstant(d, "Type_SubStyle",SWIG_From_int(static_cast< int >(kmldom::Type_SubStyle)));
  SWIG_Python_SetConstant(d, "Type_TimePrimitive",SWIG_From_int(static_cast< int >(kmldom::Type_TimePrimitive)));
  SWIG_Python_SetConstant(d, "Type_AbstractView",SWIG_From_int(static_cast< int >(kmldom::Type_AbstractView)));
  SWIG_Python_SetConstant(d, "Type_BasicLink",SWIG_From_int(static_cast< int >(kmldom::Type_BasicLink)));
  SWIG_Python_SetConstant(d, "Type_Vec2",SWIG_From_int(static_cast< int >(kmldom::Type_Vec2)));
  SWIG_Python_SetConstant(d, "Type_Alias",SWIG_From_int(static_cast< int >(kmldom::Type_Alias)));
  SWIG_Python_SetConstant(d, "Type_BalloonStyle",SWIG_From_int(static_cast< int >(kmldom::Type_BalloonStyle)));
  SWIG_Python_SetConstant(d, "Type_Camera",SWIG_From_int(static_cast< int >(kmldom::Type_Camera)));
  SWIG_Python_SetConstant(d, "Type_Change",SWIG_From_int(static_cast< int >(kmldom::Type_Change)));
  SWIG_Python_SetConstant(d, "Type_Create",SWIG_From_int(static_cast< int >(kmldom::Type_Create)));
  SWIG_Python_SetConstant(d, "Type_Data",SWIG_From_int(static_cast< int >(kmldom::Type_Data)));
  SWIG_Python_SetConstant(d, "Type_Delete",SWIG_From_int(static_cast< int >(kmldom::Type_Delete)));
  SWIG_Python_SetConstant(d, "Type_Document",SWIG_From_int(static_cast< int >(kmldom::Type_Document)));
  SWIG_Python_SetConstant(d, "Type_ExtendedData",SWIG_From_int(static_cast< int >(kmldom::Type_ExtendedData)));
  SWIG_Python_SetConstant(d, "Type_Folder",SWIG_From_int(static_cast< int >(kmldom::Type_Folder)));
  SWIG_Python_SetConstant(d, "Type_GroundOverlay",SWIG_From_int(static_cast< int >(kmldom::Type_GroundOverlay)));
  SWIG_Python_SetConstant(d, "Type_Icon",SWIG_From_int(static_cast< int >(kmldom::Type_Icon)));
  SWIG_Python_SetConstant(d, "Type_IconStyle",SWIG_From_int(static_cast< int >(kmldom::Type_IconStyle)));
  SWIG_Python_SetConstant(d, "Type_IconStyleIcon",SWIG_From_int(static_cast< int >(kmldom::Type_IconStyleIcon)));
  SWIG_Python_SetConstant(d, "Type_ImagePyramid",SWIG_From_int(static_cast< int >(kmldom::Type_ImagePyramid)));
  SWIG_Python_SetConstant(d, "Type_ItemIcon",SWIG_From_int(static_cast< int >(kmldom::Type_ItemIcon)));
  SWIG_Python_SetConstant(d, "Type_LabelStyle",SWIG_From_int(static_cast< int >(kmldom::Type_LabelStyle)));
  SWIG_Python_SetConstant(d, "Type_LatLonAltBox",SWIG_From_int(static_cast< int >(kmldom::Type_LatLonAltBox)));
  SWIG_Python_SetConstant(d, "Type_LatLonBox",SWIG_From_int(static_cast< int >(kmldom::Type_LatLonBox)));
  SWIG_Python_SetConstant(d, "Type_LineString",SWIG_From_int(static_cast< int >(kmldom::Type_LineString)));
  SWIG_Python_SetConstant(d, "Type_LineStyle",SWIG_From_int(static_cast< int >(kmldom::Type_LineStyle)));
  SWIG_Python_SetConstant(d, "Type_LinearRing",SWIG_From_int(static_cast< int >(kmldom::Type_LinearRing)));
  SWIG_Python_SetConstant(d, "Type_Link",SWIG_From_int(static_cast< int >(kmldom::Type_Link)));
  SWIG_Python_SetConstant(d, "Type_ListStyle",SWIG_From_int(static_cast< int >(kmldom::Type_ListStyle)));
  SWIG_Python_SetConstant(d, "Type_Location",SWIG_From_int(static_cast< int >(kmldom::Type_Location)));
  SWIG_Python_SetConstant(d, "Type_Lod",SWIG_From_int(static_cast< int >(kmldom::Type_Lod)));
  SWIG_Python_SetConstant(d, "Type_LookAt",SWIG_From_int(static_cast< int >(kmldom::Type_LookAt)));
  SWIG_Python_SetConstant(d, "Type_Metadata",SWIG_From_int(static_cast< int >(kmldom::Type_Metadata)));
  SWIG_Python_SetConstant(d, "Type_Model",SWIG_From_int(static_cast< int >(kmldom::Type_Model)));
  SWIG_Python_SetConstant(d, "Type_MultiGeometry",SWIG_From_int(static_cast< int >(kmldom::Type_MultiGeometry)));
  SWIG_Python_SetConstant(d, "Type_NetworkLink",SWIG_From_int(static_cast< int >(kmldom::Type_NetworkLink)));
  SWIG_Python_SetConstant(d, "Type_NetworkLinkControl",SWIG_From_int(static_cast< int >(kmldom::Type_NetworkLinkControl)));
  SWIG_Python_SetConstant(d, "Type_Orientation",SWIG_From_int(static_cast< int >(kmldom::Type_Orientation)));
  SWIG_Python_SetConstant(d, "Type_Pair",SWIG_From_int(static_cast< int >(kmldom::Type_Pair)));
  SWIG_Python_SetConstant(d, "Type_PhotoOverlay",SWIG_From_int(static_cast< int >(kmldom::Type_PhotoOverlay)));
  SWIG_Python_SetConstant(d, "Type_Placemark",SWIG_From_int(static_cast< int >(kmldom::Type_Placemark)));
  SWIG_Python_SetConstant(d, "Type_Point",SWIG_From_int(static_cast< int >(kmldom::Type_Point)));
  SWIG_Python_SetConstant(d, "Type_PolyStyle",SWIG_From_int(static_cast< int >(kmldom::Type_PolyStyle)));
  SWIG_Python_SetConstant(d, "Type_Polygon",SWIG_From_int(static_cast< int >(kmldom::Type_Polygon)));
  SWIG_Python_SetConstant(d, "Type_Region",SWIG_From_int(static_cast< int >(kmldom::Type_Region)));
  SWIG_Python_SetConstant(d, "Type_ResourceMap",SWIG_From_int(static_cast< int >(kmldom::Type_ResourceMap)));
  SWIG_Python_SetConstant(d, "Type_Scale",SWIG_From_int(static_cast< int >(kmldom::Type_Scale)));
  SWIG_Python_SetConstant(d, "Type_Schema",SWIG_From_int(static_cast< int >(kmldom::Type_Schema)));
  SWIG_Python_SetConstant(d, "Type_SchemaData",SWIG_From_int(static_cast< int >(kmldom::Type_SchemaData)));
  SWIG_Python_SetConstant(d, "Type_ScreenOverlay",SWIG_From_int(static_cast< int >(kmldom::Type_ScreenOverlay)));
  SWIG_Python_SetConstant(d, "Type_SimpleData",SWIG_From_int(static_cast< int >(kmldom::Type_SimpleData)));
  SWIG_Python_SetConstant(d, "Type_SimpleField",SWIG_From_int(static_cast< int >(kmldom::Type_SimpleField)));
  SWIG_Python_SetConstant(d, "Type_Snippet",SWIG_From_int(static_cast< int >(kmldom::Type_Snippet)));
  SWIG_Python_SetConstant(d, "Type_Style",SWIG_From_int(static_cast< int >(kmldom::Type_Style)));
  SWIG_Python_SetConstant(d, "Type_StyleMap",SWIG_From_int(static_cast< int >(kmldom::Type_StyleMap)));
  SWIG_Python_SetConstant(d, "Type_TimeSpan",SWIG_From_int(static_cast< int >(kmldom::Type_TimeSpan)));
  SWIG_Python_SetConstant(d, "Type_TimeStamp",SWIG_From_int(static_cast< int >(kmldom::Type_TimeStamp)));
  SWIG_Python_SetConstant(d, "Type_Update",SWIG_From_int(static_cast< int >(kmldom::Type_Update)));
  SWIG_Python_SetConstant(d, "Type_Url",SWIG_From_int(static_cast< int >(kmldom::Type_Url)));
  SWIG_Python_SetConstant(d, "Type_ViewVolume",SWIG_From_int(static_cast< int >(kmldom::Type_ViewVolume)));
  SWIG_Python_SetConstant(d, "Type_address",SWIG_From_int(static_cast< int >(kmldom::Type_address)));
  SWIG_Python_SetConstant(d, "Type_altitude",SWIG_From_int(static_cast< int >(kmldom::Type_altitude)));
  SWIG_Python_SetConstant(d, "Type_altitudeMode",SWIG_From_int(static_cast< int >(kmldom::Type_altitudeMode)));
  SWIG_Python_SetConstant(d, "Type_altitudeModeGroup",SWIG_From_int(static_cast< int >(kmldom::Type_altitudeModeGroup)));
  SWIG_Python_SetConstant(d, "Type_begin",SWIG_From_int(static_cast< int >(kmldom::Type_begin)));
  SWIG_Python_SetConstant(d, "Type_bgColor",SWIG_From_int(static_cast< int >(kmldom::Type_bgColor)));
  SWIG_Python_SetConstant(d, "Type_bottomFov",SWIG_From_int(static_cast< int >(kmldom::Type_bottomFov)));
  SWIG_Python_SetConstant(d, "Type_color",SWIG_From_int(static_cast< int >(kmldom::Type_color)));
  SWIG_Python_SetConstant(d, "Type_colorMode",SWIG_From_int(static_cast< int >(kmldom::Type_colorMode)));
  SWIG_Python_SetConstant(d, "Type_cookie",SWIG_From_int(static_cast< int >(kmldom::Type_cookie)));
  SWIG_Python_SetConstant(d, "Type_coordinates",SWIG_From_int(static_cast< int >(kmldom::Type_coordinates)));
  SWIG_Python_SetConstant(d, "Type_description",SWIG_From_int(static_cast< int >(kmldom::Type_description)));
  SWIG_Python_SetConstant(d, "Type_displayMode",SWIG_From_int(static_cast< int >(kmldom::Type_displayMode)));
  SWIG_Python_SetConstant(d, "Type_displayName",SWIG_From_int(static_cast< int >(kmldom::Type_displayName)));
  SWIG_Python_SetConstant(d, "Type_drawOrder",SWIG_From_int(static_cast< int >(kmldom::Type_drawOrder)));
  SWIG_Python_SetConstant(d, "Type_east",SWIG_From_int(static_cast< int >(kmldom::Type_east)));
  SWIG_Python_SetConstant(d, "Type_end",SWIG_From_int(static_cast< int >(kmldom::Type_end)));
  SWIG_Python_SetConstant(d, "Type_expires",SWIG_From_int(static_cast< int >(kmldom::Type_expires)));
  SWIG_Python_SetConstant(d, "Type_extrude",SWIG_From_int(static_cast< int >(kmldom::Type_extrude)));
  SWIG_Python_SetConstant(d, "Type_fill",SWIG_From_int(static_cast< int >(kmldom::Type_fill)));
  SWIG_Python_SetConstant(d, "Type_flyToView",SWIG_From_int(static_cast< int >(kmldom::Type_flyToView)));
  SWIG_Python_SetConstant(d, "Type_gridOrigin",SWIG_From_int(static_cast< int >(kmldom::Type_gridOrigin)));
  SWIG_Python_SetConstant(d, "Type_heading",SWIG_From_int(static_cast< int >(kmldom::Type_heading)));
  SWIG_Python_SetConstant(d, "Type_hotSpot",SWIG_From_int(static_cast< int >(kmldom::Type_hotSpot)));
  SWIG_Python_SetConstant(d, "Type_href",SWIG_From_int(static_cast< int >(kmldom::Type_href)));
  SWIG_Python_SetConstant(d, "Type_httpQuery",SWIG_From_int(static_cast< int >(kmldom::Type_httpQuery)));
  SWIG_Python_SetConstant(d, "Type_innerBoundaryIs",SWIG_From_int(static_cast< int >(kmldom::Type_innerBoundaryIs)));
  SWIG_Python_SetConstant(d, "Type_key",SWIG_From_int(static_cast< int >(kmldom::Type_key)));
  SWIG_Python_SetConstant(d, "Type_kml",SWIG_From_int(static_cast< int >(kmldom::Type_kml)));
  SWIG_Python_SetConstant(d, "Type_latitude",SWIG_From_int(static_cast< int >(kmldom::Type_latitude)));
  SWIG_Python_SetConstant(d, "Type_leftFov",SWIG_From_int(static_cast< int >(kmldom::Type_leftFov)));
  SWIG_Python_SetConstant(d, "Type_linkDescription",SWIG_From_int(static_cast< int >(kmldom::Type_linkDescription)));
  SWIG_Python_SetConstant(d, "Type_linkName",SWIG_From_int(static_cast< int >(kmldom::Type_linkName)));
  SWIG_Python_SetConstant(d, "Type_linkSnippet",SWIG_From_int(static_cast< int >(kmldom::Type_linkSnippet)));
  SWIG_Python_SetConstant(d, "Type_listItemType",SWIG_From_int(static_cast< int >(kmldom::Type_listItemType)));
  SWIG_Python_SetConstant(d, "Type_longitude",SWIG_From_int(static_cast< int >(kmldom::Type_longitude)));
  SWIG_Python_SetConstant(d, "Type_maxAltitude",SWIG_From_int(static_cast< int >(kmldom::Type_maxAltitude)));
  SWIG_Python_SetConstant(d, "Type_maxFadeExtent",SWIG_From_int(static_cast< int >(kmldom::Type_maxFadeExtent)));
  SWIG_Python_SetConstant(d, "Type_maxHeight",SWIG_From_int(static_cast< int >(kmldom::Type_maxHeight)));
  SWIG_Python_SetConstant(d, "Type_maxLength",SWIG_From_int(static_cast< int >(kmldom::Type_maxLength)));
  SWIG_Python_SetConstant(d, "Type_maxLodPixels",SWIG_From_int(static_cast< int >(kmldom::Type_maxLodPixels)));
  SWIG_Python_SetConstant(d, "Type_maxSessionLength",SWIG_From_int(static_cast< int >(kmldom::Type_maxSessionLength)));
  SWIG_Python_SetConstant(d, "Type_maxSnippetLines",SWIG_From_int(static_cast< int >(kmldom::Type_maxSnippetLines)));
  SWIG_Python_SetConstant(d, "Type_maxWidth",SWIG_From_int(static_cast< int >(kmldom::Type_maxWidth)));
  SWIG_Python_SetConstant(d, "Type_message",SWIG_From_int(static_cast< int >(kmldom::Type_message)));
  SWIG_Python_SetConstant(d, "Type_minAltitude",SWIG_From_int(static_cast< int >(kmldom::Type_minAltitude)));
  SWIG_Python_SetConstant(d, "Type_minFadeExtent",SWIG_From_int(static_cast< int >(kmldom::Type_minFadeExtent)));
  SWIG_Python_SetConstant(d, "Type_minLodPixels",SWIG_From_int(static_cast< int >(kmldom::Type_minLodPixels)));
  SWIG_Python_SetConstant(d, "Type_minRefreshPeriod",SWIG_From_int(static_cast< int >(kmldom::Type_minRefreshPeriod)));
  SWIG_Python_SetConstant(d, "Type_name",SWIG_From_int(static_cast< int >(kmldom::Type_name)));
  SWIG_Python_SetConstant(d, "Type_near",SWIG_From_int(static_cast< int >(kmldom::Type_near)));
  SWIG_Python_SetConstant(d, "Type_north",SWIG_From_int(static_cast< int >(kmldom::Type_north)));
  SWIG_Python_SetConstant(d, "Type_open",SWIG_From_int(static_cast< int >(kmldom::Type_open)));
  SWIG_Python_SetConstant(d, "Type_outerBoundaryIs",SWIG_From_int(static_cast< int >(kmldom::Type_outerBoundaryIs)));
  SWIG_Python_SetConstant(d, "Type_outline",SWIG_From_int(static_cast< int >(kmldom::Type_outline)));
  SWIG_Python_SetConstant(d, "Type_overlayXY",SWIG_From_int(static_cast< int >(kmldom::Type_overlayXY)));
  SWIG_Python_SetConstant(d, "Type_phoneNumber",SWIG_From_int(static_cast< int >(kmldom::Type_phoneNumber)));
  SWIG_Python_SetConstant(d, "Type_range",SWIG_From_int(static_cast< int >(kmldom::Type_range)));
  SWIG_Python_SetConstant(d, "Type_refreshInterval",SWIG_From_int(static_cast< int >(kmldom::Type_refreshInterval)));
  SWIG_Python_SetConstant(d, "Type_refreshMode",SWIG_From_int(static_cast< int >(kmldom::Type_refreshMode)));
  SWIG_Python_SetConstant(d, "Type_refreshVisibility",SWIG_From_int(static_cast< int >(kmldom::Type_refreshVisibility)));
  SWIG_Python_SetConstant(d, "Type_rightFov",SWIG_From_int(static_cast< int >(kmldom::Type_rightFov)));
  SWIG_Python_SetConstant(d, "Type_roll",SWIG_From_int(static_cast< int >(kmldom::Type_roll)));
  SWIG_Python_SetConstant(d, "Type_rotation",SWIG_From_int(static_cast< int >(kmldom::Type_rotation)));
  SWIG_Python_SetConstant(d, "Type_rotationXY",SWIG_From_int(static_cast< int >(kmldom::Type_rotationXY)));
  SWIG_Python_SetConstant(d, "Type_scale",SWIG_From_int(static_cast< int >(kmldom::Type_scale)));
  SWIG_Python_SetConstant(d, "Type_screenXY",SWIG_From_int(static_cast< int >(kmldom::Type_screenXY)));
  SWIG_Python_SetConstant(d, "Type_shape",SWIG_From_int(static_cast< int >(kmldom::Type_shape)));
  SWIG_Python_SetConstant(d, "Type_size",SWIG_From_int(static_cast< int >(kmldom::Type_size)));
  SWIG_Python_SetConstant(d, "Type_snippet",SWIG_From_int(static_cast< int >(kmldom::Type_snippet)));
  SWIG_Python_SetConstant(d, "Type_sourceHref",SWIG_From_int(static_cast< int >(kmldom::Type_sourceHref)));
  SWIG_Python_SetConstant(d, "Type_south",SWIG_From_int(static_cast< int >(kmldom::Type_south)));
  SWIG_Python_SetConstant(d, "Type_state",SWIG_From_int(static_cast< int >(kmldom::Type_state)));
  SWIG_Python_SetConstant(d, "Type_styleUrl",SWIG_From_int(static_cast< int >(kmldom::Type_styleUrl)));
  SWIG_Python_SetConstant(d, "Type_targetHref",SWIG_From_int(static_cast< int >(kmldom::Type_targetHref)));
  SWIG_Python_SetConstant(d, "Type_tessellate",SWIG_From_int(static_cast< int >(kmldom::Type_tessellate)));
  SWIG_Python_SetConstant(d, "Type_text",SWIG_From_int(static_cast< int >(kmldom::Type_text)));
  SWIG_Python_SetConstant(d, "Type_textColor",SWIG_From_int(static_cast< int >(kmldom::Type_textColor)));
  SWIG_Python_SetConstant(d, "Type_tileSize",SWIG_From_int(static_cast< int >(kmldom::Type_tileSize)));
  SWIG_Python_SetConstant(d, "Type_tilt",SWIG_From_int(static_cast< int >(kmldom::Type_tilt)));
  SWIG_Python_SetConstant(d, "Type_topFov",SWIG_From_int(static_cast< int >(kmldom::Type_topFov)));
  SWIG_Python_SetConstant(d, "Type_units",SWIG_From_int(static_cast< int >(kmldom::Type_units)));
  SWIG_Python_SetConstant(d, "Type_value",SWIG_From_int(static_cast< int >(kmldom::Type_value)));
  SWIG_Python_SetConstant(d, "Type_viewBoundScale",SWIG_From_int(static_cast< int >(kmldom::Type_viewBoundScale)));
  SWIG_Python_SetConstant(d, "Type_viewFormat",SWIG_From_int(static_cast< int >(kmldom::Type_viewFormat)));
  SWIG_Python_SetConstant(d, "Type_viewRefreshMode",SWIG_From_int(static_cast< int >(kmldom::Type_viewRefreshMode)));
  SWIG_Python_SetConstant(d, "Type_viewRefreshTime",SWIG_From_int(static_cast< int >(kmldom::Type_viewRefreshTime)));
  SWIG_Python_SetConstant(d, "Type_visibility",SWIG_From_int(static_cast< int >(kmldom::Type_visibility)));
  SWIG_Python_SetConstant(d, "Type_west",SWIG_From_int(static_cast< int >(kmldom::Type_west)));
  SWIG_Python_SetConstant(d, "Type_when",SWIG_From_int(static_cast< int >(kmldom::Type_when)));
  SWIG_Python_SetConstant(d, "Type_width",SWIG_From_int(static_cast< int >(kmldom::Type_width)));
  SWIG_Python_SetConstant(d, "Type_x",SWIG_From_int(static_cast< int >(kmldom::Type_x)));
  SWIG_Python_SetConstant(d, "Type_y",SWIG_From_int(static_cast< int >(kmldom::Type_y)));
  SWIG_Python_SetConstant(d, "Type_z",SWIG_From_int(static_cast< int >(kmldom::Type_z)));
  SWIG_Python_SetConstant(d, "Type_AtomAuthor",SWIG_From_int(static_cast< int >(kmldom::Type_AtomAuthor)));
  SWIG_Python_SetConstant(d, "Type_AtomCategory",SWIG_From_int(static_cast< int >(kmldom::Type_AtomCategory)));
  SWIG_Python_SetConstant(d, "Type_AtomContent",SWIG_From_int(static_cast< int >(kmldom::Type_AtomContent)));
  SWIG_Python_SetConstant(d, "Type_AtomEntry",SWIG_From_int(static_cast< int >(kmldom::Type_AtomEntry)));
  SWIG_Python_SetConstant(d, "Type_AtomFeed",SWIG_From_int(static_cast< int >(kmldom::Type_AtomFeed)));
  SWIG_Python_SetConstant(d, "Type_AtomLink",SWIG_From_int(static_cast< int >(kmldom::Type_AtomLink)));
  SWIG_Python_SetConstant(d, "Type_atomEmail",SWIG_From_int(static_cast< int >(kmldom::Type_atomEmail)));
  SWIG_Python_SetConstant(d, "Type_atomId",SWIG_From_int(static_cast< int >(kmldom::Type_atomId)));
  SWIG_Python_SetConstant(d, "Type_atomLabel",SWIG_From_int(static_cast< int >(kmldom::Type_atomLabel)));
  SWIG_Python_SetConstant(d, "Type_atomName",SWIG_From_int(static_cast< int >(kmldom::Type_atomName)));
  SWIG_Python_SetConstant(d, "Type_atomScheme",SWIG_From_int(static_cast< int >(kmldom::Type_atomScheme)));
  SWIG_Python_SetConstant(d, "Type_atomSummary",SWIG_From_int(static_cast< int >(kmldom::Type_atomSummary)));
  SWIG_Python_SetConstant(d, "Type_atomTerm",SWIG_From_int(static_cast< int >(kmldom::Type_atomTerm)));
  SWIG_Python_SetConstant(d, "Type_atomTitle",SWIG_From_int(static_cast< int >(kmldom::Type_atomTitle)));
  SWIG_Python_SetConstant(d, "Type_atomUpdated",SWIG_From_int(static_cast< int >(kmldom::Type_atomUpdated)));
  SWIG_Python_SetConstant(d, "Type_atomUri",SWIG_From_int(static_cast< int >(kmldom::Type_atomUri)));
  SWIG_Python_SetConstant(d, "Type_XalAddressDetails",SWIG_From_int(static_cast< int >(kmldom::Type_XalAddressDetails)));
  SWIG_Python_SetConstant(d, "Type_XalAdministrativeArea",SWIG_From_int(static_cast< int >(kmldom::Type_XalAdministrativeArea)));
  SWIG_Python_SetConstant(d, "Type_XalCountry",SWIG_From_int(static_cast< int >(kmldom::Type_XalCountry)));
  SWIG_Python_SetConstant(d, "Type_XalLocality",SWIG_From_int(static_cast< int >(kmldom::Type_XalLocality)));
  SWIG_Python_SetConstant(d, "Type_XalPostalCode",SWIG_From_int(static_cast< int >(kmldom::Type_XalPostalCode)));
  SWIG_Python_SetConstant(d, "Type_XalSubAdministrativeArea",SWIG_From_int(static_cast< int >(kmldom::Type_XalSubAdministrativeArea)));
  SWIG_Python_SetConstant(d, "Type_XalThoroughfare",SWIG_From_int(static_cast< int >(kmldom::Type_XalThoroughfare)));
  SWIG_Python_SetConstant(d, "Type_xalAdministrativeAreaName",SWIG_From_int(static_cast< int >(kmldom::Type_xalAdministrativeAreaName)));
  SWIG_Python_SetConstant(d, "Type_xalCountryNameCode",SWIG_From_int(static_cast< int >(kmldom::Type_xalCountryNameCode)));
  SWIG_Python_SetConstant(d, "Type_xalLocalityName",SWIG_From_int(static_cast< int >(kmldom::Type_xalLocalityName)));
  SWIG_Python_SetConstant(d, "Type_xalPostalCodeNumber",SWIG_From_int(static_cast< int >(kmldom::Type_xalPostalCodeNumber)));
  SWIG_Python_SetConstant(d, "Type_xalSubAdministrativeAreaName",SWIG_From_int(static_cast< int >(kmldom::Type_xalSubAdministrativeAreaName)));
  SWIG_Python_SetConstant(d, "Type_xalThoroughfareName",SWIG_From_int(static_cast< int >(kmldom::Type_xalThoroughfareName)));
  SWIG_Python_SetConstant(d, "Type_xalThoroughfareNumber",SWIG_From_int(static_cast< int >(kmldom::Type_xalThoroughfareNumber)));
  SWIG_Python_SetConstant(d, "Type_GxTourPrimitive",SWIG_From_int(static_cast< int >(kmldom::Type_GxTourPrimitive)));
  SWIG_Python_SetConstant(d, "Type_GxAnimatedUpdate",SWIG_From_int(static_cast< int >(kmldom::Type_GxAnimatedUpdate)));
  SWIG_Python_SetConstant(d, "Type_GxFlyTo",SWIG_From_int(static_cast< int >(kmldom::Type_GxFlyTo)));
  SWIG_Python_SetConstant(d, "Type_GxLatLonQuad",SWIG_From_int(static_cast< int >(kmldom::Type_GxLatLonQuad)));
  SWIG_Python_SetConstant(d, "Type_GxPlaylist",SWIG_From_int(static_cast< int >(kmldom::Type_GxPlaylist)));
  SWIG_Python_SetConstant(d, "Type_GxSoundCue",SWIG_From_int(static_cast< int >(kmldom::Type_GxSoundCue)));
  SWIG_Python_SetConstant(d, "Type_GxTimeSpan",SWIG_From_int(static_cast< int >(kmldom::Type_GxTimeSpan)));
  SWIG_Python_SetConstant(d, "Type_GxTimeStamp",SWIG_From_int(static_cast< int >(kmldom::Type_GxTimeStamp)));
  SWIG_Python_SetConstant(d, "Type_GxTour",SWIG_From_int(static_cast< int >(kmldom::Type_GxTour)));
  SWIG_Python_SetConstant(d, "Type_GxTourControl",SWIG_From_int(static_cast< int >(kmldom::Type_GxTourControl)));
  SWIG_Python_SetConstant(d, "Type_GxWait",SWIG_From_int(static_cast< int >(kmldom::Type_GxWait)));
  SWIG_Python_SetConstant(d, "Type_GxAltitudeMode",SWIG_From_int(static_cast< int >(kmldom::Type_GxAltitudeMode)));
  SWIG_Python_SetConstant(d, "Type_GxBalloonVisibility",SWIG_From_int(static_cast< int >(kmldom::Type_GxBalloonVisibility)));
  SWIG_Python_SetConstant(d, "Type_GxDuration",SWIG_From_int(static_cast< int >(kmldom::Type_GxDuration)));
  SWIG_Python_SetConstant(d, "Type_GxFlyToMode",SWIG_From_int(static_cast< int >(kmldom::Type_GxFlyToMode)));
  SWIG_Python_SetConstant(d, "Type_GxPlayMode",SWIG_From_int(static_cast< int >(kmldom::Type_GxPlayMode)));
  SWIG_Python_SetConstant(d, "Type_Invalid",SWIG_From_int(static_cast< int >(kmldom::Type_Invalid)));
  SWIG_Python_SetConstant(d, "ALTITUDEMODE_CLAMPTOGROUND",SWIG_From_int(static_cast< int >(kmldom::ALTITUDEMODE_CLAMPTOGROUND)));
  SWIG_Python_SetConstant(d, "ALTITUDEMODE_RELATIVETOGROUND",SWIG_From_int(static_cast< int >(kmldom::ALTITUDEMODE_RELATIVETOGROUND)));
  SWIG_Python_SetConstant(d, "ALTITUDEMODE_ABSOLUTE",SWIG_From_int(static_cast< int >(kmldom::ALTITUDEMODE_ABSOLUTE)));
  SWIG_Python_SetConstant(d, "COLORMODE_NORMAL",SWIG_From_int(static_cast< int >(kmldom::COLORMODE_NORMAL)));
  SWIG_Python_SetConstant(d, "COLORMODE_RANDOM",SWIG_From_int(static_cast< int >(kmldom::COLORMODE_RANDOM)));
  SWIG_Python_SetConstant(d, "DISPLAYMODE_DEFAULT",SWIG_From_int(static_cast< int >(kmldom::DISPLAYMODE_DEFAULT)));
  SWIG_Python_SetConstant(d, "DISPLAYMODE_HIDE",SWIG_From_int(static_cast< int >(kmldom::DISPLAYMODE_HIDE)));
  SWIG_Python_SetConstant(d, "GRIDORIGIN_LOWERLEFT",SWIG_From_int(static_cast< int >(kmldom::GRIDORIGIN_LOWERLEFT)));
  SWIG_Python_SetConstant(d, "GRIDORIGIN_UPPERLEFT",SWIG_From_int(static_cast< int >(kmldom::GRIDORIGIN_UPPERLEFT)));
  SWIG_Python_SetConstant(d, "ITEMICONSTATE_OPEN",SWIG_From_int(static_cast< int >(kmldom::ITEMICONSTATE_OPEN)));
  SWIG_Python_SetConstant(d, "ITEMICONSTATE_CLOSED",SWIG_From_int(static_cast< int >(kmldom::ITEMICONSTATE_CLOSED)));
  SWIG_Python_SetConstant(d, "ITEMICONSTATE_ERROR",SWIG_From_int(static_cast< int >(kmldom::ITEMICONSTATE_ERROR)));
  SWIG_Python_SetConstant(d, "ITEMICONSTATE_FETCHING0",SWIG_From_int(static_cast< int >(kmldom::ITEMICONSTATE_FETCHING0)));
  SWIG_Python_SetConstant(d, "ITEMICONSTATE_FETCHING1",SWIG_From_int(static_cast< int >(kmldom::ITEMICONSTATE_FETCHING1)));
  SWIG_Python_SetConstant(d, "ITEMICONSTATE_FETCHING2",SWIG_From_int(static_cast< int >(kmldom::ITEMICONSTATE_FETCHING2)));
  SWIG_Python_SetConstant(d, "LISTITEMTYPE_CHECK",SWIG_From_int(static_cast< int >(kmldom::LISTITEMTYPE_CHECK)));
  SWIG_Python_SetConstant(d, "LISTITEMTYPE_RADIOFOLDER",SWIG_From_int(static_cast< int >(kmldom::LISTITEMTYPE_RADIOFOLDER)));
  SWIG_Python_SetConstant(d, "LISTITEMTYPE_CHECKOFFONLY",SWIG_From_int(static_cast< int >(kmldom::LISTITEMTYPE_CHECKOFFONLY)));
  SWIG_Python_SetConstant(d, "LISTITEMTYPE_CHECKHIDECHILDREN",SWIG_From_int(static_cast< int >(kmldom::LISTITEMTYPE_CHECKHIDECHILDREN)));
  SWIG_Python_SetConstant(d, "REFRESHMODE_ONCHANGE",SWIG_From_int(static_cast< int >(kmldom::REFRESHMODE_ONCHANGE)));
  SWIG_Python_SetConstant(d, "REFRESHMODE_ONINTERVAL",SWIG_From_int(static_cast< int >(kmldom::REFRESHMODE_ONINTERVAL)));
  SWIG_Python_SetConstant(d, "REFRESHMODE_ONEXPIRE",SWIG_From_int(static_cast< int >(kmldom::REFRESHMODE_ONEXPIRE)));
  SWIG_Python_SetConstant(d, "SHAPE_RECTANGLE",SWIG_From_int(static_cast< int >(kmldom::SHAPE_RECTANGLE)));
  SWIG_Python_SetConstant(d, "SHAPE_CYLINDER",SWIG_From_int(static_cast< int >(kmldom::SHAPE_CYLINDER)));
  SWIG_Python_SetConstant(d, "SHAPE_SPHERE",SWIG_From_int(static_cast< int >(kmldom::SHAPE_SPHERE)));
  SWIG_Python_SetConstant(d, "STYLESTATE_NORMAL",SWIG_From_int(static_cast< int >(kmldom::STYLESTATE_NORMAL)));
  SWIG_Python_SetConstant(d, "STYLESTATE_HIGHLIGHT",SWIG_From_int(static_cast< int >(kmldom::STYLESTATE_HIGHLIGHT)));
  SWIG_Python_SetConstant(d, "UNITS_FRACTION",SWIG_From_int(static_cast< int >(kmldom::UNITS_FRACTION)));
  SWIG_Python_SetConstant(d, "UNITS_PIXELS",SWIG_From_int(static_cast< int >(kmldom::UNITS_PIXELS)));
  SWIG_Python_SetConstant(d, "UNITS_INSETPIXELS",SWIG_From_int(static_cast< int >(kmldom::UNITS_INSETPIXELS)));
  SWIG_Python_SetConstant(d, "VIEWREFRESHMODE_NEVER",SWIG_From_int(static_cast< int >(kmldom::VIEWREFRESHMODE_NEVER)));
  SWIG_Python_SetConstant(d, "VIEWREFRESHMODE_ONREQUEST",SWIG_From_int(static_cast< int >(kmldom::VIEWREFRESHMODE_ONREQUEST)));
  SWIG_Python_SetConstant(d, "VIEWREFRESHMODE_ONSTOP",SWIG_From_int(static_cast< int >(kmldom::VIEWREFRESHMODE_ONSTOP)));
  SWIG_Python_SetConstant(d, "VIEWREFRESHMODE_ONREGION",SWIG_From_int(static_cast< int >(kmldom::VIEWREFRESHMODE_ONREGION)));
  SWIG_Python_SetConstant(d, "GX_ALTITUDEMODE_CLAMPTOSEAFLOOR",SWIG_From_int(static_cast< int >(kmldom::GX_ALTITUDEMODE_CLAMPTOSEAFLOOR)));
  SWIG_Python_SetConstant(d, "GX_ALTITUDEMODE_RELATIVETOSEAFLOOR",SWIG_From_int(static_cast< int >(kmldom::GX_ALTITUDEMODE_RELATIVETOSEAFLOOR)));
  SWIG_Python_SetConstant(d, "GX_FLYTOMODE_BOUNCE",SWIG_From_int(static_cast< int >(kmldom::GX_FLYTOMODE_BOUNCE)));
  SWIG_Python_SetConstant(d, "GX_FLYTOMODE_SMOOTH",SWIG_From_int(static_cast< int >(kmldom::GX_FLYTOMODE_SMOOTH)));
  SWIG_Python_SetConstant(d, "GX_PLAYMODE_PAUSE",SWIG_From_int(static_cast< int >(kmldom::GX_PLAYMODE_PAUSE)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

