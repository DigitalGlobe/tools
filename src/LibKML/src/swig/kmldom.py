# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.39
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_kmldom', [dirname(__file__)])
        except ImportError:
            import _kmldom
            return _kmldom
        if fp is not None:
            try:
                _mod = imp.load_module('_kmldom', fp, pathname, description)
            finally:
                fp.close()
                return _mod
    _kmldom = swig_import_helper()
    del swig_import_helper
else:
    import _kmldom
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


import kmlbase
Type_Unknown = _kmldom.Type_Unknown
Type_ColorStyle = _kmldom.Type_ColorStyle
Type_Container = _kmldom.Type_Container
Type_Feature = _kmldom.Type_Feature
Type_Geometry = _kmldom.Type_Geometry
Type_AbstractLatLonBox = _kmldom.Type_AbstractLatLonBox
Type_Object = _kmldom.Type_Object
Type_Overlay = _kmldom.Type_Overlay
Type_StyleSelector = _kmldom.Type_StyleSelector
Type_SubStyle = _kmldom.Type_SubStyle
Type_TimePrimitive = _kmldom.Type_TimePrimitive
Type_AbstractView = _kmldom.Type_AbstractView
Type_BasicLink = _kmldom.Type_BasicLink
Type_Vec2 = _kmldom.Type_Vec2
Type_Alias = _kmldom.Type_Alias
Type_BalloonStyle = _kmldom.Type_BalloonStyle
Type_Camera = _kmldom.Type_Camera
Type_Change = _kmldom.Type_Change
Type_Create = _kmldom.Type_Create
Type_Data = _kmldom.Type_Data
Type_Delete = _kmldom.Type_Delete
Type_Document = _kmldom.Type_Document
Type_ExtendedData = _kmldom.Type_ExtendedData
Type_Folder = _kmldom.Type_Folder
Type_GroundOverlay = _kmldom.Type_GroundOverlay
Type_Icon = _kmldom.Type_Icon
Type_IconStyle = _kmldom.Type_IconStyle
Type_IconStyleIcon = _kmldom.Type_IconStyleIcon
Type_ImagePyramid = _kmldom.Type_ImagePyramid
Type_ItemIcon = _kmldom.Type_ItemIcon
Type_LabelStyle = _kmldom.Type_LabelStyle
Type_LatLonAltBox = _kmldom.Type_LatLonAltBox
Type_LatLonBox = _kmldom.Type_LatLonBox
Type_LineString = _kmldom.Type_LineString
Type_LineStyle = _kmldom.Type_LineStyle
Type_LinearRing = _kmldom.Type_LinearRing
Type_Link = _kmldom.Type_Link
Type_ListStyle = _kmldom.Type_ListStyle
Type_Location = _kmldom.Type_Location
Type_Lod = _kmldom.Type_Lod
Type_LookAt = _kmldom.Type_LookAt
Type_Metadata = _kmldom.Type_Metadata
Type_Model = _kmldom.Type_Model
Type_MultiGeometry = _kmldom.Type_MultiGeometry
Type_NetworkLink = _kmldom.Type_NetworkLink
Type_NetworkLinkControl = _kmldom.Type_NetworkLinkControl
Type_Orientation = _kmldom.Type_Orientation
Type_Pair = _kmldom.Type_Pair
Type_PhotoOverlay = _kmldom.Type_PhotoOverlay
Type_Placemark = _kmldom.Type_Placemark
Type_Point = _kmldom.Type_Point
Type_PolyStyle = _kmldom.Type_PolyStyle
Type_Polygon = _kmldom.Type_Polygon
Type_Region = _kmldom.Type_Region
Type_ResourceMap = _kmldom.Type_ResourceMap
Type_Scale = _kmldom.Type_Scale
Type_Schema = _kmldom.Type_Schema
Type_SchemaData = _kmldom.Type_SchemaData
Type_ScreenOverlay = _kmldom.Type_ScreenOverlay
Type_SimpleData = _kmldom.Type_SimpleData
Type_SimpleField = _kmldom.Type_SimpleField
Type_Snippet = _kmldom.Type_Snippet
Type_Style = _kmldom.Type_Style
Type_StyleMap = _kmldom.Type_StyleMap
Type_TimeSpan = _kmldom.Type_TimeSpan
Type_TimeStamp = _kmldom.Type_TimeStamp
Type_Update = _kmldom.Type_Update
Type_Url = _kmldom.Type_Url
Type_ViewVolume = _kmldom.Type_ViewVolume
Type_address = _kmldom.Type_address
Type_altitude = _kmldom.Type_altitude
Type_altitudeMode = _kmldom.Type_altitudeMode
Type_altitudeModeGroup = _kmldom.Type_altitudeModeGroup
Type_begin = _kmldom.Type_begin
Type_bgColor = _kmldom.Type_bgColor
Type_bottomFov = _kmldom.Type_bottomFov
Type_color = _kmldom.Type_color
Type_colorMode = _kmldom.Type_colorMode
Type_cookie = _kmldom.Type_cookie
Type_coordinates = _kmldom.Type_coordinates
Type_description = _kmldom.Type_description
Type_displayMode = _kmldom.Type_displayMode
Type_displayName = _kmldom.Type_displayName
Type_drawOrder = _kmldom.Type_drawOrder
Type_east = _kmldom.Type_east
Type_end = _kmldom.Type_end
Type_expires = _kmldom.Type_expires
Type_extrude = _kmldom.Type_extrude
Type_fill = _kmldom.Type_fill
Type_flyToView = _kmldom.Type_flyToView
Type_gridOrigin = _kmldom.Type_gridOrigin
Type_heading = _kmldom.Type_heading
Type_hotSpot = _kmldom.Type_hotSpot
Type_href = _kmldom.Type_href
Type_httpQuery = _kmldom.Type_httpQuery
Type_innerBoundaryIs = _kmldom.Type_innerBoundaryIs
Type_key = _kmldom.Type_key
Type_kml = _kmldom.Type_kml
Type_latitude = _kmldom.Type_latitude
Type_leftFov = _kmldom.Type_leftFov
Type_linkDescription = _kmldom.Type_linkDescription
Type_linkName = _kmldom.Type_linkName
Type_linkSnippet = _kmldom.Type_linkSnippet
Type_listItemType = _kmldom.Type_listItemType
Type_longitude = _kmldom.Type_longitude
Type_maxAltitude = _kmldom.Type_maxAltitude
Type_maxFadeExtent = _kmldom.Type_maxFadeExtent
Type_maxHeight = _kmldom.Type_maxHeight
Type_maxLength = _kmldom.Type_maxLength
Type_maxLodPixels = _kmldom.Type_maxLodPixels
Type_maxSessionLength = _kmldom.Type_maxSessionLength
Type_maxSnippetLines = _kmldom.Type_maxSnippetLines
Type_maxWidth = _kmldom.Type_maxWidth
Type_message = _kmldom.Type_message
Type_minAltitude = _kmldom.Type_minAltitude
Type_minFadeExtent = _kmldom.Type_minFadeExtent
Type_minLodPixels = _kmldom.Type_minLodPixels
Type_minRefreshPeriod = _kmldom.Type_minRefreshPeriod
Type_name = _kmldom.Type_name
Type_near = _kmldom.Type_near
Type_north = _kmldom.Type_north
Type_open = _kmldom.Type_open
Type_outerBoundaryIs = _kmldom.Type_outerBoundaryIs
Type_outline = _kmldom.Type_outline
Type_overlayXY = _kmldom.Type_overlayXY
Type_phoneNumber = _kmldom.Type_phoneNumber
Type_range = _kmldom.Type_range
Type_refreshInterval = _kmldom.Type_refreshInterval
Type_refreshMode = _kmldom.Type_refreshMode
Type_refreshVisibility = _kmldom.Type_refreshVisibility
Type_rightFov = _kmldom.Type_rightFov
Type_roll = _kmldom.Type_roll
Type_rotation = _kmldom.Type_rotation
Type_rotationXY = _kmldom.Type_rotationXY
Type_scale = _kmldom.Type_scale
Type_screenXY = _kmldom.Type_screenXY
Type_shape = _kmldom.Type_shape
Type_size = _kmldom.Type_size
Type_snippet = _kmldom.Type_snippet
Type_sourceHref = _kmldom.Type_sourceHref
Type_south = _kmldom.Type_south
Type_state = _kmldom.Type_state
Type_styleUrl = _kmldom.Type_styleUrl
Type_targetHref = _kmldom.Type_targetHref
Type_tessellate = _kmldom.Type_tessellate
Type_text = _kmldom.Type_text
Type_textColor = _kmldom.Type_textColor
Type_tileSize = _kmldom.Type_tileSize
Type_tilt = _kmldom.Type_tilt
Type_topFov = _kmldom.Type_topFov
Type_units = _kmldom.Type_units
Type_value = _kmldom.Type_value
Type_viewBoundScale = _kmldom.Type_viewBoundScale
Type_viewFormat = _kmldom.Type_viewFormat
Type_viewRefreshMode = _kmldom.Type_viewRefreshMode
Type_viewRefreshTime = _kmldom.Type_viewRefreshTime
Type_visibility = _kmldom.Type_visibility
Type_west = _kmldom.Type_west
Type_when = _kmldom.Type_when
Type_width = _kmldom.Type_width
Type_x = _kmldom.Type_x
Type_y = _kmldom.Type_y
Type_z = _kmldom.Type_z
Type_AtomAuthor = _kmldom.Type_AtomAuthor
Type_AtomCategory = _kmldom.Type_AtomCategory
Type_AtomContent = _kmldom.Type_AtomContent
Type_AtomEntry = _kmldom.Type_AtomEntry
Type_AtomFeed = _kmldom.Type_AtomFeed
Type_AtomLink = _kmldom.Type_AtomLink
Type_atomEmail = _kmldom.Type_atomEmail
Type_atomId = _kmldom.Type_atomId
Type_atomLabel = _kmldom.Type_atomLabel
Type_atomName = _kmldom.Type_atomName
Type_atomScheme = _kmldom.Type_atomScheme
Type_atomSummary = _kmldom.Type_atomSummary
Type_atomTerm = _kmldom.Type_atomTerm
Type_atomTitle = _kmldom.Type_atomTitle
Type_atomUpdated = _kmldom.Type_atomUpdated
Type_atomUri = _kmldom.Type_atomUri
Type_XalAddressDetails = _kmldom.Type_XalAddressDetails
Type_XalAdministrativeArea = _kmldom.Type_XalAdministrativeArea
Type_XalCountry = _kmldom.Type_XalCountry
Type_XalLocality = _kmldom.Type_XalLocality
Type_XalPostalCode = _kmldom.Type_XalPostalCode
Type_XalSubAdministrativeArea = _kmldom.Type_XalSubAdministrativeArea
Type_XalThoroughfare = _kmldom.Type_XalThoroughfare
Type_xalAdministrativeAreaName = _kmldom.Type_xalAdministrativeAreaName
Type_xalCountryNameCode = _kmldom.Type_xalCountryNameCode
Type_xalLocalityName = _kmldom.Type_xalLocalityName
Type_xalPostalCodeNumber = _kmldom.Type_xalPostalCodeNumber
Type_xalSubAdministrativeAreaName = _kmldom.Type_xalSubAdministrativeAreaName
Type_xalThoroughfareName = _kmldom.Type_xalThoroughfareName
Type_xalThoroughfareNumber = _kmldom.Type_xalThoroughfareNumber
Type_GxTourPrimitive = _kmldom.Type_GxTourPrimitive
Type_GxAnimatedUpdate = _kmldom.Type_GxAnimatedUpdate
Type_GxFlyTo = _kmldom.Type_GxFlyTo
Type_GxLatLonQuad = _kmldom.Type_GxLatLonQuad
Type_GxPlaylist = _kmldom.Type_GxPlaylist
Type_GxSoundCue = _kmldom.Type_GxSoundCue
Type_GxTimeSpan = _kmldom.Type_GxTimeSpan
Type_GxTimeStamp = _kmldom.Type_GxTimeStamp
Type_GxTour = _kmldom.Type_GxTour
Type_GxTourControl = _kmldom.Type_GxTourControl
Type_GxWait = _kmldom.Type_GxWait
Type_GxAltitudeMode = _kmldom.Type_GxAltitudeMode
Type_GxBalloonVisibility = _kmldom.Type_GxBalloonVisibility
Type_GxDuration = _kmldom.Type_GxDuration
Type_GxFlyToMode = _kmldom.Type_GxFlyToMode
Type_GxPlayMode = _kmldom.Type_GxPlayMode
Type_Invalid = _kmldom.Type_Invalid
ALTITUDEMODE_CLAMPTOGROUND = _kmldom.ALTITUDEMODE_CLAMPTOGROUND
ALTITUDEMODE_RELATIVETOGROUND = _kmldom.ALTITUDEMODE_RELATIVETOGROUND
ALTITUDEMODE_ABSOLUTE = _kmldom.ALTITUDEMODE_ABSOLUTE
COLORMODE_NORMAL = _kmldom.COLORMODE_NORMAL
COLORMODE_RANDOM = _kmldom.COLORMODE_RANDOM
DISPLAYMODE_DEFAULT = _kmldom.DISPLAYMODE_DEFAULT
DISPLAYMODE_HIDE = _kmldom.DISPLAYMODE_HIDE
GRIDORIGIN_LOWERLEFT = _kmldom.GRIDORIGIN_LOWERLEFT
GRIDORIGIN_UPPERLEFT = _kmldom.GRIDORIGIN_UPPERLEFT
ITEMICONSTATE_OPEN = _kmldom.ITEMICONSTATE_OPEN
ITEMICONSTATE_CLOSED = _kmldom.ITEMICONSTATE_CLOSED
ITEMICONSTATE_ERROR = _kmldom.ITEMICONSTATE_ERROR
ITEMICONSTATE_FETCHING0 = _kmldom.ITEMICONSTATE_FETCHING0
ITEMICONSTATE_FETCHING1 = _kmldom.ITEMICONSTATE_FETCHING1
ITEMICONSTATE_FETCHING2 = _kmldom.ITEMICONSTATE_FETCHING2
LISTITEMTYPE_CHECK = _kmldom.LISTITEMTYPE_CHECK
LISTITEMTYPE_RADIOFOLDER = _kmldom.LISTITEMTYPE_RADIOFOLDER
LISTITEMTYPE_CHECKOFFONLY = _kmldom.LISTITEMTYPE_CHECKOFFONLY
LISTITEMTYPE_CHECKHIDECHILDREN = _kmldom.LISTITEMTYPE_CHECKHIDECHILDREN
REFRESHMODE_ONCHANGE = _kmldom.REFRESHMODE_ONCHANGE
REFRESHMODE_ONINTERVAL = _kmldom.REFRESHMODE_ONINTERVAL
REFRESHMODE_ONEXPIRE = _kmldom.REFRESHMODE_ONEXPIRE
SHAPE_RECTANGLE = _kmldom.SHAPE_RECTANGLE
SHAPE_CYLINDER = _kmldom.SHAPE_CYLINDER
SHAPE_SPHERE = _kmldom.SHAPE_SPHERE
STYLESTATE_NORMAL = _kmldom.STYLESTATE_NORMAL
STYLESTATE_HIGHLIGHT = _kmldom.STYLESTATE_HIGHLIGHT
UNITS_FRACTION = _kmldom.UNITS_FRACTION
UNITS_PIXELS = _kmldom.UNITS_PIXELS
UNITS_INSETPIXELS = _kmldom.UNITS_INSETPIXELS
VIEWREFRESHMODE_NEVER = _kmldom.VIEWREFRESHMODE_NEVER
VIEWREFRESHMODE_ONREQUEST = _kmldom.VIEWREFRESHMODE_ONREQUEST
VIEWREFRESHMODE_ONSTOP = _kmldom.VIEWREFRESHMODE_ONSTOP
VIEWREFRESHMODE_ONREGION = _kmldom.VIEWREFRESHMODE_ONREGION
GX_ALTITUDEMODE_CLAMPTOSEAFLOOR = _kmldom.GX_ALTITUDEMODE_CLAMPTOSEAFLOOR
GX_ALTITUDEMODE_RELATIVETOSEAFLOOR = _kmldom.GX_ALTITUDEMODE_RELATIVETOSEAFLOOR
GX_FLYTOMODE_BOUNCE = _kmldom.GX_FLYTOMODE_BOUNCE
GX_FLYTOMODE_SMOOTH = _kmldom.GX_FLYTOMODE_SMOOTH
GX_PLAYMODE_PAUSE = _kmldom.GX_PLAYMODE_PAUSE
class Referent(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Referent, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Referent, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _kmldom.delete_Referent
    __del__ = lambda self : None;
Referent_swigregister = _kmldom.Referent_swigregister
Referent_swigregister(Referent)

class XmlElement(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XmlElement, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XmlElement, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.XmlElement_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.XmlElement_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_XmlElement
    __del__ = lambda self : None;
XmlElement_swigregister = _kmldom.XmlElement_swigregister
XmlElement_swigregister(XmlElement)

def XmlElement_SWIGSharedPtrUpcast(*args):
  return _kmldom.XmlElement_SWIGSharedPtrUpcast(*args)
XmlElement_SWIGSharedPtrUpcast = _kmldom.XmlElement_SWIGSharedPtrUpcast

class Element(XmlElement):
    __swig_setmethods__ = {}
    for _s in [XmlElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Element, name, value)
    __swig_getmethods__ = {}
    for _s in [XmlElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Element, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def Type(self): return _kmldom.Element_Type(self)
    def IsA(self, *args): return _kmldom.Element_IsA(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Element_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Element_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Element
    __del__ = lambda self : None;
Element_swigregister = _kmldom.Element_swigregister
Element_swigregister(Element)

def Element_SWIGSharedPtrUpcast(*args):
  return _kmldom.Element_SWIGSharedPtrUpcast(*args)
Element_SWIGSharedPtrUpcast = _kmldom.Element_SWIGSharedPtrUpcast

class Coordinates(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Coordinates, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Coordinates, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_latlng(self, *args): return _kmldom.Coordinates_add_latlng(self, *args)
    def add_latlngalt(self, *args): return _kmldom.Coordinates_add_latlngalt(self, *args)
    def get_coordinates_array_size(self): return _kmldom.Coordinates_get_coordinates_array_size(self)
    def get_coordinates_array_at(self, *args): return _kmldom.Coordinates_get_coordinates_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Coordinates_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Coordinates_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Coordinates
    __del__ = lambda self : None;
Coordinates_swigregister = _kmldom.Coordinates_swigregister
Coordinates_swigregister(Coordinates)

def Coordinates_SWIGSharedPtrUpcast(*args):
  return _kmldom.Coordinates_SWIGSharedPtrUpcast(*args)
Coordinates_SWIGSharedPtrUpcast = _kmldom.Coordinates_SWIGSharedPtrUpcast

class Vec2(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Vec2, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Vec2, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_x(self): return _kmldom.Vec2_get_x(self)
    def set_x(self, *args): return _kmldom.Vec2_set_x(self, *args)
    def has_x(self): return _kmldom.Vec2_has_x(self)
    def clear_x(self): return _kmldom.Vec2_clear_x(self)
    def get_y(self): return _kmldom.Vec2_get_y(self)
    def set_y(self, *args): return _kmldom.Vec2_set_y(self, *args)
    def has_y(self): return _kmldom.Vec2_has_y(self)
    def clear_y(self): return _kmldom.Vec2_clear_y(self)
    def get_xunits(self): return _kmldom.Vec2_get_xunits(self)
    def set_xunits(self, *args): return _kmldom.Vec2_set_xunits(self, *args)
    def has_xunits(self): return _kmldom.Vec2_has_xunits(self)
    def clear_xunits(self): return _kmldom.Vec2_clear_xunits(self)
    def get_yunits(self): return _kmldom.Vec2_get_yunits(self)
    def set_yunits(self, *args): return _kmldom.Vec2_set_yunits(self, *args)
    def has_yunits(self): return _kmldom.Vec2_has_yunits(self)
    def clear_yunits(self): return _kmldom.Vec2_clear_yunits(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Vec2_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Vec2_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Vec2
    __del__ = lambda self : None;
Vec2_swigregister = _kmldom.Vec2_swigregister
Vec2_swigregister(Vec2)

def Vec2_SWIGSharedPtrUpcast(*args):
  return _kmldom.Vec2_SWIGSharedPtrUpcast(*args)
Vec2_SWIGSharedPtrUpcast = _kmldom.Vec2_SWIGSharedPtrUpcast

class Object(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Object, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Object, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_id(self): return _kmldom.Object_get_id(self)
    def set_id(self, *args): return _kmldom.Object_set_id(self, *args)
    def has_id(self): return _kmldom.Object_has_id(self)
    def clear_id(self): return _kmldom.Object_clear_id(self)
    def get_targetid(self): return _kmldom.Object_get_targetid(self)
    def set_targetid(self, *args): return _kmldom.Object_set_targetid(self, *args)
    def has_targetid(self): return _kmldom.Object_has_targetid(self)
    def clear_targetid(self): return _kmldom.Object_clear_targetid(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Object_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Object_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Object
    __del__ = lambda self : None;
Object_swigregister = _kmldom.Object_swigregister
Object_swigregister(Object)

def Object_SWIGSharedPtrUpcast(*args):
  return _kmldom.Object_SWIGSharedPtrUpcast(*args)
Object_SWIGSharedPtrUpcast = _kmldom.Object_SWIGSharedPtrUpcast

class SubStyle(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubStyle, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SubStyle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.SubStyle_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.SubStyle_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_SubStyle
    __del__ = lambda self : None;
SubStyle_swigregister = _kmldom.SubStyle_swigregister
SubStyle_swigregister(SubStyle)

def SubStyle_SWIGSharedPtrUpcast(*args):
  return _kmldom.SubStyle_SWIGSharedPtrUpcast(*args)
SubStyle_SWIGSharedPtrUpcast = _kmldom.SubStyle_SWIGSharedPtrUpcast

class ColorStyle(SubStyle):
    __swig_setmethods__ = {}
    for _s in [SubStyle]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ColorStyle, name, value)
    __swig_getmethods__ = {}
    for _s in [SubStyle]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ColorStyle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_color(self): return _kmldom.ColorStyle_get_color(self)
    def set_color(self, *args): return _kmldom.ColorStyle_set_color(self, *args)
    def has_color(self): return _kmldom.ColorStyle_has_color(self)
    def clear_color(self): return _kmldom.ColorStyle_clear_color(self)
    def get_colormode(self): return _kmldom.ColorStyle_get_colormode(self)
    def set_colormode(self, *args): return _kmldom.ColorStyle_set_colormode(self, *args)
    def has_colormode(self): return _kmldom.ColorStyle_has_colormode(self)
    def clear_colormode(self): return _kmldom.ColorStyle_clear_colormode(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ColorStyle_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ColorStyle_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ColorStyle
    __del__ = lambda self : None;
ColorStyle_swigregister = _kmldom.ColorStyle_swigregister
ColorStyle_swigregister(ColorStyle)

def ColorStyle_SWIGSharedPtrUpcast(*args):
  return _kmldom.ColorStyle_SWIGSharedPtrUpcast(*args)
ColorStyle_SWIGSharedPtrUpcast = _kmldom.ColorStyle_SWIGSharedPtrUpcast

class SnippetCommon(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SnippetCommon, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SnippetCommon, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_text(self): return _kmldom.SnippetCommon_get_text(self)
    def set_text(self, *args): return _kmldom.SnippetCommon_set_text(self, *args)
    def has_text(self): return _kmldom.SnippetCommon_has_text(self)
    def clear_text(self): return _kmldom.SnippetCommon_clear_text(self)
    def get_maxlines(self): return _kmldom.SnippetCommon_get_maxlines(self)
    def set_maxlines(self, *args): return _kmldom.SnippetCommon_set_maxlines(self, *args)
    def has_maxlines(self): return _kmldom.SnippetCommon_has_maxlines(self)
    def clear_maxlines(self): return _kmldom.SnippetCommon_clear_maxlines(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.SnippetCommon_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.SnippetCommon_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_SnippetCommon
    __del__ = lambda self : None;
SnippetCommon_swigregister = _kmldom.SnippetCommon_swigregister
SnippetCommon_swigregister(SnippetCommon)

def SnippetCommon_SWIGSharedPtrUpcast(*args):
  return _kmldom.SnippetCommon_SWIGSharedPtrUpcast(*args)
SnippetCommon_SWIGSharedPtrUpcast = _kmldom.SnippetCommon_SWIGSharedPtrUpcast

class Snippet(SnippetCommon):
    __swig_setmethods__ = {}
    for _s in [SnippetCommon]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Snippet, name, value)
    __swig_getmethods__ = {}
    for _s in [SnippetCommon]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Snippet, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Snippet_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Snippet_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Snippet
    __del__ = lambda self : None;
Snippet_swigregister = _kmldom.Snippet_swigregister
Snippet_swigregister(Snippet)

def Snippet_SWIGSharedPtrUpcast(*args):
  return _kmldom.Snippet_SWIGSharedPtrUpcast(*args)
Snippet_SWIGSharedPtrUpcast = _kmldom.Snippet_SWIGSharedPtrUpcast

class LinkSnippet(SnippetCommon):
    __swig_setmethods__ = {}
    for _s in [SnippetCommon]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LinkSnippet, name, value)
    __swig_getmethods__ = {}
    for _s in [SnippetCommon]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LinkSnippet, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.LinkSnippet_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.LinkSnippet_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_LinkSnippet
    __del__ = lambda self : None;
LinkSnippet_swigregister = _kmldom.LinkSnippet_swigregister
LinkSnippet_swigregister(LinkSnippet)

def LinkSnippet_SWIGSharedPtrUpcast(*args):
  return _kmldom.LinkSnippet_SWIGSharedPtrUpcast(*args)
LinkSnippet_SWIGSharedPtrUpcast = _kmldom.LinkSnippet_SWIGSharedPtrUpcast

class AbstractView(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AbstractView, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AbstractView, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_gx_timeprimitive(self): return _kmldom.AbstractView_get_gx_timeprimitive(self)
    def has_gx_timeprimitive(self): return _kmldom.AbstractView_has_gx_timeprimitive(self)
    def set_gx_timeprimitive(self, *args): return _kmldom.AbstractView_set_gx_timeprimitive(self, *args)
    def clear_gx_timeprimitive(self): return _kmldom.AbstractView_clear_gx_timeprimitive(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.AbstractView_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.AbstractView_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_AbstractView
    __del__ = lambda self : None;
AbstractView_swigregister = _kmldom.AbstractView_swigregister
AbstractView_swigregister(AbstractView)

def AbstractView_SWIGSharedPtrUpcast(*args):
  return _kmldom.AbstractView_SWIGSharedPtrUpcast(*args)
AbstractView_SWIGSharedPtrUpcast = _kmldom.AbstractView_SWIGSharedPtrUpcast

class TimePrimitive(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TimePrimitive, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, TimePrimitive, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.TimePrimitive_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.TimePrimitive_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_TimePrimitive
    __del__ = lambda self : None;
TimePrimitive_swigregister = _kmldom.TimePrimitive_swigregister
TimePrimitive_swigregister(TimePrimitive)

def TimePrimitive_SWIGSharedPtrUpcast(*args):
  return _kmldom.TimePrimitive_SWIGSharedPtrUpcast(*args)
TimePrimitive_SWIGSharedPtrUpcast = _kmldom.TimePrimitive_SWIGSharedPtrUpcast

class StyleSelector(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StyleSelector, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, StyleSelector, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.StyleSelector_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.StyleSelector_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_StyleSelector
    __del__ = lambda self : None;
StyleSelector_swigregister = _kmldom.StyleSelector_swigregister
StyleSelector_swigregister(StyleSelector)

def StyleSelector_SWIGSharedPtrUpcast(*args):
  return _kmldom.StyleSelector_SWIGSharedPtrUpcast(*args)
StyleSelector_SWIGSharedPtrUpcast = _kmldom.StyleSelector_SWIGSharedPtrUpcast

class AbstractLatLonBox(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AbstractLatLonBox, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AbstractLatLonBox, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_north(self): return _kmldom.AbstractLatLonBox_get_north(self)
    def has_north(self): return _kmldom.AbstractLatLonBox_has_north(self)
    def set_north(self, *args): return _kmldom.AbstractLatLonBox_set_north(self, *args)
    def clear_north(self): return _kmldom.AbstractLatLonBox_clear_north(self)
    def get_south(self): return _kmldom.AbstractLatLonBox_get_south(self)
    def has_south(self): return _kmldom.AbstractLatLonBox_has_south(self)
    def set_south(self, *args): return _kmldom.AbstractLatLonBox_set_south(self, *args)
    def clear_south(self): return _kmldom.AbstractLatLonBox_clear_south(self)
    def get_east(self): return _kmldom.AbstractLatLonBox_get_east(self)
    def has_east(self): return _kmldom.AbstractLatLonBox_has_east(self)
    def set_east(self, *args): return _kmldom.AbstractLatLonBox_set_east(self, *args)
    def clear_east(self): return _kmldom.AbstractLatLonBox_clear_east(self)
    def get_west(self): return _kmldom.AbstractLatLonBox_get_west(self)
    def has_west(self): return _kmldom.AbstractLatLonBox_has_west(self)
    def set_west(self, *args): return _kmldom.AbstractLatLonBox_set_west(self, *args)
    def clear_west(self): return _kmldom.AbstractLatLonBox_clear_west(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.AbstractLatLonBox_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.AbstractLatLonBox_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_AbstractLatLonBox
    __del__ = lambda self : None;
AbstractLatLonBox_swigregister = _kmldom.AbstractLatLonBox_swigregister
AbstractLatLonBox_swigregister(AbstractLatLonBox)

def AbstractLatLonBox_SWIGSharedPtrUpcast(*args):
  return _kmldom.AbstractLatLonBox_SWIGSharedPtrUpcast(*args)
AbstractLatLonBox_SWIGSharedPtrUpcast = _kmldom.AbstractLatLonBox_SWIGSharedPtrUpcast

class LatLonAltBox(AbstractLatLonBox):
    __swig_setmethods__ = {}
    for _s in [AbstractLatLonBox]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LatLonAltBox, name, value)
    __swig_getmethods__ = {}
    for _s in [AbstractLatLonBox]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LatLonAltBox, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_minaltitude(self): return _kmldom.LatLonAltBox_get_minaltitude(self)
    def set_minaltitude(self, *args): return _kmldom.LatLonAltBox_set_minaltitude(self, *args)
    def has_minaltitude(self): return _kmldom.LatLonAltBox_has_minaltitude(self)
    def clear_minaltitude(self): return _kmldom.LatLonAltBox_clear_minaltitude(self)
    def get_maxaltitude(self): return _kmldom.LatLonAltBox_get_maxaltitude(self)
    def set_maxaltitude(self, *args): return _kmldom.LatLonAltBox_set_maxaltitude(self, *args)
    def has_maxaltitude(self): return _kmldom.LatLonAltBox_has_maxaltitude(self)
    def clear_maxaltitude(self): return _kmldom.LatLonAltBox_clear_maxaltitude(self)
    def get_altitudemode(self): return _kmldom.LatLonAltBox_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.LatLonAltBox_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.LatLonAltBox_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.LatLonAltBox_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.LatLonAltBox_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.LatLonAltBox_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.LatLonAltBox_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.LatLonAltBox_clear_gx_altitudemode(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.LatLonAltBox_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.LatLonAltBox_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_LatLonAltBox
    __del__ = lambda self : None;
LatLonAltBox_swigregister = _kmldom.LatLonAltBox_swigregister
LatLonAltBox_swigregister(LatLonAltBox)

def LatLonAltBox_SWIGSharedPtrUpcast(*args):
  return _kmldom.LatLonAltBox_SWIGSharedPtrUpcast(*args)
LatLonAltBox_SWIGSharedPtrUpcast = _kmldom.LatLonAltBox_SWIGSharedPtrUpcast

class Lod(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Lod, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Lod, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_minlodpixels(self): return _kmldom.Lod_get_minlodpixels(self)
    def set_minlodpixels(self, *args): return _kmldom.Lod_set_minlodpixels(self, *args)
    def has_minlodpixels(self): return _kmldom.Lod_has_minlodpixels(self)
    def clear_minlodpixels(self): return _kmldom.Lod_clear_minlodpixels(self)
    def get_maxlodpixels(self): return _kmldom.Lod_get_maxlodpixels(self)
    def set_maxlodpixels(self, *args): return _kmldom.Lod_set_maxlodpixels(self, *args)
    def has_maxlodpixels(self): return _kmldom.Lod_has_maxlodpixels(self)
    def clear_maxlodpixels(self): return _kmldom.Lod_clear_maxlodpixels(self)
    def get_minfadeextent(self): return _kmldom.Lod_get_minfadeextent(self)
    def set_minfadeextent(self, *args): return _kmldom.Lod_set_minfadeextent(self, *args)
    def has_minfadeextent(self): return _kmldom.Lod_has_minfadeextent(self)
    def clear_minfadeextent(self): return _kmldom.Lod_clear_minfadeextent(self)
    def get_maxfadeextent(self): return _kmldom.Lod_get_maxfadeextent(self)
    def set_maxfadeextent(self, *args): return _kmldom.Lod_set_maxfadeextent(self, *args)
    def has_maxfadeextent(self): return _kmldom.Lod_has_maxfadeextent(self)
    def clear_maxfadeextent(self): return _kmldom.Lod_clear_maxfadeextent(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Lod_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Lod_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Lod
    __del__ = lambda self : None;
Lod_swigregister = _kmldom.Lod_swigregister
Lod_swigregister(Lod)

def Lod_SWIGSharedPtrUpcast(*args):
  return _kmldom.Lod_SWIGSharedPtrUpcast(*args)
Lod_SWIGSharedPtrUpcast = _kmldom.Lod_SWIGSharedPtrUpcast

class Region(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Region, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Region, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_latlonaltbox(self): return _kmldom.Region_get_latlonaltbox(self)
    def set_latlonaltbox(self, *args): return _kmldom.Region_set_latlonaltbox(self, *args)
    def has_latlonaltbox(self): return _kmldom.Region_has_latlonaltbox(self)
    def clear_latlonaltbox(self): return _kmldom.Region_clear_latlonaltbox(self)
    def get_lod(self): return _kmldom.Region_get_lod(self)
    def set_lod(self, *args): return _kmldom.Region_set_lod(self, *args)
    def has_lod(self): return _kmldom.Region_has_lod(self)
    def clear_lod(self): return _kmldom.Region_clear_lod(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Region_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Region_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Region
    __del__ = lambda self : None;
Region_swigregister = _kmldom.Region_swigregister
Region_swigregister(Region)

def Region_SWIGSharedPtrUpcast(*args):
  return _kmldom.Region_SWIGSharedPtrUpcast(*args)
Region_SWIGSharedPtrUpcast = _kmldom.Region_SWIGSharedPtrUpcast

class ExtendedData(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ExtendedData, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ExtendedData, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_data(self, *args): return _kmldom.ExtendedData_add_data(self, *args)
    def get_data_array_size(self): return _kmldom.ExtendedData_get_data_array_size(self)
    def get_data_array_at(self, *args): return _kmldom.ExtendedData_get_data_array_at(self, *args)
    def add_schemadata(self, *args): return _kmldom.ExtendedData_add_schemadata(self, *args)
    def get_schemadata_array_size(self): return _kmldom.ExtendedData_get_schemadata_array_size(self)
    def get_schemadata_array_at(self, *args): return _kmldom.ExtendedData_get_schemadata_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ExtendedData_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ExtendedData_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ExtendedData
    __del__ = lambda self : None;
ExtendedData_swigregister = _kmldom.ExtendedData_swigregister
ExtendedData_swigregister(ExtendedData)

def ExtendedData_SWIGSharedPtrUpcast(*args):
  return _kmldom.ExtendedData_SWIGSharedPtrUpcast(*args)
ExtendedData_SWIGSharedPtrUpcast = _kmldom.ExtendedData_SWIGSharedPtrUpcast

class Feature(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Feature, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Feature, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_name(self): return _kmldom.Feature_get_name(self)
    def set_name(self, *args): return _kmldom.Feature_set_name(self, *args)
    def has_name(self): return _kmldom.Feature_has_name(self)
    def clear_name(self): return _kmldom.Feature_clear_name(self)
    def get_visibility(self): return _kmldom.Feature_get_visibility(self)
    def set_visibility(self, *args): return _kmldom.Feature_set_visibility(self, *args)
    def has_visibility(self): return _kmldom.Feature_has_visibility(self)
    def clear_visibility(self): return _kmldom.Feature_clear_visibility(self)
    def get_open(self): return _kmldom.Feature_get_open(self)
    def set_open(self, *args): return _kmldom.Feature_set_open(self, *args)
    def has_open(self): return _kmldom.Feature_has_open(self)
    def clear_open(self): return _kmldom.Feature_clear_open(self)
    def get_atomauthor(self): return _kmldom.Feature_get_atomauthor(self)
    def has_atomauthor(self): return _kmldom.Feature_has_atomauthor(self)
    def set_atomauthor(self, *args): return _kmldom.Feature_set_atomauthor(self, *args)
    def clear_atomauthor(self): return _kmldom.Feature_clear_atomauthor(self)
    def get_atomlink(self): return _kmldom.Feature_get_atomlink(self)
    def has_atomlink(self): return _kmldom.Feature_has_atomlink(self)
    def set_atomlink(self, *args): return _kmldom.Feature_set_atomlink(self, *args)
    def clear_atomlink(self): return _kmldom.Feature_clear_atomlink(self)
    def get_address(self): return _kmldom.Feature_get_address(self)
    def set_address(self, *args): return _kmldom.Feature_set_address(self, *args)
    def has_address(self): return _kmldom.Feature_has_address(self)
    def clear_address(self): return _kmldom.Feature_clear_address(self)
    def get_phonenumber(self): return _kmldom.Feature_get_phonenumber(self)
    def set_phonenumber(self, *args): return _kmldom.Feature_set_phonenumber(self, *args)
    def has_phonenumber(self): return _kmldom.Feature_has_phonenumber(self)
    def clear_phonenumber(self): return _kmldom.Feature_clear_phonenumber(self)
    def get_snippet(self): return _kmldom.Feature_get_snippet(self)
    def set_snippet(self, *args): return _kmldom.Feature_set_snippet(self, *args)
    def has_snippet(self): return _kmldom.Feature_has_snippet(self)
    def clear_snippet(self): return _kmldom.Feature_clear_snippet(self)
    def get_description(self): return _kmldom.Feature_get_description(self)
    def set_description(self, *args): return _kmldom.Feature_set_description(self, *args)
    def has_description(self): return _kmldom.Feature_has_description(self)
    def clear_description(self): return _kmldom.Feature_clear_description(self)
    def get_abstractview(self): return _kmldom.Feature_get_abstractview(self)
    def set_abstractview(self, *args): return _kmldom.Feature_set_abstractview(self, *args)
    def has_abstractview(self): return _kmldom.Feature_has_abstractview(self)
    def clear_abstractview(self): return _kmldom.Feature_clear_abstractview(self)
    def get_timeprimitive(self): return _kmldom.Feature_get_timeprimitive(self)
    def set_timeprimitive(self, *args): return _kmldom.Feature_set_timeprimitive(self, *args)
    def has_timeprimitive(self): return _kmldom.Feature_has_timeprimitive(self)
    def clear_timeprimitive(self): return _kmldom.Feature_clear_timeprimitive(self)
    def get_styleurl(self): return _kmldom.Feature_get_styleurl(self)
    def set_styleurl(self, *args): return _kmldom.Feature_set_styleurl(self, *args)
    def has_styleurl(self): return _kmldom.Feature_has_styleurl(self)
    def clear_styleurl(self): return _kmldom.Feature_clear_styleurl(self)
    def get_styleselector(self): return _kmldom.Feature_get_styleselector(self)
    def set_styleselector(self, *args): return _kmldom.Feature_set_styleselector(self, *args)
    def has_styleselector(self): return _kmldom.Feature_has_styleselector(self)
    def clear_styleselector(self): return _kmldom.Feature_clear_styleselector(self)
    def get_region(self): return _kmldom.Feature_get_region(self)
    def set_region(self, *args): return _kmldom.Feature_set_region(self, *args)
    def has_region(self): return _kmldom.Feature_has_region(self)
    def clear_region(self): return _kmldom.Feature_clear_region(self)
    def get_extendeddata(self): return _kmldom.Feature_get_extendeddata(self)
    def set_extendeddata(self, *args): return _kmldom.Feature_set_extendeddata(self, *args)
    def has_extendeddata(self): return _kmldom.Feature_has_extendeddata(self)
    def clear_extendeddata(self): return _kmldom.Feature_clear_extendeddata(self)
    def get_gx_balloonvisibility(self): return _kmldom.Feature_get_gx_balloonvisibility(self)
    def set_gx_balloonvisibility(self, *args): return _kmldom.Feature_set_gx_balloonvisibility(self, *args)
    def has_gx_balloonvisibility(self): return _kmldom.Feature_has_gx_balloonvisibility(self)
    def clear_gx_balloonvisibility(self): return _kmldom.Feature_clear_gx_balloonvisibility(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Feature_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Feature_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Feature
    __del__ = lambda self : None;
Feature_swigregister = _kmldom.Feature_swigregister
Feature_swigregister(Feature)

def Feature_SWIGSharedPtrUpcast(*args):
  return _kmldom.Feature_SWIGSharedPtrUpcast(*args)
Feature_SWIGSharedPtrUpcast = _kmldom.Feature_SWIGSharedPtrUpcast

class Container(Feature):
    __swig_setmethods__ = {}
    for _s in [Feature]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Container, name, value)
    __swig_getmethods__ = {}
    for _s in [Feature]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Container, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_feature(self, *args): return _kmldom.Container_add_feature(self, *args)
    def get_feature_array_size(self): return _kmldom.Container_get_feature_array_size(self)
    def get_feature_array_at(self, *args): return _kmldom.Container_get_feature_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Container_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Container_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Container
    __del__ = lambda self : None;
Container_swigregister = _kmldom.Container_swigregister
Container_swigregister(Container)

def Container_SWIGSharedPtrUpcast(*args):
  return _kmldom.Container_SWIGSharedPtrUpcast(*args)
Container_SWIGSharedPtrUpcast = _kmldom.Container_SWIGSharedPtrUpcast

class Geometry(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Geometry, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Geometry, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Geometry_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Geometry_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Geometry
    __del__ = lambda self : None;
Geometry_swigregister = _kmldom.Geometry_swigregister
Geometry_swigregister(Geometry)

def Geometry_SWIGSharedPtrUpcast(*args):
  return _kmldom.Geometry_SWIGSharedPtrUpcast(*args)
Geometry_SWIGSharedPtrUpcast = _kmldom.Geometry_SWIGSharedPtrUpcast

class BasicLink(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BasicLink, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, BasicLink, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_href(self): return _kmldom.BasicLink_get_href(self)
    def has_href(self): return _kmldom.BasicLink_has_href(self)
    def set_href(self, *args): return _kmldom.BasicLink_set_href(self, *args)
    def clear_href(self): return _kmldom.BasicLink_clear_href(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.BasicLink_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.BasicLink_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_BasicLink
    __del__ = lambda self : None;
BasicLink_swigregister = _kmldom.BasicLink_swigregister
BasicLink_swigregister(BasicLink)

def BasicLink_SWIGSharedPtrUpcast(*args):
  return _kmldom.BasicLink_SWIGSharedPtrUpcast(*args)
BasicLink_SWIGSharedPtrUpcast = _kmldom.BasicLink_SWIGSharedPtrUpcast

class Icon(BasicLink):
    __swig_setmethods__ = {}
    for _s in [BasicLink]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Icon, name, value)
    __swig_getmethods__ = {}
    for _s in [BasicLink]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Icon, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_refreshmode(self): return _kmldom.Icon_get_refreshmode(self)
    def set_refreshmode(self, *args): return _kmldom.Icon_set_refreshmode(self, *args)
    def has_refreshmode(self): return _kmldom.Icon_has_refreshmode(self)
    def clear_refreshmode(self): return _kmldom.Icon_clear_refreshmode(self)
    def get_refreshinterval(self): return _kmldom.Icon_get_refreshinterval(self)
    def set_refreshinterval(self, *args): return _kmldom.Icon_set_refreshinterval(self, *args)
    def has_refreshinterval(self): return _kmldom.Icon_has_refreshinterval(self)
    def clear_refreshinterval(self): return _kmldom.Icon_clear_refreshinterval(self)
    def get_viewrefreshmode(self): return _kmldom.Icon_get_viewrefreshmode(self)
    def set_viewrefreshmode(self, *args): return _kmldom.Icon_set_viewrefreshmode(self, *args)
    def has_viewrefreshmode(self): return _kmldom.Icon_has_viewrefreshmode(self)
    def clear_viewrefreshmode(self): return _kmldom.Icon_clear_viewrefreshmode(self)
    def get_viewrefreshtime(self): return _kmldom.Icon_get_viewrefreshtime(self)
    def set_viewrefreshtime(self, *args): return _kmldom.Icon_set_viewrefreshtime(self, *args)
    def has_viewrefreshtime(self): return _kmldom.Icon_has_viewrefreshtime(self)
    def clear_viewrefreshtime(self): return _kmldom.Icon_clear_viewrefreshtime(self)
    def get_viewboundscale(self): return _kmldom.Icon_get_viewboundscale(self)
    def set_viewboundscale(self, *args): return _kmldom.Icon_set_viewboundscale(self, *args)
    def has_viewboundscale(self): return _kmldom.Icon_has_viewboundscale(self)
    def clear_viewboundscale(self): return _kmldom.Icon_clear_viewboundscale(self)
    def get_viewformat(self): return _kmldom.Icon_get_viewformat(self)
    def set_viewformat(self, *args): return _kmldom.Icon_set_viewformat(self, *args)
    def has_viewformat(self): return _kmldom.Icon_has_viewformat(self)
    def clear_viewformat(self): return _kmldom.Icon_clear_viewformat(self)
    def get_httpquery(self): return _kmldom.Icon_get_httpquery(self)
    def set_httpquery(self, *args): return _kmldom.Icon_set_httpquery(self, *args)
    def has_httpquery(self): return _kmldom.Icon_has_httpquery(self)
    def clear_httpquery(self): return _kmldom.Icon_clear_httpquery(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Icon_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Icon_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Icon
    __del__ = lambda self : None;
Icon_swigregister = _kmldom.Icon_swigregister
Icon_swigregister(Icon)

def Icon_SWIGSharedPtrUpcast(*args):
  return _kmldom.Icon_SWIGSharedPtrUpcast(*args)
Icon_SWIGSharedPtrUpcast = _kmldom.Icon_SWIGSharedPtrUpcast

class IconStyleIcon(BasicLink):
    __swig_setmethods__ = {}
    for _s in [BasicLink]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IconStyleIcon, name, value)
    __swig_getmethods__ = {}
    for _s in [BasicLink]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, IconStyleIcon, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_href(self): return _kmldom.IconStyleIcon_get_href(self)
    def has_href(self): return _kmldom.IconStyleIcon_has_href(self)
    def set_href(self, *args): return _kmldom.IconStyleIcon_set_href(self, *args)
    def clear_href(self): return _kmldom.IconStyleIcon_clear_href(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.IconStyleIcon_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.IconStyleIcon_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_IconStyleIcon
    __del__ = lambda self : None;
IconStyleIcon_swigregister = _kmldom.IconStyleIcon_swigregister
IconStyleIcon_swigregister(IconStyleIcon)

def IconStyleIcon_SWIGSharedPtrUpcast(*args):
  return _kmldom.IconStyleIcon_SWIGSharedPtrUpcast(*args)
IconStyleIcon_SWIGSharedPtrUpcast = _kmldom.IconStyleIcon_SWIGSharedPtrUpcast

class Overlay(Feature):
    __swig_setmethods__ = {}
    for _s in [Feature]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Overlay, name, value)
    __swig_getmethods__ = {}
    for _s in [Feature]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Overlay, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_color(self): return _kmldom.Overlay_get_color(self)
    def set_color(self, *args): return _kmldom.Overlay_set_color(self, *args)
    def has_color(self): return _kmldom.Overlay_has_color(self)
    def clear_color(self): return _kmldom.Overlay_clear_color(self)
    def get_draworder(self): return _kmldom.Overlay_get_draworder(self)
    def set_draworder(self, *args): return _kmldom.Overlay_set_draworder(self, *args)
    def has_draworder(self): return _kmldom.Overlay_has_draworder(self)
    def clear_draworder(self): return _kmldom.Overlay_clear_draworder(self)
    def get_icon(self): return _kmldom.Overlay_get_icon(self)
    def set_icon(self, *args): return _kmldom.Overlay_set_icon(self, *args)
    def has_icon(self): return _kmldom.Overlay_has_icon(self)
    def clear_icon(self): return _kmldom.Overlay_clear_icon(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Overlay_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Overlay_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Overlay
    __del__ = lambda self : None;
Overlay_swigregister = _kmldom.Overlay_swigregister
Overlay_swigregister(Overlay)

def Overlay_SWIGSharedPtrUpcast(*args):
  return _kmldom.Overlay_SWIGSharedPtrUpcast(*args)
Overlay_SWIGSharedPtrUpcast = _kmldom.Overlay_SWIGSharedPtrUpcast

class BalloonStyle(SubStyle):
    __swig_setmethods__ = {}
    for _s in [SubStyle]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, BalloonStyle, name, value)
    __swig_getmethods__ = {}
    for _s in [SubStyle]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, BalloonStyle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_bgcolor(self): return _kmldom.BalloonStyle_get_bgcolor(self)
    def set_bgcolor(self, *args): return _kmldom.BalloonStyle_set_bgcolor(self, *args)
    def has_bgcolor(self): return _kmldom.BalloonStyle_has_bgcolor(self)
    def clear_bgcolor(self): return _kmldom.BalloonStyle_clear_bgcolor(self)
    def get_textcolor(self): return _kmldom.BalloonStyle_get_textcolor(self)
    def set_textcolor(self, *args): return _kmldom.BalloonStyle_set_textcolor(self, *args)
    def has_textcolor(self): return _kmldom.BalloonStyle_has_textcolor(self)
    def clear_textcolor(self): return _kmldom.BalloonStyle_clear_textcolor(self)
    def get_text(self): return _kmldom.BalloonStyle_get_text(self)
    def set_text(self, *args): return _kmldom.BalloonStyle_set_text(self, *args)
    def has_text(self): return _kmldom.BalloonStyle_has_text(self)
    def clear_text(self): return _kmldom.BalloonStyle_clear_text(self)
    def get_displaymode(self): return _kmldom.BalloonStyle_get_displaymode(self)
    def set_displaymode(self, *args): return _kmldom.BalloonStyle_set_displaymode(self, *args)
    def has_displaymode(self): return _kmldom.BalloonStyle_has_displaymode(self)
    def clear_displaymode(self): return _kmldom.BalloonStyle_clear_displaymode(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.BalloonStyle_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.BalloonStyle_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_BalloonStyle
    __del__ = lambda self : None;
BalloonStyle_swigregister = _kmldom.BalloonStyle_swigregister
BalloonStyle_swigregister(BalloonStyle)

def BalloonStyle_SWIGSharedPtrUpcast(*args):
  return _kmldom.BalloonStyle_SWIGSharedPtrUpcast(*args)
BalloonStyle_SWIGSharedPtrUpcast = _kmldom.BalloonStyle_SWIGSharedPtrUpcast

class Camera(AbstractView):
    __swig_setmethods__ = {}
    for _s in [AbstractView]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Camera, name, value)
    __swig_getmethods__ = {}
    for _s in [AbstractView]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Camera, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_longitude(self): return _kmldom.Camera_get_longitude(self)
    def set_longitude(self, *args): return _kmldom.Camera_set_longitude(self, *args)
    def has_longitude(self): return _kmldom.Camera_has_longitude(self)
    def clear_longitude(self): return _kmldom.Camera_clear_longitude(self)
    def get_latitude(self): return _kmldom.Camera_get_latitude(self)
    def set_latitude(self, *args): return _kmldom.Camera_set_latitude(self, *args)
    def has_latitude(self): return _kmldom.Camera_has_latitude(self)
    def clear_latitude(self): return _kmldom.Camera_clear_latitude(self)
    def get_altitude(self): return _kmldom.Camera_get_altitude(self)
    def set_altitude(self, *args): return _kmldom.Camera_set_altitude(self, *args)
    def has_altitude(self): return _kmldom.Camera_has_altitude(self)
    def clear_altitude(self): return _kmldom.Camera_clear_altitude(self)
    def get_heading(self): return _kmldom.Camera_get_heading(self)
    def set_heading(self, *args): return _kmldom.Camera_set_heading(self, *args)
    def has_heading(self): return _kmldom.Camera_has_heading(self)
    def clear_heading(self): return _kmldom.Camera_clear_heading(self)
    def get_tilt(self): return _kmldom.Camera_get_tilt(self)
    def set_tilt(self, *args): return _kmldom.Camera_set_tilt(self, *args)
    def has_tilt(self): return _kmldom.Camera_has_tilt(self)
    def clear_tilt(self): return _kmldom.Camera_clear_tilt(self)
    def get_roll(self): return _kmldom.Camera_get_roll(self)
    def set_roll(self, *args): return _kmldom.Camera_set_roll(self, *args)
    def has_roll(self): return _kmldom.Camera_has_roll(self)
    def clear_roll(self): return _kmldom.Camera_clear_roll(self)
    def get_altitudemode(self): return _kmldom.Camera_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.Camera_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.Camera_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.Camera_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.Camera_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.Camera_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.Camera_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.Camera_clear_gx_altitudemode(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Camera_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Camera_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Camera
    __del__ = lambda self : None;
Camera_swigregister = _kmldom.Camera_swigregister
Camera_swigregister(Camera)

def Camera_SWIGSharedPtrUpcast(*args):
  return _kmldom.Camera_SWIGSharedPtrUpcast(*args)
Camera_SWIGSharedPtrUpcast = _kmldom.Camera_SWIGSharedPtrUpcast

class UpdateOperation(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, UpdateOperation, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, UpdateOperation, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.UpdateOperation_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.UpdateOperation_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_UpdateOperation
    __del__ = lambda self : None;
UpdateOperation_swigregister = _kmldom.UpdateOperation_swigregister
UpdateOperation_swigregister(UpdateOperation)

def UpdateOperation_SWIGSharedPtrUpcast(*args):
  return _kmldom.UpdateOperation_SWIGSharedPtrUpcast(*args)
UpdateOperation_SWIGSharedPtrUpcast = _kmldom.UpdateOperation_SWIGSharedPtrUpcast

class Change(UpdateOperation):
    __swig_setmethods__ = {}
    for _s in [UpdateOperation]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Change, name, value)
    __swig_getmethods__ = {}
    for _s in [UpdateOperation]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Change, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_object(self, *args): return _kmldom.Change_add_object(self, *args)
    def get_object_array_size(self): return _kmldom.Change_get_object_array_size(self)
    def get_object_array_at(self, *args): return _kmldom.Change_get_object_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Change_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Change_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Change
    __del__ = lambda self : None;
Change_swigregister = _kmldom.Change_swigregister
Change_swigregister(Change)

def Change_SWIGSharedPtrUpcast(*args):
  return _kmldom.Change_SWIGSharedPtrUpcast(*args)
Change_SWIGSharedPtrUpcast = _kmldom.Change_SWIGSharedPtrUpcast

class Create(UpdateOperation):
    __swig_setmethods__ = {}
    for _s in [UpdateOperation]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Create, name, value)
    __swig_getmethods__ = {}
    for _s in [UpdateOperation]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Create, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_container(self, *args): return _kmldom.Create_add_container(self, *args)
    def get_container_array_size(self): return _kmldom.Create_get_container_array_size(self)
    def get_container_array_at(self, *args): return _kmldom.Create_get_container_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Create_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Create_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Create
    __del__ = lambda self : None;
Create_swigregister = _kmldom.Create_swigregister
Create_swigregister(Create)

def Create_SWIGSharedPtrUpcast(*args):
  return _kmldom.Create_SWIGSharedPtrUpcast(*args)
Create_SWIGSharedPtrUpcast = _kmldom.Create_SWIGSharedPtrUpcast

class Data(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Data, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Data, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_name(self): return _kmldom.Data_get_name(self)
    def has_name(self): return _kmldom.Data_has_name(self)
    def set_name(self, *args): return _kmldom.Data_set_name(self, *args)
    def clear_name(self): return _kmldom.Data_clear_name(self)
    def get_displayname(self): return _kmldom.Data_get_displayname(self)
    def has_displayname(self): return _kmldom.Data_has_displayname(self)
    def set_displayname(self, *args): return _kmldom.Data_set_displayname(self, *args)
    def clear_displayname(self): return _kmldom.Data_clear_displayname(self)
    def get_value(self): return _kmldom.Data_get_value(self)
    def has_value(self): return _kmldom.Data_has_value(self)
    def set_value(self, *args): return _kmldom.Data_set_value(self, *args)
    def clear_value(self): return _kmldom.Data_clear_value(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Data_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Data_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Data
    __del__ = lambda self : None;
Data_swigregister = _kmldom.Data_swigregister
Data_swigregister(Data)

def Data_SWIGSharedPtrUpcast(*args):
  return _kmldom.Data_SWIGSharedPtrUpcast(*args)
Data_SWIGSharedPtrUpcast = _kmldom.Data_SWIGSharedPtrUpcast

class Delete(UpdateOperation):
    __swig_setmethods__ = {}
    for _s in [UpdateOperation]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Delete, name, value)
    __swig_getmethods__ = {}
    for _s in [UpdateOperation]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Delete, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_feature(self, *args): return _kmldom.Delete_add_feature(self, *args)
    def get_feature_array_size(self): return _kmldom.Delete_get_feature_array_size(self)
    def get_feature_array_at(self, *args): return _kmldom.Delete_get_feature_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Delete_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Delete_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Delete
    __del__ = lambda self : None;
Delete_swigregister = _kmldom.Delete_swigregister
Delete_swigregister(Delete)

def Delete_SWIGSharedPtrUpcast(*args):
  return _kmldom.Delete_SWIGSharedPtrUpcast(*args)
Delete_SWIGSharedPtrUpcast = _kmldom.Delete_SWIGSharedPtrUpcast

class SimpleField(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimpleField, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SimpleField, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_type(self): return _kmldom.SimpleField_get_type(self)
    def has_type(self): return _kmldom.SimpleField_has_type(self)
    def set_type(self, *args): return _kmldom.SimpleField_set_type(self, *args)
    def clear_type(self): return _kmldom.SimpleField_clear_type(self)
    def get_name(self): return _kmldom.SimpleField_get_name(self)
    def has_name(self): return _kmldom.SimpleField_has_name(self)
    def set_name(self, *args): return _kmldom.SimpleField_set_name(self, *args)
    def clear_name(self): return _kmldom.SimpleField_clear_name(self)
    def get_displayname(self): return _kmldom.SimpleField_get_displayname(self)
    def set_displayname(self, *args): return _kmldom.SimpleField_set_displayname(self, *args)
    def has_displayname(self): return _kmldom.SimpleField_has_displayname(self)
    def clear_displayname(self): return _kmldom.SimpleField_clear_displayname(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.SimpleField_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.SimpleField_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_SimpleField
    __del__ = lambda self : None;
SimpleField_swigregister = _kmldom.SimpleField_swigregister
SimpleField_swigregister(SimpleField)

def SimpleField_SWIGSharedPtrUpcast(*args):
  return _kmldom.SimpleField_SWIGSharedPtrUpcast(*args)
SimpleField_SWIGSharedPtrUpcast = _kmldom.SimpleField_SWIGSharedPtrUpcast

class Schema(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Schema, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Schema, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_name(self): return _kmldom.Schema_get_name(self)
    def has_name(self): return _kmldom.Schema_has_name(self)
    def set_name(self, *args): return _kmldom.Schema_set_name(self, *args)
    def clear_name(self): return _kmldom.Schema_clear_name(self)
    def add_simplefield(self, *args): return _kmldom.Schema_add_simplefield(self, *args)
    def get_simplefield_array_size(self): return _kmldom.Schema_get_simplefield_array_size(self)
    def get_simplefield_array_at(self, *args): return _kmldom.Schema_get_simplefield_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Schema_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Schema_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Schema
    __del__ = lambda self : None;
Schema_swigregister = _kmldom.Schema_swigregister
Schema_swigregister(Schema)

def Schema_SWIGSharedPtrUpcast(*args):
  return _kmldom.Schema_SWIGSharedPtrUpcast(*args)
Schema_SWIGSharedPtrUpcast = _kmldom.Schema_SWIGSharedPtrUpcast

class Document(Container):
    __swig_setmethods__ = {}
    for _s in [Container]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Document, name, value)
    __swig_getmethods__ = {}
    for _s in [Container]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Document, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_schema(self, *args): return _kmldom.Document_add_schema(self, *args)
    def get_schema_array_size(self): return _kmldom.Document_get_schema_array_size(self)
    def get_schema_array_at(self, *args): return _kmldom.Document_get_schema_array_at(self, *args)
    def add_styleselector(self, *args): return _kmldom.Document_add_styleselector(self, *args)
    def get_styleselector_array_size(self): return _kmldom.Document_get_styleselector_array_size(self)
    def get_styleselector_array_at(self, *args): return _kmldom.Document_get_styleselector_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Document_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Document_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Document
    __del__ = lambda self : None;
Document_swigregister = _kmldom.Document_swigregister
Document_swigregister(Document)

def Document_SWIGSharedPtrUpcast(*args):
  return _kmldom.Document_SWIGSharedPtrUpcast(*args)
Document_SWIGSharedPtrUpcast = _kmldom.Document_SWIGSharedPtrUpcast

class Folder(Container):
    __swig_setmethods__ = {}
    for _s in [Container]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Folder, name, value)
    __swig_getmethods__ = {}
    for _s in [Container]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Folder, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Folder_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Folder_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Folder
    __del__ = lambda self : None;
Folder_swigregister = _kmldom.Folder_swigregister
Folder_swigregister(Folder)

def Folder_SWIGSharedPtrUpcast(*args):
  return _kmldom.Folder_SWIGSharedPtrUpcast(*args)
Folder_SWIGSharedPtrUpcast = _kmldom.Folder_SWIGSharedPtrUpcast

class LatLonBox(AbstractLatLonBox):
    __swig_setmethods__ = {}
    for _s in [AbstractLatLonBox]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LatLonBox, name, value)
    __swig_getmethods__ = {}
    for _s in [AbstractLatLonBox]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LatLonBox, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_rotation(self): return _kmldom.LatLonBox_get_rotation(self)
    def set_rotation(self, *args): return _kmldom.LatLonBox_set_rotation(self, *args)
    def has_rotation(self): return _kmldom.LatLonBox_has_rotation(self)
    def clear_rotation(self): return _kmldom.LatLonBox_clear_rotation(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.LatLonBox_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.LatLonBox_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_LatLonBox
    __del__ = lambda self : None;
LatLonBox_swigregister = _kmldom.LatLonBox_swigregister
LatLonBox_swigregister(LatLonBox)

def LatLonBox_SWIGSharedPtrUpcast(*args):
  return _kmldom.LatLonBox_SWIGSharedPtrUpcast(*args)
LatLonBox_SWIGSharedPtrUpcast = _kmldom.LatLonBox_SWIGSharedPtrUpcast

class GxLatLonQuad(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxLatLonQuad, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxLatLonQuad, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_coordinates(self): return _kmldom.GxLatLonQuad_get_coordinates(self)
    def has_coordinates(self): return _kmldom.GxLatLonQuad_has_coordinates(self)
    def set_coordinates(self, *args): return _kmldom.GxLatLonQuad_set_coordinates(self, *args)
    def clear_coordinates(self): return _kmldom.GxLatLonQuad_clear_coordinates(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxLatLonQuad_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxLatLonQuad_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxLatLonQuad
    __del__ = lambda self : None;
GxLatLonQuad_swigregister = _kmldom.GxLatLonQuad_swigregister
GxLatLonQuad_swigregister(GxLatLonQuad)

def GxLatLonQuad_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxLatLonQuad_SWIGSharedPtrUpcast(*args)
GxLatLonQuad_SWIGSharedPtrUpcast = _kmldom.GxLatLonQuad_SWIGSharedPtrUpcast

class GroundOverlay(Overlay):
    __swig_setmethods__ = {}
    for _s in [Overlay]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GroundOverlay, name, value)
    __swig_getmethods__ = {}
    for _s in [Overlay]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GroundOverlay, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_altitude(self): return _kmldom.GroundOverlay_get_altitude(self)
    def set_altitude(self, *args): return _kmldom.GroundOverlay_set_altitude(self, *args)
    def has_altitude(self): return _kmldom.GroundOverlay_has_altitude(self)
    def clear_altitude(self): return _kmldom.GroundOverlay_clear_altitude(self)
    def get_altitudemode(self): return _kmldom.GroundOverlay_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.GroundOverlay_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.GroundOverlay_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.GroundOverlay_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.GroundOverlay_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.GroundOverlay_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.GroundOverlay_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.GroundOverlay_clear_gx_altitudemode(self)
    def get_latlonbox(self): return _kmldom.GroundOverlay_get_latlonbox(self)
    def set_latlonbox(self, *args): return _kmldom.GroundOverlay_set_latlonbox(self, *args)
    def has_latlonbox(self): return _kmldom.GroundOverlay_has_latlonbox(self)
    def clear_latlonbox(self): return _kmldom.GroundOverlay_clear_latlonbox(self)
    def get_gx_latlonquad(self): return _kmldom.GroundOverlay_get_gx_latlonquad(self)
    def has_gx_latlonquad(self): return _kmldom.GroundOverlay_has_gx_latlonquad(self)
    def set_gx_latlonquad(self, *args): return _kmldom.GroundOverlay_set_gx_latlonquad(self, *args)
    def clear_gx_latlonquad(self): return _kmldom.GroundOverlay_clear_gx_latlonquad(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GroundOverlay_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GroundOverlay_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GroundOverlay
    __del__ = lambda self : None;
GroundOverlay_swigregister = _kmldom.GroundOverlay_swigregister
GroundOverlay_swigregister(GroundOverlay)

def GroundOverlay_SWIGSharedPtrUpcast(*args):
  return _kmldom.GroundOverlay_SWIGSharedPtrUpcast(*args)
GroundOverlay_SWIGSharedPtrUpcast = _kmldom.GroundOverlay_SWIGSharedPtrUpcast

class HotSpot(Vec2):
    __swig_setmethods__ = {}
    for _s in [Vec2]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, HotSpot, name, value)
    __swig_getmethods__ = {}
    for _s in [Vec2]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, HotSpot, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.HotSpot_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.HotSpot_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_HotSpot
    __del__ = lambda self : None;
HotSpot_swigregister = _kmldom.HotSpot_swigregister
HotSpot_swigregister(HotSpot)

def HotSpot_SWIGSharedPtrUpcast(*args):
  return _kmldom.HotSpot_SWIGSharedPtrUpcast(*args)
HotSpot_SWIGSharedPtrUpcast = _kmldom.HotSpot_SWIGSharedPtrUpcast

class IconStyle(ColorStyle):
    __swig_setmethods__ = {}
    for _s in [ColorStyle]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IconStyle, name, value)
    __swig_getmethods__ = {}
    for _s in [ColorStyle]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, IconStyle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_scale(self): return _kmldom.IconStyle_get_scale(self)
    def set_scale(self, *args): return _kmldom.IconStyle_set_scale(self, *args)
    def has_scale(self): return _kmldom.IconStyle_has_scale(self)
    def clear_scale(self): return _kmldom.IconStyle_clear_scale(self)
    def get_icon(self): return _kmldom.IconStyle_get_icon(self)
    def set_icon(self, *args): return _kmldom.IconStyle_set_icon(self, *args)
    def has_icon(self): return _kmldom.IconStyle_has_icon(self)
    def clear_icon(self): return _kmldom.IconStyle_clear_icon(self)
    def get_heading(self): return _kmldom.IconStyle_get_heading(self)
    def set_heading(self, *args): return _kmldom.IconStyle_set_heading(self, *args)
    def has_heading(self): return _kmldom.IconStyle_has_heading(self)
    def clear_heading(self): return _kmldom.IconStyle_clear_heading(self)
    def get_hotspot(self): return _kmldom.IconStyle_get_hotspot(self)
    def set_hotspot(self, *args): return _kmldom.IconStyle_set_hotspot(self, *args)
    def has_hotspot(self): return _kmldom.IconStyle_has_hotspot(self)
    def clear_hotspot(self): return _kmldom.IconStyle_clear_hotspot(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.IconStyle_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.IconStyle_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_IconStyle
    __del__ = lambda self : None;
IconStyle_swigregister = _kmldom.IconStyle_swigregister
IconStyle_swigregister(IconStyle)

def IconStyle_SWIGSharedPtrUpcast(*args):
  return _kmldom.IconStyle_SWIGSharedPtrUpcast(*args)
IconStyle_SWIGSharedPtrUpcast = _kmldom.IconStyle_SWIGSharedPtrUpcast

class ImagePyramid(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ImagePyramid, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ImagePyramid, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_tilesize(self): return _kmldom.ImagePyramid_get_tilesize(self)
    def set_tilesize(self, *args): return _kmldom.ImagePyramid_set_tilesize(self, *args)
    def has_tilesize(self): return _kmldom.ImagePyramid_has_tilesize(self)
    def clear_tilesize(self): return _kmldom.ImagePyramid_clear_tilesize(self)
    def get_maxwidth(self): return _kmldom.ImagePyramid_get_maxwidth(self)
    def set_maxwidth(self, *args): return _kmldom.ImagePyramid_set_maxwidth(self, *args)
    def has_maxwidth(self): return _kmldom.ImagePyramid_has_maxwidth(self)
    def clear_maxwidth(self): return _kmldom.ImagePyramid_clear_maxwidth(self)
    def get_maxheight(self): return _kmldom.ImagePyramid_get_maxheight(self)
    def set_maxheight(self, *args): return _kmldom.ImagePyramid_set_maxheight(self, *args)
    def has_maxheight(self): return _kmldom.ImagePyramid_has_maxheight(self)
    def clear_maxheight(self): return _kmldom.ImagePyramid_clear_maxheight(self)
    def get_gridorigin(self): return _kmldom.ImagePyramid_get_gridorigin(self)
    def set_gridorigin(self, *args): return _kmldom.ImagePyramid_set_gridorigin(self, *args)
    def has_gridorigin(self): return _kmldom.ImagePyramid_has_gridorigin(self)
    def clear_gridorigin(self): return _kmldom.ImagePyramid_clear_gridorigin(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ImagePyramid_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ImagePyramid_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ImagePyramid
    __del__ = lambda self : None;
ImagePyramid_swigregister = _kmldom.ImagePyramid_swigregister
ImagePyramid_swigregister(ImagePyramid)

def ImagePyramid_SWIGSharedPtrUpcast(*args):
  return _kmldom.ImagePyramid_SWIGSharedPtrUpcast(*args)
ImagePyramid_SWIGSharedPtrUpcast = _kmldom.ImagePyramid_SWIGSharedPtrUpcast

class ItemIcon(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ItemIcon, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ItemIcon, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_state_array_at(self, *args): return _kmldom.ItemIcon_get_state_array_at(self, *args)
    def get_state_array_size(self): return _kmldom.ItemIcon_get_state_array_size(self)
    def has_state(self): return _kmldom.ItemIcon_has_state(self)
    def add_state(self, *args): return _kmldom.ItemIcon_add_state(self, *args)
    def clear_state(self): return _kmldom.ItemIcon_clear_state(self)
    def get_href(self): return _kmldom.ItemIcon_get_href(self)
    def set_href(self, *args): return _kmldom.ItemIcon_set_href(self, *args)
    def has_href(self): return _kmldom.ItemIcon_has_href(self)
    def clear_href(self): return _kmldom.ItemIcon_clear_href(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ItemIcon_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ItemIcon_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ItemIcon
    __del__ = lambda self : None;
ItemIcon_swigregister = _kmldom.ItemIcon_swigregister
ItemIcon_swigregister(ItemIcon)

def ItemIcon_SWIGSharedPtrUpcast(*args):
  return _kmldom.ItemIcon_SWIGSharedPtrUpcast(*args)
ItemIcon_SWIGSharedPtrUpcast = _kmldom.ItemIcon_SWIGSharedPtrUpcast

class LabelStyle(ColorStyle):
    __swig_setmethods__ = {}
    for _s in [ColorStyle]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LabelStyle, name, value)
    __swig_getmethods__ = {}
    for _s in [ColorStyle]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LabelStyle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_scale(self): return _kmldom.LabelStyle_get_scale(self)
    def set_scale(self, *args): return _kmldom.LabelStyle_set_scale(self, *args)
    def has_scale(self): return _kmldom.LabelStyle_has_scale(self)
    def clear_scale(self): return _kmldom.LabelStyle_clear_scale(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.LabelStyle_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.LabelStyle_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_LabelStyle
    __del__ = lambda self : None;
LabelStyle_swigregister = _kmldom.LabelStyle_swigregister
LabelStyle_swigregister(LabelStyle)

def LabelStyle_SWIGSharedPtrUpcast(*args):
  return _kmldom.LabelStyle_SWIGSharedPtrUpcast(*args)
LabelStyle_SWIGSharedPtrUpcast = _kmldom.LabelStyle_SWIGSharedPtrUpcast

class LineString(Geometry):
    __swig_setmethods__ = {}
    for _s in [Geometry]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LineString, name, value)
    __swig_getmethods__ = {}
    for _s in [Geometry]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LineString, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_extrude(self): return _kmldom.LineString_get_extrude(self)
    def set_extrude(self, *args): return _kmldom.LineString_set_extrude(self, *args)
    def has_extrude(self): return _kmldom.LineString_has_extrude(self)
    def clear_extrude(self): return _kmldom.LineString_clear_extrude(self)
    def get_tessellate(self): return _kmldom.LineString_get_tessellate(self)
    def set_tessellate(self, *args): return _kmldom.LineString_set_tessellate(self, *args)
    def has_tessellate(self): return _kmldom.LineString_has_tessellate(self)
    def clear_tessellate(self): return _kmldom.LineString_clear_tessellate(self)
    def get_altitudemode(self): return _kmldom.LineString_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.LineString_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.LineString_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.LineString_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.LineString_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.LineString_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.LineString_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.LineString_clear_gx_altitudemode(self)
    def get_coordinates(self): return _kmldom.LineString_get_coordinates(self)
    def set_coordinates(self, *args): return _kmldom.LineString_set_coordinates(self, *args)
    def has_coordinates(self): return _kmldom.LineString_has_coordinates(self)
    def clear_coordinates(self): return _kmldom.LineString_clear_coordinates(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.LineString_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.LineString_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_LineString
    __del__ = lambda self : None;
LineString_swigregister = _kmldom.LineString_swigregister
LineString_swigregister(LineString)

def LineString_SWIGSharedPtrUpcast(*args):
  return _kmldom.LineString_SWIGSharedPtrUpcast(*args)
LineString_SWIGSharedPtrUpcast = _kmldom.LineString_SWIGSharedPtrUpcast

class LineStyle(ColorStyle):
    __swig_setmethods__ = {}
    for _s in [ColorStyle]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LineStyle, name, value)
    __swig_getmethods__ = {}
    for _s in [ColorStyle]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LineStyle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_width(self): return _kmldom.LineStyle_get_width(self)
    def set_width(self, *args): return _kmldom.LineStyle_set_width(self, *args)
    def has_width(self): return _kmldom.LineStyle_has_width(self)
    def clear_width(self): return _kmldom.LineStyle_clear_width(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.LineStyle_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.LineStyle_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_LineStyle
    __del__ = lambda self : None;
LineStyle_swigregister = _kmldom.LineStyle_swigregister
LineStyle_swigregister(LineStyle)

def LineStyle_SWIGSharedPtrUpcast(*args):
  return _kmldom.LineStyle_SWIGSharedPtrUpcast(*args)
LineStyle_SWIGSharedPtrUpcast = _kmldom.LineStyle_SWIGSharedPtrUpcast

class LinearRing(Geometry):
    __swig_setmethods__ = {}
    for _s in [Geometry]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LinearRing, name, value)
    __swig_getmethods__ = {}
    for _s in [Geometry]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LinearRing, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_extrude(self): return _kmldom.LinearRing_get_extrude(self)
    def set_extrude(self, *args): return _kmldom.LinearRing_set_extrude(self, *args)
    def has_extrude(self): return _kmldom.LinearRing_has_extrude(self)
    def clear_extrude(self): return _kmldom.LinearRing_clear_extrude(self)
    def get_tessellate(self): return _kmldom.LinearRing_get_tessellate(self)
    def set_tessellate(self, *args): return _kmldom.LinearRing_set_tessellate(self, *args)
    def has_tessellate(self): return _kmldom.LinearRing_has_tessellate(self)
    def clear_tessellate(self): return _kmldom.LinearRing_clear_tessellate(self)
    def get_altitudemode(self): return _kmldom.LinearRing_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.LinearRing_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.LinearRing_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.LinearRing_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.LinearRing_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.LinearRing_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.LinearRing_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.LinearRing_clear_gx_altitudemode(self)
    def get_coordinates(self): return _kmldom.LinearRing_get_coordinates(self)
    def set_coordinates(self, *args): return _kmldom.LinearRing_set_coordinates(self, *args)
    def has_coordinates(self): return _kmldom.LinearRing_has_coordinates(self)
    def clear_coordinates(self): return _kmldom.LinearRing_clear_coordinates(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.LinearRing_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.LinearRing_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_LinearRing
    __del__ = lambda self : None;
LinearRing_swigregister = _kmldom.LinearRing_swigregister
LinearRing_swigregister(LinearRing)

def LinearRing_SWIGSharedPtrUpcast(*args):
  return _kmldom.LinearRing_SWIGSharedPtrUpcast(*args)
LinearRing_SWIGSharedPtrUpcast = _kmldom.LinearRing_SWIGSharedPtrUpcast

class Link(BasicLink):
    __swig_setmethods__ = {}
    for _s in [BasicLink]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Link, name, value)
    __swig_getmethods__ = {}
    for _s in [BasicLink]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Link, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_refreshmode(self): return _kmldom.Link_get_refreshmode(self)
    def set_refreshmode(self, *args): return _kmldom.Link_set_refreshmode(self, *args)
    def has_refreshmode(self): return _kmldom.Link_has_refreshmode(self)
    def clear_refreshmode(self): return _kmldom.Link_clear_refreshmode(self)
    def get_refreshinterval(self): return _kmldom.Link_get_refreshinterval(self)
    def set_refreshinterval(self, *args): return _kmldom.Link_set_refreshinterval(self, *args)
    def has_refreshinterval(self): return _kmldom.Link_has_refreshinterval(self)
    def clear_refreshinterval(self): return _kmldom.Link_clear_refreshinterval(self)
    def get_viewrefreshmode(self): return _kmldom.Link_get_viewrefreshmode(self)
    def set_viewrefreshmode(self, *args): return _kmldom.Link_set_viewrefreshmode(self, *args)
    def has_viewrefreshmode(self): return _kmldom.Link_has_viewrefreshmode(self)
    def clear_viewrefreshmode(self): return _kmldom.Link_clear_viewrefreshmode(self)
    def get_viewrefreshtime(self): return _kmldom.Link_get_viewrefreshtime(self)
    def set_viewrefreshtime(self, *args): return _kmldom.Link_set_viewrefreshtime(self, *args)
    def has_viewrefreshtime(self): return _kmldom.Link_has_viewrefreshtime(self)
    def clear_viewrefreshtime(self): return _kmldom.Link_clear_viewrefreshtime(self)
    def get_viewboundscale(self): return _kmldom.Link_get_viewboundscale(self)
    def set_viewboundscale(self, *args): return _kmldom.Link_set_viewboundscale(self, *args)
    def has_viewboundscale(self): return _kmldom.Link_has_viewboundscale(self)
    def clear_viewboundscale(self): return _kmldom.Link_clear_viewboundscale(self)
    def get_viewformat(self): return _kmldom.Link_get_viewformat(self)
    def set_viewformat(self, *args): return _kmldom.Link_set_viewformat(self, *args)
    def has_viewformat(self): return _kmldom.Link_has_viewformat(self)
    def clear_viewformat(self): return _kmldom.Link_clear_viewformat(self)
    def get_httpquery(self): return _kmldom.Link_get_httpquery(self)
    def set_httpquery(self, *args): return _kmldom.Link_set_httpquery(self, *args)
    def has_httpquery(self): return _kmldom.Link_has_httpquery(self)
    def clear_httpquery(self): return _kmldom.Link_clear_httpquery(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Link_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Link_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Link
    __del__ = lambda self : None;
Link_swigregister = _kmldom.Link_swigregister
Link_swigregister(Link)

def Link_SWIGSharedPtrUpcast(*args):
  return _kmldom.Link_SWIGSharedPtrUpcast(*args)
Link_SWIGSharedPtrUpcast = _kmldom.Link_SWIGSharedPtrUpcast

class ListStyle(SubStyle):
    __swig_setmethods__ = {}
    for _s in [SubStyle]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ListStyle, name, value)
    __swig_getmethods__ = {}
    for _s in [SubStyle]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ListStyle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_listitemtype(self): return _kmldom.ListStyle_get_listitemtype(self)
    def set_listitemtype(self, *args): return _kmldom.ListStyle_set_listitemtype(self, *args)
    def has_listitemtype(self): return _kmldom.ListStyle_has_listitemtype(self)
    def clear_listitemtype(self): return _kmldom.ListStyle_clear_listitemtype(self)
    def get_bgcolor(self): return _kmldom.ListStyle_get_bgcolor(self)
    def set_bgcolor(self, *args): return _kmldom.ListStyle_set_bgcolor(self, *args)
    def has_bgcolor(self): return _kmldom.ListStyle_has_bgcolor(self)
    def clear_bgcolor(self): return _kmldom.ListStyle_clear_bgcolor(self)
    def add_itemicon(self, *args): return _kmldom.ListStyle_add_itemicon(self, *args)
    def get_itemicon_array_size(self): return _kmldom.ListStyle_get_itemicon_array_size(self)
    def get_itemicon_array_at(self, *args): return _kmldom.ListStyle_get_itemicon_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ListStyle_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ListStyle_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ListStyle
    __del__ = lambda self : None;
ListStyle_swigregister = _kmldom.ListStyle_swigregister
ListStyle_swigregister(ListStyle)

def ListStyle_SWIGSharedPtrUpcast(*args):
  return _kmldom.ListStyle_SWIGSharedPtrUpcast(*args)
ListStyle_SWIGSharedPtrUpcast = _kmldom.ListStyle_SWIGSharedPtrUpcast

class Location(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Location, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Location, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_longitude(self): return _kmldom.Location_get_longitude(self)
    def set_longitude(self, *args): return _kmldom.Location_set_longitude(self, *args)
    def has_longitude(self): return _kmldom.Location_has_longitude(self)
    def clear_longitude(self): return _kmldom.Location_clear_longitude(self)
    def get_latitude(self): return _kmldom.Location_get_latitude(self)
    def set_latitude(self, *args): return _kmldom.Location_set_latitude(self, *args)
    def has_latitude(self): return _kmldom.Location_has_latitude(self)
    def clear_latitude(self): return _kmldom.Location_clear_latitude(self)
    def get_altitude(self): return _kmldom.Location_get_altitude(self)
    def set_altitude(self, *args): return _kmldom.Location_set_altitude(self, *args)
    def has_altitude(self): return _kmldom.Location_has_altitude(self)
    def clear_altitude(self): return _kmldom.Location_clear_altitude(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Location_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Location_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Location
    __del__ = lambda self : None;
Location_swigregister = _kmldom.Location_swigregister
Location_swigregister(Location)

def Location_SWIGSharedPtrUpcast(*args):
  return _kmldom.Location_SWIGSharedPtrUpcast(*args)
Location_SWIGSharedPtrUpcast = _kmldom.Location_SWIGSharedPtrUpcast

class LookAt(AbstractView):
    __swig_setmethods__ = {}
    for _s in [AbstractView]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, LookAt, name, value)
    __swig_getmethods__ = {}
    for _s in [AbstractView]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, LookAt, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_longitude(self): return _kmldom.LookAt_get_longitude(self)
    def set_longitude(self, *args): return _kmldom.LookAt_set_longitude(self, *args)
    def has_longitude(self): return _kmldom.LookAt_has_longitude(self)
    def clear_longitude(self): return _kmldom.LookAt_clear_longitude(self)
    def get_latitude(self): return _kmldom.LookAt_get_latitude(self)
    def set_latitude(self, *args): return _kmldom.LookAt_set_latitude(self, *args)
    def has_latitude(self): return _kmldom.LookAt_has_latitude(self)
    def clear_latitude(self): return _kmldom.LookAt_clear_latitude(self)
    def get_altitude(self): return _kmldom.LookAt_get_altitude(self)
    def set_altitude(self, *args): return _kmldom.LookAt_set_altitude(self, *args)
    def has_altitude(self): return _kmldom.LookAt_has_altitude(self)
    def clear_altitude(self): return _kmldom.LookAt_clear_altitude(self)
    def get_heading(self): return _kmldom.LookAt_get_heading(self)
    def set_heading(self, *args): return _kmldom.LookAt_set_heading(self, *args)
    def has_heading(self): return _kmldom.LookAt_has_heading(self)
    def clear_heading(self): return _kmldom.LookAt_clear_heading(self)
    def get_tilt(self): return _kmldom.LookAt_get_tilt(self)
    def set_tilt(self, *args): return _kmldom.LookAt_set_tilt(self, *args)
    def has_tilt(self): return _kmldom.LookAt_has_tilt(self)
    def clear_tilt(self): return _kmldom.LookAt_clear_tilt(self)
    def get_range(self): return _kmldom.LookAt_get_range(self)
    def set_range(self, *args): return _kmldom.LookAt_set_range(self, *args)
    def has_range(self): return _kmldom.LookAt_has_range(self)
    def clear_range(self): return _kmldom.LookAt_clear_range(self)
    def get_altitudemode(self): return _kmldom.LookAt_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.LookAt_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.LookAt_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.LookAt_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.LookAt_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.LookAt_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.LookAt_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.LookAt_clear_gx_altitudemode(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.LookAt_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.LookAt_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_LookAt
    __del__ = lambda self : None;
LookAt_swigregister = _kmldom.LookAt_swigregister
LookAt_swigregister(LookAt)

def LookAt_SWIGSharedPtrUpcast(*args):
  return _kmldom.LookAt_SWIGSharedPtrUpcast(*args)
LookAt_SWIGSharedPtrUpcast = _kmldom.LookAt_SWIGSharedPtrUpcast

class Orientation(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Orientation, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Orientation, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_heading(self): return _kmldom.Orientation_get_heading(self)
    def set_heading(self, *args): return _kmldom.Orientation_set_heading(self, *args)
    def has_heading(self): return _kmldom.Orientation_has_heading(self)
    def clear_heading(self): return _kmldom.Orientation_clear_heading(self)
    def get_tilt(self): return _kmldom.Orientation_get_tilt(self)
    def set_tilt(self, *args): return _kmldom.Orientation_set_tilt(self, *args)
    def has_tilt(self): return _kmldom.Orientation_has_tilt(self)
    def clear_tilt(self): return _kmldom.Orientation_clear_tilt(self)
    def get_roll(self): return _kmldom.Orientation_get_roll(self)
    def set_roll(self, *args): return _kmldom.Orientation_set_roll(self, *args)
    def has_roll(self): return _kmldom.Orientation_has_roll(self)
    def clear_roll(self): return _kmldom.Orientation_clear_roll(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Orientation_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Orientation_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Orientation
    __del__ = lambda self : None;
Orientation_swigregister = _kmldom.Orientation_swigregister
Orientation_swigregister(Orientation)

def Orientation_SWIGSharedPtrUpcast(*args):
  return _kmldom.Orientation_SWIGSharedPtrUpcast(*args)
Orientation_SWIGSharedPtrUpcast = _kmldom.Orientation_SWIGSharedPtrUpcast

class Scale(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Scale, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Scale, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_x(self): return _kmldom.Scale_get_x(self)
    def set_x(self, *args): return _kmldom.Scale_set_x(self, *args)
    def has_x(self): return _kmldom.Scale_has_x(self)
    def clear_x(self): return _kmldom.Scale_clear_x(self)
    def get_y(self): return _kmldom.Scale_get_y(self)
    def set_y(self, *args): return _kmldom.Scale_set_y(self, *args)
    def has_y(self): return _kmldom.Scale_has_y(self)
    def clear_y(self): return _kmldom.Scale_clear_y(self)
    def get_z(self): return _kmldom.Scale_get_z(self)
    def set_z(self, *args): return _kmldom.Scale_set_z(self, *args)
    def has_z(self): return _kmldom.Scale_has_z(self)
    def clear_z(self): return _kmldom.Scale_clear_z(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Scale_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Scale_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Scale
    __del__ = lambda self : None;
Scale_swigregister = _kmldom.Scale_swigregister
Scale_swigregister(Scale)

def Scale_SWIGSharedPtrUpcast(*args):
  return _kmldom.Scale_SWIGSharedPtrUpcast(*args)
Scale_SWIGSharedPtrUpcast = _kmldom.Scale_SWIGSharedPtrUpcast

class Alias(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Alias, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Alias, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_targethref(self): return _kmldom.Alias_get_targethref(self)
    def set_targethref(self, *args): return _kmldom.Alias_set_targethref(self, *args)
    def has_targethref(self): return _kmldom.Alias_has_targethref(self)
    def clear_targethref(self): return _kmldom.Alias_clear_targethref(self)
    def get_sourcehref(self): return _kmldom.Alias_get_sourcehref(self)
    def set_sourcehref(self, *args): return _kmldom.Alias_set_sourcehref(self, *args)
    def has_sourcehref(self): return _kmldom.Alias_has_sourcehref(self)
    def clear_sourcehref(self): return _kmldom.Alias_clear_sourcehref(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Alias_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Alias_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Alias
    __del__ = lambda self : None;
Alias_swigregister = _kmldom.Alias_swigregister
Alias_swigregister(Alias)

def Alias_SWIGSharedPtrUpcast(*args):
  return _kmldom.Alias_SWIGSharedPtrUpcast(*args)
Alias_SWIGSharedPtrUpcast = _kmldom.Alias_SWIGSharedPtrUpcast

class ResourceMap(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ResourceMap, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ResourceMap, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_alias(self, *args): return _kmldom.ResourceMap_add_alias(self, *args)
    def get_alias_array_size(self): return _kmldom.ResourceMap_get_alias_array_size(self)
    def get_alias_array_at(self, *args): return _kmldom.ResourceMap_get_alias_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ResourceMap_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ResourceMap_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ResourceMap
    __del__ = lambda self : None;
ResourceMap_swigregister = _kmldom.ResourceMap_swigregister
ResourceMap_swigregister(ResourceMap)

def ResourceMap_SWIGSharedPtrUpcast(*args):
  return _kmldom.ResourceMap_SWIGSharedPtrUpcast(*args)
ResourceMap_SWIGSharedPtrUpcast = _kmldom.ResourceMap_SWIGSharedPtrUpcast

class Model(Geometry):
    __swig_setmethods__ = {}
    for _s in [Geometry]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Model, name, value)
    __swig_getmethods__ = {}
    for _s in [Geometry]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Model, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_altitudemode(self): return _kmldom.Model_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.Model_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.Model_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.Model_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.Model_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.Model_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.Model_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.Model_clear_gx_altitudemode(self)
    def get_location(self): return _kmldom.Model_get_location(self)
    def set_location(self, *args): return _kmldom.Model_set_location(self, *args)
    def has_location(self): return _kmldom.Model_has_location(self)
    def clear_location(self): return _kmldom.Model_clear_location(self)
    def get_orientation(self): return _kmldom.Model_get_orientation(self)
    def set_orientation(self, *args): return _kmldom.Model_set_orientation(self, *args)
    def has_orientation(self): return _kmldom.Model_has_orientation(self)
    def clear_orientation(self): return _kmldom.Model_clear_orientation(self)
    def get_scale(self): return _kmldom.Model_get_scale(self)
    def set_scale(self, *args): return _kmldom.Model_set_scale(self, *args)
    def has_scale(self): return _kmldom.Model_has_scale(self)
    def clear_scale(self): return _kmldom.Model_clear_scale(self)
    def get_link(self): return _kmldom.Model_get_link(self)
    def set_link(self, *args): return _kmldom.Model_set_link(self, *args)
    def has_link(self): return _kmldom.Model_has_link(self)
    def clear_link(self): return _kmldom.Model_clear_link(self)
    def get_resourcemap(self): return _kmldom.Model_get_resourcemap(self)
    def set_resourcemap(self, *args): return _kmldom.Model_set_resourcemap(self, *args)
    def has_resourcemap(self): return _kmldom.Model_has_resourcemap(self)
    def clear_resourcemap(self): return _kmldom.Model_clear_resourcemap(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Model_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Model_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Model
    __del__ = lambda self : None;
Model_swigregister = _kmldom.Model_swigregister
Model_swigregister(Model)

def Model_SWIGSharedPtrUpcast(*args):
  return _kmldom.Model_SWIGSharedPtrUpcast(*args)
Model_SWIGSharedPtrUpcast = _kmldom.Model_SWIGSharedPtrUpcast

class MultiGeometry(Geometry):
    __swig_setmethods__ = {}
    for _s in [Geometry]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, MultiGeometry, name, value)
    __swig_getmethods__ = {}
    for _s in [Geometry]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, MultiGeometry, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_geometry(self, *args): return _kmldom.MultiGeometry_add_geometry(self, *args)
    def get_geometry_array_size(self): return _kmldom.MultiGeometry_get_geometry_array_size(self)
    def get_geometry_array_at(self, *args): return _kmldom.MultiGeometry_get_geometry_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.MultiGeometry_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.MultiGeometry_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_MultiGeometry
    __del__ = lambda self : None;
MultiGeometry_swigregister = _kmldom.MultiGeometry_swigregister
MultiGeometry_swigregister(MultiGeometry)

def MultiGeometry_SWIGSharedPtrUpcast(*args):
  return _kmldom.MultiGeometry_SWIGSharedPtrUpcast(*args)
MultiGeometry_SWIGSharedPtrUpcast = _kmldom.MultiGeometry_SWIGSharedPtrUpcast

class NetworkLink(Feature):
    __swig_setmethods__ = {}
    for _s in [Feature]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, NetworkLink, name, value)
    __swig_getmethods__ = {}
    for _s in [Feature]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, NetworkLink, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_refreshvisibility(self): return _kmldom.NetworkLink_get_refreshvisibility(self)
    def set_refreshvisibility(self, *args): return _kmldom.NetworkLink_set_refreshvisibility(self, *args)
    def has_refreshvisibility(self): return _kmldom.NetworkLink_has_refreshvisibility(self)
    def clear_refreshvisibility(self): return _kmldom.NetworkLink_clear_refreshvisibility(self)
    def get_flytoview(self): return _kmldom.NetworkLink_get_flytoview(self)
    def set_flytoview(self, *args): return _kmldom.NetworkLink_set_flytoview(self, *args)
    def has_flytoview(self): return _kmldom.NetworkLink_has_flytoview(self)
    def clear_flytoview(self): return _kmldom.NetworkLink_clear_flytoview(self)
    def get_link(self): return _kmldom.NetworkLink_get_link(self)
    def set_link(self, *args): return _kmldom.NetworkLink_set_link(self, *args)
    def has_link(self): return _kmldom.NetworkLink_has_link(self)
    def clear_link(self): return _kmldom.NetworkLink_clear_link(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.NetworkLink_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.NetworkLink_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_NetworkLink
    __del__ = lambda self : None;
NetworkLink_swigregister = _kmldom.NetworkLink_swigregister
NetworkLink_swigregister(NetworkLink)

def NetworkLink_SWIGSharedPtrUpcast(*args):
  return _kmldom.NetworkLink_SWIGSharedPtrUpcast(*args)
NetworkLink_SWIGSharedPtrUpcast = _kmldom.NetworkLink_SWIGSharedPtrUpcast

class Update(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Update, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Update, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_targethref(self): return _kmldom.Update_get_targethref(self)
    def has_targethref(self): return _kmldom.Update_has_targethref(self)
    def set_targethref(self, *args): return _kmldom.Update_set_targethref(self, *args)
    def clear_targethref(self): return _kmldom.Update_clear_targethref(self)
    def add_updateoperation(self, *args): return _kmldom.Update_add_updateoperation(self, *args)
    def get_updateoperation_array_size(self): return _kmldom.Update_get_updateoperation_array_size(self)
    def get_updateoperation_array_at(self, *args): return _kmldom.Update_get_updateoperation_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Update_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Update_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Update
    __del__ = lambda self : None;
Update_swigregister = _kmldom.Update_swigregister
Update_swigregister(Update)

def Update_SWIGSharedPtrUpcast(*args):
  return _kmldom.Update_SWIGSharedPtrUpcast(*args)
Update_SWIGSharedPtrUpcast = _kmldom.Update_SWIGSharedPtrUpcast

class NetworkLinkControl(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, NetworkLinkControl, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, NetworkLinkControl, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_minrefreshperiod(self): return _kmldom.NetworkLinkControl_get_minrefreshperiod(self)
    def set_minrefreshperiod(self, *args): return _kmldom.NetworkLinkControl_set_minrefreshperiod(self, *args)
    def has_minrefreshperiod(self): return _kmldom.NetworkLinkControl_has_minrefreshperiod(self)
    def clear_minrefreshperiod(self): return _kmldom.NetworkLinkControl_clear_minrefreshperiod(self)
    def get_maxsessionlength(self): return _kmldom.NetworkLinkControl_get_maxsessionlength(self)
    def set_maxsessionlength(self, *args): return _kmldom.NetworkLinkControl_set_maxsessionlength(self, *args)
    def has_maxsessionlength(self): return _kmldom.NetworkLinkControl_has_maxsessionlength(self)
    def clear_maxsessionlength(self): return _kmldom.NetworkLinkControl_clear_maxsessionlength(self)
    def get_cookie(self): return _kmldom.NetworkLinkControl_get_cookie(self)
    def set_cookie(self, *args): return _kmldom.NetworkLinkControl_set_cookie(self, *args)
    def has_cookie(self): return _kmldom.NetworkLinkControl_has_cookie(self)
    def clear_cookie(self): return _kmldom.NetworkLinkControl_clear_cookie(self)
    def get_message(self): return _kmldom.NetworkLinkControl_get_message(self)
    def set_message(self, *args): return _kmldom.NetworkLinkControl_set_message(self, *args)
    def has_message(self): return _kmldom.NetworkLinkControl_has_message(self)
    def clear_message(self): return _kmldom.NetworkLinkControl_clear_message(self)
    def get_linkname(self): return _kmldom.NetworkLinkControl_get_linkname(self)
    def set_linkname(self, *args): return _kmldom.NetworkLinkControl_set_linkname(self, *args)
    def has_linkname(self): return _kmldom.NetworkLinkControl_has_linkname(self)
    def clear_linkname(self): return _kmldom.NetworkLinkControl_clear_linkname(self)
    def get_linkdescription(self): return _kmldom.NetworkLinkControl_get_linkdescription(self)
    def set_linkdescription(self, *args): return _kmldom.NetworkLinkControl_set_linkdescription(self, *args)
    def has_linkdescription(self): return _kmldom.NetworkLinkControl_has_linkdescription(self)
    def clear_linkdescription(self): return _kmldom.NetworkLinkControl_clear_linkdescription(self)
    def get_linksnippet(self): return _kmldom.NetworkLinkControl_get_linksnippet(self)
    def set_linksnippet(self, *args): return _kmldom.NetworkLinkControl_set_linksnippet(self, *args)
    def has_linksnippet(self): return _kmldom.NetworkLinkControl_has_linksnippet(self)
    def clear_linksnippet(self): return _kmldom.NetworkLinkControl_clear_linksnippet(self)
    def get_expires(self): return _kmldom.NetworkLinkControl_get_expires(self)
    def set_expires(self, *args): return _kmldom.NetworkLinkControl_set_expires(self, *args)
    def has_expires(self): return _kmldom.NetworkLinkControl_has_expires(self)
    def clear_expires(self): return _kmldom.NetworkLinkControl_clear_expires(self)
    def get_update(self): return _kmldom.NetworkLinkControl_get_update(self)
    def set_update(self, *args): return _kmldom.NetworkLinkControl_set_update(self, *args)
    def has_update(self): return _kmldom.NetworkLinkControl_has_update(self)
    def clear_update(self): return _kmldom.NetworkLinkControl_clear_update(self)
    def get_abstractview(self): return _kmldom.NetworkLinkControl_get_abstractview(self)
    def set_abstractview(self, *args): return _kmldom.NetworkLinkControl_set_abstractview(self, *args)
    def has_abstractview(self): return _kmldom.NetworkLinkControl_has_abstractview(self)
    def clear_abstractview(self): return _kmldom.NetworkLinkControl_clear_abstractview(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.NetworkLinkControl_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.NetworkLinkControl_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_NetworkLinkControl
    __del__ = lambda self : None;
NetworkLinkControl_swigregister = _kmldom.NetworkLinkControl_swigregister
NetworkLinkControl_swigregister(NetworkLinkControl)

def NetworkLinkControl_SWIGSharedPtrUpcast(*args):
  return _kmldom.NetworkLinkControl_SWIGSharedPtrUpcast(*args)
NetworkLinkControl_SWIGSharedPtrUpcast = _kmldom.NetworkLinkControl_SWIGSharedPtrUpcast

class Pair(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Pair, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Pair, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_key(self): return _kmldom.Pair_get_key(self)
    def set_key(self, *args): return _kmldom.Pair_set_key(self, *args)
    def has_key(self): return _kmldom.Pair_has_key(self)
    def clear_key(self): return _kmldom.Pair_clear_key(self)
    def get_styleurl(self): return _kmldom.Pair_get_styleurl(self)
    def set_styleurl(self, *args): return _kmldom.Pair_set_styleurl(self, *args)
    def has_styleurl(self): return _kmldom.Pair_has_styleurl(self)
    def clear_styleurl(self): return _kmldom.Pair_clear_styleurl(self)
    def get_styleselector(self): return _kmldom.Pair_get_styleselector(self)
    def set_styleselector(self, *args): return _kmldom.Pair_set_styleselector(self, *args)
    def has_styleselector(self): return _kmldom.Pair_has_styleselector(self)
    def clear_styleselector(self): return _kmldom.Pair_clear_styleselector(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Pair_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Pair_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Pair
    __del__ = lambda self : None;
Pair_swigregister = _kmldom.Pair_swigregister
Pair_swigregister(Pair)

def Pair_SWIGSharedPtrUpcast(*args):
  return _kmldom.Pair_SWIGSharedPtrUpcast(*args)
Pair_SWIGSharedPtrUpcast = _kmldom.Pair_SWIGSharedPtrUpcast

class ViewVolume(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ViewVolume, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ViewVolume, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_leftfov(self): return _kmldom.ViewVolume_get_leftfov(self)
    def set_leftfov(self, *args): return _kmldom.ViewVolume_set_leftfov(self, *args)
    def has_leftfov(self): return _kmldom.ViewVolume_has_leftfov(self)
    def clear_leftfov(self): return _kmldom.ViewVolume_clear_leftfov(self)
    def get_rightfov(self): return _kmldom.ViewVolume_get_rightfov(self)
    def set_rightfov(self, *args): return _kmldom.ViewVolume_set_rightfov(self, *args)
    def has_rightfov(self): return _kmldom.ViewVolume_has_rightfov(self)
    def clear_rightfov(self): return _kmldom.ViewVolume_clear_rightfov(self)
    def get_bottomfov(self): return _kmldom.ViewVolume_get_bottomfov(self)
    def set_bottomfov(self, *args): return _kmldom.ViewVolume_set_bottomfov(self, *args)
    def has_bottomfov(self): return _kmldom.ViewVolume_has_bottomfov(self)
    def clear_bottomfov(self): return _kmldom.ViewVolume_clear_bottomfov(self)
    def get_topfov(self): return _kmldom.ViewVolume_get_topfov(self)
    def set_topfov(self, *args): return _kmldom.ViewVolume_set_topfov(self, *args)
    def has_topfov(self): return _kmldom.ViewVolume_has_topfov(self)
    def clear_topfov(self): return _kmldom.ViewVolume_clear_topfov(self)
    def get_near(self): return _kmldom.ViewVolume_get_near(self)
    def set_near(self, *args): return _kmldom.ViewVolume_set_near(self, *args)
    def has_near(self): return _kmldom.ViewVolume_has_near(self)
    def clear_near(self): return _kmldom.ViewVolume_clear_near(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ViewVolume_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ViewVolume_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ViewVolume
    __del__ = lambda self : None;
ViewVolume_swigregister = _kmldom.ViewVolume_swigregister
ViewVolume_swigregister(ViewVolume)

def ViewVolume_SWIGSharedPtrUpcast(*args):
  return _kmldom.ViewVolume_SWIGSharedPtrUpcast(*args)
ViewVolume_SWIGSharedPtrUpcast = _kmldom.ViewVolume_SWIGSharedPtrUpcast

class Point(Geometry):
    __swig_setmethods__ = {}
    for _s in [Geometry]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Point, name, value)
    __swig_getmethods__ = {}
    for _s in [Geometry]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Point, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_extrude(self): return _kmldom.Point_get_extrude(self)
    def set_extrude(self, *args): return _kmldom.Point_set_extrude(self, *args)
    def has_extrude(self): return _kmldom.Point_has_extrude(self)
    def clear_extrude(self): return _kmldom.Point_clear_extrude(self)
    def get_altitudemode(self): return _kmldom.Point_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.Point_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.Point_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.Point_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.Point_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.Point_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.Point_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.Point_clear_gx_altitudemode(self)
    def get_coordinates(self): return _kmldom.Point_get_coordinates(self)
    def set_coordinates(self, *args): return _kmldom.Point_set_coordinates(self, *args)
    def has_coordinates(self): return _kmldom.Point_has_coordinates(self)
    def clear_coordinates(self): return _kmldom.Point_clear_coordinates(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Point_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Point_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Point
    __del__ = lambda self : None;
Point_swigregister = _kmldom.Point_swigregister
Point_swigregister(Point)

def Point_SWIGSharedPtrUpcast(*args):
  return _kmldom.Point_SWIGSharedPtrUpcast(*args)
Point_SWIGSharedPtrUpcast = _kmldom.Point_SWIGSharedPtrUpcast

class PhotoOverlay(Overlay):
    __swig_setmethods__ = {}
    for _s in [Overlay]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PhotoOverlay, name, value)
    __swig_getmethods__ = {}
    for _s in [Overlay]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, PhotoOverlay, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_rotation(self): return _kmldom.PhotoOverlay_get_rotation(self)
    def set_rotation(self, *args): return _kmldom.PhotoOverlay_set_rotation(self, *args)
    def has_rotation(self): return _kmldom.PhotoOverlay_has_rotation(self)
    def clear_rotation(self): return _kmldom.PhotoOverlay_clear_rotation(self)
    def get_viewvolume(self): return _kmldom.PhotoOverlay_get_viewvolume(self)
    def set_viewvolume(self, *args): return _kmldom.PhotoOverlay_set_viewvolume(self, *args)
    def has_viewvolume(self): return _kmldom.PhotoOverlay_has_viewvolume(self)
    def clear_viewvolume(self): return _kmldom.PhotoOverlay_clear_viewvolume(self)
    def get_imagepyramid(self): return _kmldom.PhotoOverlay_get_imagepyramid(self)
    def set_imagepyramid(self, *args): return _kmldom.PhotoOverlay_set_imagepyramid(self, *args)
    def has_imagepyramid(self): return _kmldom.PhotoOverlay_has_imagepyramid(self)
    def clear_imagepyramid(self): return _kmldom.PhotoOverlay_clear_imagepyramid(self)
    def get_point(self): return _kmldom.PhotoOverlay_get_point(self)
    def set_point(self, *args): return _kmldom.PhotoOverlay_set_point(self, *args)
    def has_point(self): return _kmldom.PhotoOverlay_has_point(self)
    def clear_point(self): return _kmldom.PhotoOverlay_clear_point(self)
    def get_shape(self): return _kmldom.PhotoOverlay_get_shape(self)
    def has_shape(self): return _kmldom.PhotoOverlay_has_shape(self)
    def set_shape(self, *args): return _kmldom.PhotoOverlay_set_shape(self, *args)
    def clear_shape(self): return _kmldom.PhotoOverlay_clear_shape(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.PhotoOverlay_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.PhotoOverlay_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_PhotoOverlay
    __del__ = lambda self : None;
PhotoOverlay_swigregister = _kmldom.PhotoOverlay_swigregister
PhotoOverlay_swigregister(PhotoOverlay)

def PhotoOverlay_SWIGSharedPtrUpcast(*args):
  return _kmldom.PhotoOverlay_SWIGSharedPtrUpcast(*args)
PhotoOverlay_SWIGSharedPtrUpcast = _kmldom.PhotoOverlay_SWIGSharedPtrUpcast

class Placemark(Feature):
    __swig_setmethods__ = {}
    for _s in [Feature]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Placemark, name, value)
    __swig_getmethods__ = {}
    for _s in [Feature]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Placemark, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_geometry(self): return _kmldom.Placemark_get_geometry(self)
    def set_geometry(self, *args): return _kmldom.Placemark_set_geometry(self, *args)
    def has_geometry(self): return _kmldom.Placemark_has_geometry(self)
    def clear_geometry(self): return _kmldom.Placemark_clear_geometry(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Placemark_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Placemark_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Placemark
    __del__ = lambda self : None;
Placemark_swigregister = _kmldom.Placemark_swigregister
Placemark_swigregister(Placemark)

def Placemark_SWIGSharedPtrUpcast(*args):
  return _kmldom.Placemark_SWIGSharedPtrUpcast(*args)
Placemark_SWIGSharedPtrUpcast = _kmldom.Placemark_SWIGSharedPtrUpcast

class PolyStyle(ColorStyle):
    __swig_setmethods__ = {}
    for _s in [ColorStyle]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PolyStyle, name, value)
    __swig_getmethods__ = {}
    for _s in [ColorStyle]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, PolyStyle, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_fill(self): return _kmldom.PolyStyle_get_fill(self)
    def set_fill(self, *args): return _kmldom.PolyStyle_set_fill(self, *args)
    def has_fill(self): return _kmldom.PolyStyle_has_fill(self)
    def clear_fill(self): return _kmldom.PolyStyle_clear_fill(self)
    def get_outline(self): return _kmldom.PolyStyle_get_outline(self)
    def set_outline(self, *args): return _kmldom.PolyStyle_set_outline(self, *args)
    def has_outline(self): return _kmldom.PolyStyle_has_outline(self)
    def clear_outline(self): return _kmldom.PolyStyle_clear_outline(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.PolyStyle_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.PolyStyle_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_PolyStyle
    __del__ = lambda self : None;
PolyStyle_swigregister = _kmldom.PolyStyle_swigregister
PolyStyle_swigregister(PolyStyle)

def PolyStyle_SWIGSharedPtrUpcast(*args):
  return _kmldom.PolyStyle_SWIGSharedPtrUpcast(*args)
PolyStyle_SWIGSharedPtrUpcast = _kmldom.PolyStyle_SWIGSharedPtrUpcast

class OuterBoundaryIs(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterBoundaryIs, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, OuterBoundaryIs, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_linearring(self): return _kmldom.OuterBoundaryIs_get_linearring(self)
    def set_linearring(self, *args): return _kmldom.OuterBoundaryIs_set_linearring(self, *args)
    def has_linearring(self): return _kmldom.OuterBoundaryIs_has_linearring(self)
    def clear_linearring(self): return _kmldom.OuterBoundaryIs_clear_linearring(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.OuterBoundaryIs_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.OuterBoundaryIs_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_OuterBoundaryIs
    __del__ = lambda self : None;
OuterBoundaryIs_swigregister = _kmldom.OuterBoundaryIs_swigregister
OuterBoundaryIs_swigregister(OuterBoundaryIs)

def OuterBoundaryIs_SWIGSharedPtrUpcast(*args):
  return _kmldom.OuterBoundaryIs_SWIGSharedPtrUpcast(*args)
OuterBoundaryIs_SWIGSharedPtrUpcast = _kmldom.OuterBoundaryIs_SWIGSharedPtrUpcast

class InnerBoundaryIs(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, InnerBoundaryIs, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, InnerBoundaryIs, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_linearring(self): return _kmldom.InnerBoundaryIs_get_linearring(self)
    def set_linearring(self, *args): return _kmldom.InnerBoundaryIs_set_linearring(self, *args)
    def has_linearring(self): return _kmldom.InnerBoundaryIs_has_linearring(self)
    def clear_linearring(self): return _kmldom.InnerBoundaryIs_clear_linearring(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.InnerBoundaryIs_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.InnerBoundaryIs_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_InnerBoundaryIs
    __del__ = lambda self : None;
InnerBoundaryIs_swigregister = _kmldom.InnerBoundaryIs_swigregister
InnerBoundaryIs_swigregister(InnerBoundaryIs)

def InnerBoundaryIs_SWIGSharedPtrUpcast(*args):
  return _kmldom.InnerBoundaryIs_SWIGSharedPtrUpcast(*args)
InnerBoundaryIs_SWIGSharedPtrUpcast = _kmldom.InnerBoundaryIs_SWIGSharedPtrUpcast

class Polygon(Geometry):
    __swig_setmethods__ = {}
    for _s in [Geometry]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Polygon, name, value)
    __swig_getmethods__ = {}
    for _s in [Geometry]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Polygon, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_extrude(self): return _kmldom.Polygon_get_extrude(self)
    def set_extrude(self, *args): return _kmldom.Polygon_set_extrude(self, *args)
    def has_extrude(self): return _kmldom.Polygon_has_extrude(self)
    def clear_extrude(self): return _kmldom.Polygon_clear_extrude(self)
    def get_tessellate(self): return _kmldom.Polygon_get_tessellate(self)
    def set_tessellate(self, *args): return _kmldom.Polygon_set_tessellate(self, *args)
    def has_tessellate(self): return _kmldom.Polygon_has_tessellate(self)
    def clear_tessellate(self): return _kmldom.Polygon_clear_tessellate(self)
    def get_altitudemode(self): return _kmldom.Polygon_get_altitudemode(self)
    def set_altitudemode(self, *args): return _kmldom.Polygon_set_altitudemode(self, *args)
    def has_altitudemode(self): return _kmldom.Polygon_has_altitudemode(self)
    def clear_altitudemode(self): return _kmldom.Polygon_clear_altitudemode(self)
    def get_gx_altitudemode(self): return _kmldom.Polygon_get_gx_altitudemode(self)
    def has_gx_altitudemode(self): return _kmldom.Polygon_has_gx_altitudemode(self)
    def set_gx_altitudemode(self, *args): return _kmldom.Polygon_set_gx_altitudemode(self, *args)
    def clear_gx_altitudemode(self): return _kmldom.Polygon_clear_gx_altitudemode(self)
    def get_outerboundaryis(self): return _kmldom.Polygon_get_outerboundaryis(self)
    def set_outerboundaryis(self, *args): return _kmldom.Polygon_set_outerboundaryis(self, *args)
    def has_outerboundaryis(self): return _kmldom.Polygon_has_outerboundaryis(self)
    def clear_outerboundaryis(self): return _kmldom.Polygon_clear_outerboundaryis(self)
    def add_innerboundaryis(self, *args): return _kmldom.Polygon_add_innerboundaryis(self, *args)
    def get_innerboundaryis_array_size(self): return _kmldom.Polygon_get_innerboundaryis_array_size(self)
    def get_innerboundaryis_array_at(self, *args): return _kmldom.Polygon_get_innerboundaryis_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Polygon_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Polygon_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Polygon
    __del__ = lambda self : None;
Polygon_swigregister = _kmldom.Polygon_swigregister
Polygon_swigregister(Polygon)

def Polygon_SWIGSharedPtrUpcast(*args):
  return _kmldom.Polygon_SWIGSharedPtrUpcast(*args)
Polygon_SWIGSharedPtrUpcast = _kmldom.Polygon_SWIGSharedPtrUpcast

class SimpleData(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimpleData, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SimpleData, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_name(self): return _kmldom.SimpleData_get_name(self)
    def has_name(self): return _kmldom.SimpleData_has_name(self)
    def set_name(self, *args): return _kmldom.SimpleData_set_name(self, *args)
    def clear_name(self): return _kmldom.SimpleData_clear_name(self)
    def get_text(self): return _kmldom.SimpleData_get_text(self)
    def has_text(self): return _kmldom.SimpleData_has_text(self)
    def set_text(self, *args): return _kmldom.SimpleData_set_text(self, *args)
    def clear_text(self): return _kmldom.SimpleData_clear_text(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.SimpleData_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.SimpleData_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_SimpleData
    __del__ = lambda self : None;
SimpleData_swigregister = _kmldom.SimpleData_swigregister
SimpleData_swigregister(SimpleData)

def SimpleData_SWIGSharedPtrUpcast(*args):
  return _kmldom.SimpleData_SWIGSharedPtrUpcast(*args)
SimpleData_SWIGSharedPtrUpcast = _kmldom.SimpleData_SWIGSharedPtrUpcast

class SchemaData(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, SchemaData, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, SchemaData, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_schemaurl(self): return _kmldom.SchemaData_get_schemaurl(self)
    def has_schemaurl(self): return _kmldom.SchemaData_has_schemaurl(self)
    def set_schemaurl(self, *args): return _kmldom.SchemaData_set_schemaurl(self, *args)
    def clear_schemaurl(self): return _kmldom.SchemaData_clear_schemaurl(self)
    def add_simpledata(self, *args): return _kmldom.SchemaData_add_simpledata(self, *args)
    def get_simpledata_array_size(self): return _kmldom.SchemaData_get_simpledata_array_size(self)
    def get_simpledata_array_at(self, *args): return _kmldom.SchemaData_get_simpledata_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.SchemaData_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.SchemaData_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_SchemaData
    __del__ = lambda self : None;
SchemaData_swigregister = _kmldom.SchemaData_swigregister
SchemaData_swigregister(SchemaData)

def SchemaData_SWIGSharedPtrUpcast(*args):
  return _kmldom.SchemaData_SWIGSharedPtrUpcast(*args)
SchemaData_SWIGSharedPtrUpcast = _kmldom.SchemaData_SWIGSharedPtrUpcast

class OverlayXY(Vec2):
    __swig_setmethods__ = {}
    for _s in [Vec2]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, OverlayXY, name, value)
    __swig_getmethods__ = {}
    for _s in [Vec2]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, OverlayXY, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.OverlayXY_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.OverlayXY_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_OverlayXY
    __del__ = lambda self : None;
OverlayXY_swigregister = _kmldom.OverlayXY_swigregister
OverlayXY_swigregister(OverlayXY)

def OverlayXY_SWIGSharedPtrUpcast(*args):
  return _kmldom.OverlayXY_SWIGSharedPtrUpcast(*args)
OverlayXY_SWIGSharedPtrUpcast = _kmldom.OverlayXY_SWIGSharedPtrUpcast

class ScreenXY(Vec2):
    __swig_setmethods__ = {}
    for _s in [Vec2]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ScreenXY, name, value)
    __swig_getmethods__ = {}
    for _s in [Vec2]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ScreenXY, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ScreenXY_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ScreenXY_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ScreenXY
    __del__ = lambda self : None;
ScreenXY_swigregister = _kmldom.ScreenXY_swigregister
ScreenXY_swigregister(ScreenXY)

def ScreenXY_SWIGSharedPtrUpcast(*args):
  return _kmldom.ScreenXY_SWIGSharedPtrUpcast(*args)
ScreenXY_SWIGSharedPtrUpcast = _kmldom.ScreenXY_SWIGSharedPtrUpcast

class RotationXY(Vec2):
    __swig_setmethods__ = {}
    for _s in [Vec2]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, RotationXY, name, value)
    __swig_getmethods__ = {}
    for _s in [Vec2]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, RotationXY, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.RotationXY_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.RotationXY_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_RotationXY
    __del__ = lambda self : None;
RotationXY_swigregister = _kmldom.RotationXY_swigregister
RotationXY_swigregister(RotationXY)

def RotationXY_SWIGSharedPtrUpcast(*args):
  return _kmldom.RotationXY_SWIGSharedPtrUpcast(*args)
RotationXY_SWIGSharedPtrUpcast = _kmldom.RotationXY_SWIGSharedPtrUpcast

class Size(Vec2):
    __swig_setmethods__ = {}
    for _s in [Vec2]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Size, name, value)
    __swig_getmethods__ = {}
    for _s in [Vec2]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Size, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Size_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Size_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Size
    __del__ = lambda self : None;
Size_swigregister = _kmldom.Size_swigregister
Size_swigregister(Size)

def Size_SWIGSharedPtrUpcast(*args):
  return _kmldom.Size_SWIGSharedPtrUpcast(*args)
Size_SWIGSharedPtrUpcast = _kmldom.Size_SWIGSharedPtrUpcast

class ScreenOverlay(Overlay):
    __swig_setmethods__ = {}
    for _s in [Overlay]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, ScreenOverlay, name, value)
    __swig_getmethods__ = {}
    for _s in [Overlay]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, ScreenOverlay, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_overlayxy(self): return _kmldom.ScreenOverlay_get_overlayxy(self)
    def set_overlayxy(self, *args): return _kmldom.ScreenOverlay_set_overlayxy(self, *args)
    def has_overlayxy(self): return _kmldom.ScreenOverlay_has_overlayxy(self)
    def clear_overlayxy(self): return _kmldom.ScreenOverlay_clear_overlayxy(self)
    def get_screenxy(self): return _kmldom.ScreenOverlay_get_screenxy(self)
    def set_screenxy(self, *args): return _kmldom.ScreenOverlay_set_screenxy(self, *args)
    def has_screenxy(self): return _kmldom.ScreenOverlay_has_screenxy(self)
    def clear_screenxy(self): return _kmldom.ScreenOverlay_clear_screenxy(self)
    def get_rotationxy(self): return _kmldom.ScreenOverlay_get_rotationxy(self)
    def set_rotationxy(self, *args): return _kmldom.ScreenOverlay_set_rotationxy(self, *args)
    def has_rotationxy(self): return _kmldom.ScreenOverlay_has_rotationxy(self)
    def clear_rotationxy(self): return _kmldom.ScreenOverlay_clear_rotationxy(self)
    def get_size(self): return _kmldom.ScreenOverlay_get_size(self)
    def set_size(self, *args): return _kmldom.ScreenOverlay_set_size(self, *args)
    def has_size(self): return _kmldom.ScreenOverlay_has_size(self)
    def clear_size(self): return _kmldom.ScreenOverlay_clear_size(self)
    def get_rotation(self): return _kmldom.ScreenOverlay_get_rotation(self)
    def set_rotation(self, *args): return _kmldom.ScreenOverlay_set_rotation(self, *args)
    def has_rotation(self): return _kmldom.ScreenOverlay_has_rotation(self)
    def clear_rotation(self): return _kmldom.ScreenOverlay_clear_rotation(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.ScreenOverlay_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.ScreenOverlay_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_ScreenOverlay
    __del__ = lambda self : None;
ScreenOverlay_swigregister = _kmldom.ScreenOverlay_swigregister
ScreenOverlay_swigregister(ScreenOverlay)

def ScreenOverlay_SWIGSharedPtrUpcast(*args):
  return _kmldom.ScreenOverlay_SWIGSharedPtrUpcast(*args)
ScreenOverlay_SWIGSharedPtrUpcast = _kmldom.ScreenOverlay_SWIGSharedPtrUpcast

class Style(StyleSelector):
    __swig_setmethods__ = {}
    for _s in [StyleSelector]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Style, name, value)
    __swig_getmethods__ = {}
    for _s in [StyleSelector]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Style, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_iconstyle(self): return _kmldom.Style_get_iconstyle(self)
    def set_iconstyle(self, *args): return _kmldom.Style_set_iconstyle(self, *args)
    def has_iconstyle(self): return _kmldom.Style_has_iconstyle(self)
    def clear_iconstyle(self): return _kmldom.Style_clear_iconstyle(self)
    def get_labelstyle(self): return _kmldom.Style_get_labelstyle(self)
    def set_labelstyle(self, *args): return _kmldom.Style_set_labelstyle(self, *args)
    def has_labelstyle(self): return _kmldom.Style_has_labelstyle(self)
    def clear_labelstyle(self): return _kmldom.Style_clear_labelstyle(self)
    def get_linestyle(self): return _kmldom.Style_get_linestyle(self)
    def set_linestyle(self, *args): return _kmldom.Style_set_linestyle(self, *args)
    def has_linestyle(self): return _kmldom.Style_has_linestyle(self)
    def clear_linestyle(self): return _kmldom.Style_clear_linestyle(self)
    def get_polystyle(self): return _kmldom.Style_get_polystyle(self)
    def set_polystyle(self, *args): return _kmldom.Style_set_polystyle(self, *args)
    def has_polystyle(self): return _kmldom.Style_has_polystyle(self)
    def clear_polystyle(self): return _kmldom.Style_clear_polystyle(self)
    def get_balloonstyle(self): return _kmldom.Style_get_balloonstyle(self)
    def set_balloonstyle(self, *args): return _kmldom.Style_set_balloonstyle(self, *args)
    def has_balloonstyle(self): return _kmldom.Style_has_balloonstyle(self)
    def clear_balloonstyle(self): return _kmldom.Style_clear_balloonstyle(self)
    def get_liststyle(self): return _kmldom.Style_get_liststyle(self)
    def set_liststyle(self, *args): return _kmldom.Style_set_liststyle(self, *args)
    def has_liststyle(self): return _kmldom.Style_has_liststyle(self)
    def clear_liststyle(self): return _kmldom.Style_clear_liststyle(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Style_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Style_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Style
    __del__ = lambda self : None;
Style_swigregister = _kmldom.Style_swigregister
Style_swigregister(Style)

def Style_SWIGSharedPtrUpcast(*args):
  return _kmldom.Style_SWIGSharedPtrUpcast(*args)
Style_SWIGSharedPtrUpcast = _kmldom.Style_SWIGSharedPtrUpcast

class StyleMap(StyleSelector):
    __swig_setmethods__ = {}
    for _s in [StyleSelector]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, StyleMap, name, value)
    __swig_getmethods__ = {}
    for _s in [StyleSelector]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, StyleMap, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_pair(self, *args): return _kmldom.StyleMap_add_pair(self, *args)
    def get_pair_array_size(self): return _kmldom.StyleMap_get_pair_array_size(self)
    def get_pair_array_at(self, *args): return _kmldom.StyleMap_get_pair_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.StyleMap_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.StyleMap_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_StyleMap
    __del__ = lambda self : None;
StyleMap_swigregister = _kmldom.StyleMap_swigregister
StyleMap_swigregister(StyleMap)

def StyleMap_SWIGSharedPtrUpcast(*args):
  return _kmldom.StyleMap_SWIGSharedPtrUpcast(*args)
StyleMap_SWIGSharedPtrUpcast = _kmldom.StyleMap_SWIGSharedPtrUpcast

class TimeSpan(TimePrimitive):
    __swig_setmethods__ = {}
    for _s in [TimePrimitive]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TimeSpan, name, value)
    __swig_getmethods__ = {}
    for _s in [TimePrimitive]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, TimeSpan, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_begin(self): return _kmldom.TimeSpan_get_begin(self)
    def set_begin(self, *args): return _kmldom.TimeSpan_set_begin(self, *args)
    def has_begin(self): return _kmldom.TimeSpan_has_begin(self)
    def clear_begin(self): return _kmldom.TimeSpan_clear_begin(self)
    def get_end(self): return _kmldom.TimeSpan_get_end(self)
    def set_end(self, *args): return _kmldom.TimeSpan_set_end(self, *args)
    def has_end(self): return _kmldom.TimeSpan_has_end(self)
    def clear_end(self): return _kmldom.TimeSpan_clear_end(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.TimeSpan_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.TimeSpan_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_TimeSpan
    __del__ = lambda self : None;
TimeSpan_swigregister = _kmldom.TimeSpan_swigregister
TimeSpan_swigregister(TimeSpan)

def TimeSpan_SWIGSharedPtrUpcast(*args):
  return _kmldom.TimeSpan_SWIGSharedPtrUpcast(*args)
TimeSpan_SWIGSharedPtrUpcast = _kmldom.TimeSpan_SWIGSharedPtrUpcast

class GxTimeSpan(TimeSpan):
    __swig_setmethods__ = {}
    for _s in [TimeSpan]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxTimeSpan, name, value)
    __swig_getmethods__ = {}
    for _s in [TimeSpan]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxTimeSpan, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxTimeSpan_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxTimeSpan_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxTimeSpan
    __del__ = lambda self : None;
GxTimeSpan_swigregister = _kmldom.GxTimeSpan_swigregister
GxTimeSpan_swigregister(GxTimeSpan)

def GxTimeSpan_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxTimeSpan_SWIGSharedPtrUpcast(*args)
GxTimeSpan_SWIGSharedPtrUpcast = _kmldom.GxTimeSpan_SWIGSharedPtrUpcast

class TimeStamp(TimePrimitive):
    __swig_setmethods__ = {}
    for _s in [TimePrimitive]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, TimeStamp, name, value)
    __swig_getmethods__ = {}
    for _s in [TimePrimitive]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, TimeStamp, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_when(self): return _kmldom.TimeStamp_get_when(self)
    def set_when(self, *args): return _kmldom.TimeStamp_set_when(self, *args)
    def has_when(self): return _kmldom.TimeStamp_has_when(self)
    def clear_when(self): return _kmldom.TimeStamp_clear_when(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.TimeStamp_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.TimeStamp_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_TimeStamp
    __del__ = lambda self : None;
TimeStamp_swigregister = _kmldom.TimeStamp_swigregister
TimeStamp_swigregister(TimeStamp)

def TimeStamp_SWIGSharedPtrUpcast(*args):
  return _kmldom.TimeStamp_SWIGSharedPtrUpcast(*args)
TimeStamp_SWIGSharedPtrUpcast = _kmldom.TimeStamp_SWIGSharedPtrUpcast

class GxTimeStamp(TimeStamp):
    __swig_setmethods__ = {}
    for _s in [TimeStamp]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxTimeStamp, name, value)
    __swig_getmethods__ = {}
    for _s in [TimeStamp]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxTimeStamp, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxTimeStamp_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxTimeStamp_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxTimeStamp
    __del__ = lambda self : None;
GxTimeStamp_swigregister = _kmldom.GxTimeStamp_swigregister
GxTimeStamp_swigregister(GxTimeStamp)

def GxTimeStamp_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxTimeStamp_SWIGSharedPtrUpcast(*args)
GxTimeStamp_SWIGSharedPtrUpcast = _kmldom.GxTimeStamp_SWIGSharedPtrUpcast

class Kml(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Kml, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, Kml, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_hint(self): return _kmldom.Kml_get_hint(self)
    def set_hint(self, *args): return _kmldom.Kml_set_hint(self, *args)
    def has_hint(self): return _kmldom.Kml_has_hint(self)
    def clear_hint(self): return _kmldom.Kml_clear_hint(self)
    def get_networklinkcontrol(self): return _kmldom.Kml_get_networklinkcontrol(self)
    def set_networklinkcontrol(self, *args): return _kmldom.Kml_set_networklinkcontrol(self, *args)
    def has_networklinkcontrol(self): return _kmldom.Kml_has_networklinkcontrol(self)
    def clear_networklinkcontrol(self): return _kmldom.Kml_clear_networklinkcontrol(self)
    def get_feature(self): return _kmldom.Kml_get_feature(self)
    def set_feature(self, *args): return _kmldom.Kml_set_feature(self, *args)
    def has_feature(self): return _kmldom.Kml_has_feature(self)
    def clear_feature(self): return _kmldom.Kml_clear_feature(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.Kml_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.Kml_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_Kml
    __del__ = lambda self : None;
Kml_swigregister = _kmldom.Kml_swigregister
Kml_swigregister(Kml)

def Kml_SWIGSharedPtrUpcast(*args):
  return _kmldom.Kml_SWIGSharedPtrUpcast(*args)
Kml_SWIGSharedPtrUpcast = _kmldom.Kml_SWIGSharedPtrUpcast

class AtomAuthor(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AtomAuthor, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AtomAuthor, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_name(self): return _kmldom.AtomAuthor_get_name(self)
    def set_name(self, *args): return _kmldom.AtomAuthor_set_name(self, *args)
    def has_name(self): return _kmldom.AtomAuthor_has_name(self)
    def clear_name(self): return _kmldom.AtomAuthor_clear_name(self)
    def get_uri(self): return _kmldom.AtomAuthor_get_uri(self)
    def set_uri(self, *args): return _kmldom.AtomAuthor_set_uri(self, *args)
    def has_uri(self): return _kmldom.AtomAuthor_has_uri(self)
    def clear_uri(self): return _kmldom.AtomAuthor_clear_uri(self)
    def get_email(self): return _kmldom.AtomAuthor_get_email(self)
    def set_email(self, *args): return _kmldom.AtomAuthor_set_email(self, *args)
    def has_email(self): return _kmldom.AtomAuthor_has_email(self)
    def clear_email(self): return _kmldom.AtomAuthor_clear_email(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.AtomAuthor_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.AtomAuthor_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_AtomAuthor
    __del__ = lambda self : None;
AtomAuthor_swigregister = _kmldom.AtomAuthor_swigregister
AtomAuthor_swigregister(AtomAuthor)

def AtomAuthor_SWIGSharedPtrUpcast(*args):
  return _kmldom.AtomAuthor_SWIGSharedPtrUpcast(*args)
AtomAuthor_SWIGSharedPtrUpcast = _kmldom.AtomAuthor_SWIGSharedPtrUpcast

class AtomLink(Element):
    __swig_setmethods__ = {}
    for _s in [Element]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, AtomLink, name, value)
    __swig_getmethods__ = {}
    for _s in [Element]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, AtomLink, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_href(self): return _kmldom.AtomLink_get_href(self)
    def has_href(self): return _kmldom.AtomLink_has_href(self)
    def set_href(self, *args): return _kmldom.AtomLink_set_href(self, *args)
    def clear_href(self): return _kmldom.AtomLink_clear_href(self)
    def get_rel(self): return _kmldom.AtomLink_get_rel(self)
    def has_rel(self): return _kmldom.AtomLink_has_rel(self)
    def set_rel(self, *args): return _kmldom.AtomLink_set_rel(self, *args)
    def clear_rel(self): return _kmldom.AtomLink_clear_rel(self)
    def get_type(self): return _kmldom.AtomLink_get_type(self)
    def has_type(self): return _kmldom.AtomLink_has_type(self)
    def set_type(self, *args): return _kmldom.AtomLink_set_type(self, *args)
    def clear_type(self): return _kmldom.AtomLink_clear_type(self)
    def get_hreflang(self): return _kmldom.AtomLink_get_hreflang(self)
    def has_hreflang(self): return _kmldom.AtomLink_has_hreflang(self)
    def set_hreflang(self, *args): return _kmldom.AtomLink_set_hreflang(self, *args)
    def clear_hreflang(self): return _kmldom.AtomLink_clear_hreflang(self)
    def get_title(self): return _kmldom.AtomLink_get_title(self)
    def has_title(self): return _kmldom.AtomLink_has_title(self)
    def set_title(self, *args): return _kmldom.AtomLink_set_title(self, *args)
    def clear_title(self): return _kmldom.AtomLink_clear_title(self)
    def get_length(self): return _kmldom.AtomLink_get_length(self)
    def has_length(self): return _kmldom.AtomLink_has_length(self)
    def set_length(self, *args): return _kmldom.AtomLink_set_length(self, *args)
    def clear_length(self): return _kmldom.AtomLink_clear_length(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.AtomLink_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.AtomLink_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_AtomLink
    __del__ = lambda self : None;
AtomLink_swigregister = _kmldom.AtomLink_swigregister
AtomLink_swigregister(AtomLink)

def AtomLink_SWIGSharedPtrUpcast(*args):
  return _kmldom.AtomLink_SWIGSharedPtrUpcast(*args)
AtomLink_SWIGSharedPtrUpcast = _kmldom.AtomLink_SWIGSharedPtrUpcast

class GxTourPrimitive(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxTourPrimitive, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxTourPrimitive, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxTourPrimitive_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxTourPrimitive_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxTourPrimitive
    __del__ = lambda self : None;
GxTourPrimitive_swigregister = _kmldom.GxTourPrimitive_swigregister
GxTourPrimitive_swigregister(GxTourPrimitive)

def GxTourPrimitive_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxTourPrimitive_SWIGSharedPtrUpcast(*args)
GxTourPrimitive_SWIGSharedPtrUpcast = _kmldom.GxTourPrimitive_SWIGSharedPtrUpcast

class GxPlaylist(Object):
    __swig_setmethods__ = {}
    for _s in [Object]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxPlaylist, name, value)
    __swig_getmethods__ = {}
    for _s in [Object]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxPlaylist, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def add_gx_tourprimitive(self, *args): return _kmldom.GxPlaylist_add_gx_tourprimitive(self, *args)
    def get_gx_tourprimitive_array_size(self): return _kmldom.GxPlaylist_get_gx_tourprimitive_array_size(self)
    def get_gx_tourprimitive_array_at(self, *args): return _kmldom.GxPlaylist_get_gx_tourprimitive_array_at(self, *args)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxPlaylist_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxPlaylist_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxPlaylist
    __del__ = lambda self : None;
GxPlaylist_swigregister = _kmldom.GxPlaylist_swigregister
GxPlaylist_swigregister(GxPlaylist)

def GxPlaylist_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxPlaylist_SWIGSharedPtrUpcast(*args)
GxPlaylist_SWIGSharedPtrUpcast = _kmldom.GxPlaylist_SWIGSharedPtrUpcast

class GxTour(Feature):
    __swig_setmethods__ = {}
    for _s in [Feature]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxTour, name, value)
    __swig_getmethods__ = {}
    for _s in [Feature]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxTour, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_gx_playlist(self): return _kmldom.GxTour_get_gx_playlist(self)
    def has_gx_playlist(self): return _kmldom.GxTour_has_gx_playlist(self)
    def set_gx_playlist(self, *args): return _kmldom.GxTour_set_gx_playlist(self, *args)
    def clear_gx_playlist(self): return _kmldom.GxTour_clear_gx_playlist(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxTour_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxTour_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxTour
    __del__ = lambda self : None;
GxTour_swigregister = _kmldom.GxTour_swigregister
GxTour_swigregister(GxTour)

def GxTour_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxTour_SWIGSharedPtrUpcast(*args)
GxTour_SWIGSharedPtrUpcast = _kmldom.GxTour_SWIGSharedPtrUpcast

class GxAnimatedUpdate(GxTourPrimitive):
    __swig_setmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxAnimatedUpdate, name, value)
    __swig_getmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxAnimatedUpdate, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_gx_duration(self): return _kmldom.GxAnimatedUpdate_get_gx_duration(self)
    def has_gx_duration(self): return _kmldom.GxAnimatedUpdate_has_gx_duration(self)
    def set_gx_duration(self, *args): return _kmldom.GxAnimatedUpdate_set_gx_duration(self, *args)
    def clear_gx_duration(self): return _kmldom.GxAnimatedUpdate_clear_gx_duration(self)
    def get_update(self): return _kmldom.GxAnimatedUpdate_get_update(self)
    def has_update(self): return _kmldom.GxAnimatedUpdate_has_update(self)
    def set_update(self, *args): return _kmldom.GxAnimatedUpdate_set_update(self, *args)
    def clear_update(self): return _kmldom.GxAnimatedUpdate_clear_update(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxAnimatedUpdate_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxAnimatedUpdate_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxAnimatedUpdate
    __del__ = lambda self : None;
GxAnimatedUpdate_swigregister = _kmldom.GxAnimatedUpdate_swigregister
GxAnimatedUpdate_swigregister(GxAnimatedUpdate)

def GxAnimatedUpdate_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxAnimatedUpdate_SWIGSharedPtrUpcast(*args)
GxAnimatedUpdate_SWIGSharedPtrUpcast = _kmldom.GxAnimatedUpdate_SWIGSharedPtrUpcast

class GxFlyTo(GxTourPrimitive):
    __swig_setmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxFlyTo, name, value)
    __swig_getmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxFlyTo, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_gx_duration(self): return _kmldom.GxFlyTo_get_gx_duration(self)
    def has_gx_duration(self): return _kmldom.GxFlyTo_has_gx_duration(self)
    def set_gx_duration(self, *args): return _kmldom.GxFlyTo_set_gx_duration(self, *args)
    def clear_gx_duration(self): return _kmldom.GxFlyTo_clear_gx_duration(self)
    def get_gx_flytomode(self): return _kmldom.GxFlyTo_get_gx_flytomode(self)
    def has_gx_flytomode(self): return _kmldom.GxFlyTo_has_gx_flytomode(self)
    def set_gx_flytomode(self, *args): return _kmldom.GxFlyTo_set_gx_flytomode(self, *args)
    def clear_gx_flytomode(self): return _kmldom.GxFlyTo_clear_gx_flytomode(self)
    def get_abstractview(self): return _kmldom.GxFlyTo_get_abstractview(self)
    def has_abstractview(self): return _kmldom.GxFlyTo_has_abstractview(self)
    def set_abstractview(self, *args): return _kmldom.GxFlyTo_set_abstractview(self, *args)
    def clear_abstractview(self): return _kmldom.GxFlyTo_clear_abstractview(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxFlyTo_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxFlyTo_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxFlyTo
    __del__ = lambda self : None;
GxFlyTo_swigregister = _kmldom.GxFlyTo_swigregister
GxFlyTo_swigregister(GxFlyTo)

def GxFlyTo_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxFlyTo_SWIGSharedPtrUpcast(*args)
GxFlyTo_SWIGSharedPtrUpcast = _kmldom.GxFlyTo_SWIGSharedPtrUpcast

class GxWait(GxTourPrimitive):
    __swig_setmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxWait, name, value)
    __swig_getmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxWait, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_gx_duration(self): return _kmldom.GxWait_get_gx_duration(self)
    def has_gx_duration(self): return _kmldom.GxWait_has_gx_duration(self)
    def set_gx_duration(self, *args): return _kmldom.GxWait_set_gx_duration(self, *args)
    def clear_gx_duration(self): return _kmldom.GxWait_clear_gx_duration(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxWait_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxWait_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxWait
    __del__ = lambda self : None;
GxWait_swigregister = _kmldom.GxWait_swigregister
GxWait_swigregister(GxWait)

def GxWait_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxWait_SWIGSharedPtrUpcast(*args)
GxWait_SWIGSharedPtrUpcast = _kmldom.GxWait_SWIGSharedPtrUpcast

class GxSoundCue(GxTourPrimitive):
    __swig_setmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxSoundCue, name, value)
    __swig_getmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxSoundCue, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_href(self): return _kmldom.GxSoundCue_get_href(self)
    def has_href(self): return _kmldom.GxSoundCue_has_href(self)
    def set_href(self, *args): return _kmldom.GxSoundCue_set_href(self, *args)
    def clear_href(self): return _kmldom.GxSoundCue_clear_href(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxSoundCue_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxSoundCue_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxSoundCue
    __del__ = lambda self : None;
GxSoundCue_swigregister = _kmldom.GxSoundCue_swigregister
GxSoundCue_swigregister(GxSoundCue)

def GxSoundCue_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxSoundCue_SWIGSharedPtrUpcast(*args)
GxSoundCue_SWIGSharedPtrUpcast = _kmldom.GxSoundCue_SWIGSharedPtrUpcast

class GxTourControl(GxTourPrimitive):
    __swig_setmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, GxTourControl, name, value)
    __swig_getmethods__ = {}
    for _s in [GxTourPrimitive]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, GxTourControl, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def get_gx_playmode(self): return _kmldom.GxTourControl_get_gx_playmode(self)
    def has_gx_playmode(self): return _kmldom.GxTourControl_has_gx_playmode(self)
    def set_gx_playmode(self, *args): return _kmldom.GxTourControl_set_gx_playmode(self, *args)
    def clear_gx_playmode(self): return _kmldom.GxTourControl_clear_gx_playmode(self)
    __swig_getmethods__["SWIGSharedPtrUpcast"] = lambda x: _kmldom.GxTourControl_SWIGSharedPtrUpcast
    if _newclass:SWIGSharedPtrUpcast = staticmethod(_kmldom.GxTourControl_SWIGSharedPtrUpcast)
    __swig_destroy__ = _kmldom.delete_GxTourControl
    __del__ = lambda self : None;
GxTourControl_swigregister = _kmldom.GxTourControl_swigregister
GxTourControl_swigregister(GxTourControl)

def GxTourControl_SWIGSharedPtrUpcast(*args):
  return _kmldom.GxTourControl_SWIGSharedPtrUpcast(*args)
GxTourControl_SWIGSharedPtrUpcast = _kmldom.GxTourControl_SWIGSharedPtrUpcast

class KmlFactory(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, KmlFactory, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, KmlFactory, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["GetFactory"] = lambda x: _kmldom.KmlFactory_GetFactory
    if _newclass:GetFactory = staticmethod(_kmldom.KmlFactory_GetFactory)
    def CreateElementById(self, *args): return _kmldom.KmlFactory_CreateElementById(self, *args)
    def CreateAlias(self): return _kmldom.KmlFactory_CreateAlias(self)
    def CreateAtomAuthor(self): return _kmldom.KmlFactory_CreateAtomAuthor(self)
    def CreateAtomLink(self): return _kmldom.KmlFactory_CreateAtomLink(self)
    def CreateBalloonStyle(self): return _kmldom.KmlFactory_CreateBalloonStyle(self)
    def CreateCamera(self): return _kmldom.KmlFactory_CreateCamera(self)
    def CreateChange(self): return _kmldom.KmlFactory_CreateChange(self)
    def CreateCoordinates(self): return _kmldom.KmlFactory_CreateCoordinates(self)
    def CreateCreate(self): return _kmldom.KmlFactory_CreateCreate(self)
    def CreateData(self): return _kmldom.KmlFactory_CreateData(self)
    def CreateDelete(self): return _kmldom.KmlFactory_CreateDelete(self)
    def CreateDocument(self): return _kmldom.KmlFactory_CreateDocument(self)
    def CreateExtendedData(self): return _kmldom.KmlFactory_CreateExtendedData(self)
    def CreateFolder(self): return _kmldom.KmlFactory_CreateFolder(self)
    def CreateGroundOverlay(self): return _kmldom.KmlFactory_CreateGroundOverlay(self)
    def CreateHotSpot(self): return _kmldom.KmlFactory_CreateHotSpot(self)
    def CreateIcon(self): return _kmldom.KmlFactory_CreateIcon(self)
    def CreateIconStyle(self): return _kmldom.KmlFactory_CreateIconStyle(self)
    def CreateIconStyleIcon(self): return _kmldom.KmlFactory_CreateIconStyleIcon(self)
    def CreateImagePyramid(self): return _kmldom.KmlFactory_CreateImagePyramid(self)
    def CreateInnerBoundaryIs(self): return _kmldom.KmlFactory_CreateInnerBoundaryIs(self)
    def CreateItemIcon(self): return _kmldom.KmlFactory_CreateItemIcon(self)
    def CreateKml(self): return _kmldom.KmlFactory_CreateKml(self)
    def CreateLabelStyle(self): return _kmldom.KmlFactory_CreateLabelStyle(self)
    def CreateLatLonBox(self): return _kmldom.KmlFactory_CreateLatLonBox(self)
    def CreateLatLonAltBox(self): return _kmldom.KmlFactory_CreateLatLonAltBox(self)
    def CreateLinearRing(self): return _kmldom.KmlFactory_CreateLinearRing(self)
    def CreateLineString(self): return _kmldom.KmlFactory_CreateLineString(self)
    def CreateLineStyle(self): return _kmldom.KmlFactory_CreateLineStyle(self)
    def CreateLink(self): return _kmldom.KmlFactory_CreateLink(self)
    def CreateLinkSnippet(self): return _kmldom.KmlFactory_CreateLinkSnippet(self)
    def CreateListStyle(self): return _kmldom.KmlFactory_CreateListStyle(self)
    def CreateLocation(self): return _kmldom.KmlFactory_CreateLocation(self)
    def CreateLod(self): return _kmldom.KmlFactory_CreateLod(self)
    def CreateLookAt(self): return _kmldom.KmlFactory_CreateLookAt(self)
    def CreateModel(self): return _kmldom.KmlFactory_CreateModel(self)
    def CreateMultiGeometry(self): return _kmldom.KmlFactory_CreateMultiGeometry(self)
    def CreateNetworkLink(self): return _kmldom.KmlFactory_CreateNetworkLink(self)
    def CreateOrientation(self): return _kmldom.KmlFactory_CreateOrientation(self)
    def CreateNetworkLinkControl(self): return _kmldom.KmlFactory_CreateNetworkLinkControl(self)
    def CreateOuterBoundaryIs(self): return _kmldom.KmlFactory_CreateOuterBoundaryIs(self)
    def CreateOverlayXY(self): return _kmldom.KmlFactory_CreateOverlayXY(self)
    def CreatePair(self): return _kmldom.KmlFactory_CreatePair(self)
    def CreatePhotoOverlay(self): return _kmldom.KmlFactory_CreatePhotoOverlay(self)
    def CreatePlacemark(self): return _kmldom.KmlFactory_CreatePlacemark(self)
    def CreatePolygon(self): return _kmldom.KmlFactory_CreatePolygon(self)
    def CreatePoint(self): return _kmldom.KmlFactory_CreatePoint(self)
    def CreatePolyStyle(self): return _kmldom.KmlFactory_CreatePolyStyle(self)
    def CreateRegion(self): return _kmldom.KmlFactory_CreateRegion(self)
    def CreateResourceMap(self): return _kmldom.KmlFactory_CreateResourceMap(self)
    def CreateRotationXY(self): return _kmldom.KmlFactory_CreateRotationXY(self)
    def CreateScale(self): return _kmldom.KmlFactory_CreateScale(self)
    def CreateSchema(self): return _kmldom.KmlFactory_CreateSchema(self)
    def CreateSchemaData(self): return _kmldom.KmlFactory_CreateSchemaData(self)
    def CreateScreenOverlay(self): return _kmldom.KmlFactory_CreateScreenOverlay(self)
    def CreateScreenXY(self): return _kmldom.KmlFactory_CreateScreenXY(self)
    def CreateSize(self): return _kmldom.KmlFactory_CreateSize(self)
    def CreateSimpleData(self): return _kmldom.KmlFactory_CreateSimpleData(self)
    def CreateSimpleField(self): return _kmldom.KmlFactory_CreateSimpleField(self)
    def CreateSnippet(self): return _kmldom.KmlFactory_CreateSnippet(self)
    def CreateStyle(self): return _kmldom.KmlFactory_CreateStyle(self)
    def CreateStyleMap(self): return _kmldom.KmlFactory_CreateStyleMap(self)
    def CreateTimeSpan(self): return _kmldom.KmlFactory_CreateTimeSpan(self)
    def CreateTimeStamp(self): return _kmldom.KmlFactory_CreateTimeStamp(self)
    def CreateViewVolume(self): return _kmldom.KmlFactory_CreateViewVolume(self)
    def CreateUpdate(self): return _kmldom.KmlFactory_CreateUpdate(self)
    def CreateGxAnimatedUpdate(self): return _kmldom.KmlFactory_CreateGxAnimatedUpdate(self)
    def CreateGxFlyTo(self): return _kmldom.KmlFactory_CreateGxFlyTo(self)
    def CreateGxLatLonQuad(self): return _kmldom.KmlFactory_CreateGxLatLonQuad(self)
    def CreateGxPlaylist(self): return _kmldom.KmlFactory_CreateGxPlaylist(self)
    def CreateGxSoundCue(self): return _kmldom.KmlFactory_CreateGxSoundCue(self)
    def CreateGxTimeSpan(self): return _kmldom.KmlFactory_CreateGxTimeSpan(self)
    def CreateGxTimeStamp(self): return _kmldom.KmlFactory_CreateGxTimeStamp(self)
    def CreateGxTour(self): return _kmldom.KmlFactory_CreateGxTour(self)
    def CreateGxTourControl(self): return _kmldom.KmlFactory_CreateGxTourControl(self)
    def CreateGxWait(self): return _kmldom.KmlFactory_CreateGxWait(self)
    __swig_destroy__ = _kmldom.delete_KmlFactory
    __del__ = lambda self : None;
KmlFactory_swigregister = _kmldom.KmlFactory_swigregister
KmlFactory_swigregister(KmlFactory)

def KmlFactory_GetFactory():
  return _kmldom.KmlFactory_GetFactory()
KmlFactory_GetFactory = _kmldom.KmlFactory_GetFactory


def ParseKml(*args):
  return _kmldom.ParseKml(*args)
ParseKml = _kmldom.ParseKml

def SerializePretty(*args):
  return _kmldom.SerializePretty(*args)
SerializePretty = _kmldom.SerializePretty

def SerializeRaw(*args):
  return _kmldom.SerializeRaw(*args)
SerializeRaw = _kmldom.SerializeRaw

def AsElement(*args):
  return _kmldom.AsElement(*args)
AsElement = _kmldom.AsElement

def AsAbstractLatLonBox(*args):
  return _kmldom.AsAbstractLatLonBox(*args)
AsAbstractLatLonBox = _kmldom.AsAbstractLatLonBox

def AsAbstractView(*args):
  return _kmldom.AsAbstractView(*args)
AsAbstractView = _kmldom.AsAbstractView

def AsColorStyle(*args):
  return _kmldom.AsColorStyle(*args)
AsColorStyle = _kmldom.AsColorStyle

def AsContainer(*args):
  return _kmldom.AsContainer(*args)
AsContainer = _kmldom.AsContainer

def AsFeature(*args):
  return _kmldom.AsFeature(*args)
AsFeature = _kmldom.AsFeature

def AsGeometry(*args):
  return _kmldom.AsGeometry(*args)
AsGeometry = _kmldom.AsGeometry

def AsObject(*args):
  return _kmldom.AsObject(*args)
AsObject = _kmldom.AsObject

def AsOverlay(*args):
  return _kmldom.AsOverlay(*args)
AsOverlay = _kmldom.AsOverlay

def AsStyleSelector(*args):
  return _kmldom.AsStyleSelector(*args)
AsStyleSelector = _kmldom.AsStyleSelector

def AsSubStyle(*args):
  return _kmldom.AsSubStyle(*args)
AsSubStyle = _kmldom.AsSubStyle

def AsTimePrimitive(*args):
  return _kmldom.AsTimePrimitive(*args)
AsTimePrimitive = _kmldom.AsTimePrimitive

def AsAlias(*args):
  return _kmldom.AsAlias(*args)
AsAlias = _kmldom.AsAlias

def AsBalloonStyle(*args):
  return _kmldom.AsBalloonStyle(*args)
AsBalloonStyle = _kmldom.AsBalloonStyle

def AsCamera(*args):
  return _kmldom.AsCamera(*args)
AsCamera = _kmldom.AsCamera

def AsChange(*args):
  return _kmldom.AsChange(*args)
AsChange = _kmldom.AsChange

def AsCoordinates(*args):
  return _kmldom.AsCoordinates(*args)
AsCoordinates = _kmldom.AsCoordinates

def AsCreate(*args):
  return _kmldom.AsCreate(*args)
AsCreate = _kmldom.AsCreate

def AsData(*args):
  return _kmldom.AsData(*args)
AsData = _kmldom.AsData

def AsDelete(*args):
  return _kmldom.AsDelete(*args)
AsDelete = _kmldom.AsDelete

def AsDocument(*args):
  return _kmldom.AsDocument(*args)
AsDocument = _kmldom.AsDocument

def AsExtendedData(*args):
  return _kmldom.AsExtendedData(*args)
AsExtendedData = _kmldom.AsExtendedData

def AsFolder(*args):
  return _kmldom.AsFolder(*args)
AsFolder = _kmldom.AsFolder

def AsGroundOverlay(*args):
  return _kmldom.AsGroundOverlay(*args)
AsGroundOverlay = _kmldom.AsGroundOverlay

def AsHotSpot(*args):
  return _kmldom.AsHotSpot(*args)
AsHotSpot = _kmldom.AsHotSpot

def AsIcon(*args):
  return _kmldom.AsIcon(*args)
AsIcon = _kmldom.AsIcon

def AsIconStyle(*args):
  return _kmldom.AsIconStyle(*args)
AsIconStyle = _kmldom.AsIconStyle

def AsIconStyleIcon(*args):
  return _kmldom.AsIconStyleIcon(*args)
AsIconStyleIcon = _kmldom.AsIconStyleIcon

def AsImagePyramid(*args):
  return _kmldom.AsImagePyramid(*args)
AsImagePyramid = _kmldom.AsImagePyramid

def AsInnerBoundaryIs(*args):
  return _kmldom.AsInnerBoundaryIs(*args)
AsInnerBoundaryIs = _kmldom.AsInnerBoundaryIs

def AsItemIcon(*args):
  return _kmldom.AsItemIcon(*args)
AsItemIcon = _kmldom.AsItemIcon

def AsKml(*args):
  return _kmldom.AsKml(*args)
AsKml = _kmldom.AsKml

def AsLabelStyle(*args):
  return _kmldom.AsLabelStyle(*args)
AsLabelStyle = _kmldom.AsLabelStyle

def AsLatLonAltBox(*args):
  return _kmldom.AsLatLonAltBox(*args)
AsLatLonAltBox = _kmldom.AsLatLonAltBox

def AsLatLonBox(*args):
  return _kmldom.AsLatLonBox(*args)
AsLatLonBox = _kmldom.AsLatLonBox

def AsLineString(*args):
  return _kmldom.AsLineString(*args)
AsLineString = _kmldom.AsLineString

def AsLineStyle(*args):
  return _kmldom.AsLineStyle(*args)
AsLineStyle = _kmldom.AsLineStyle

def AsLinearRing(*args):
  return _kmldom.AsLinearRing(*args)
AsLinearRing = _kmldom.AsLinearRing

def AsLink(*args):
  return _kmldom.AsLink(*args)
AsLink = _kmldom.AsLink

def AsLinkSnippet(*args):
  return _kmldom.AsLinkSnippet(*args)
AsLinkSnippet = _kmldom.AsLinkSnippet

def AsListStyle(*args):
  return _kmldom.AsListStyle(*args)
AsListStyle = _kmldom.AsListStyle

def AsLocation(*args):
  return _kmldom.AsLocation(*args)
AsLocation = _kmldom.AsLocation

def AsLod(*args):
  return _kmldom.AsLod(*args)
AsLod = _kmldom.AsLod

def AsLookAt(*args):
  return _kmldom.AsLookAt(*args)
AsLookAt = _kmldom.AsLookAt

def AsMetadata(*args):
  return _kmldom.AsMetadata(*args)
AsMetadata = _kmldom.AsMetadata

def AsModel(*args):
  return _kmldom.AsModel(*args)
AsModel = _kmldom.AsModel

def AsMultiGeometry(*args):
  return _kmldom.AsMultiGeometry(*args)
AsMultiGeometry = _kmldom.AsMultiGeometry

def AsNetworkLink(*args):
  return _kmldom.AsNetworkLink(*args)
AsNetworkLink = _kmldom.AsNetworkLink

def AsNetworkLinkControl(*args):
  return _kmldom.AsNetworkLinkControl(*args)
AsNetworkLinkControl = _kmldom.AsNetworkLinkControl

def AsOrientation(*args):
  return _kmldom.AsOrientation(*args)
AsOrientation = _kmldom.AsOrientation

def AsOuterBoundaryIs(*args):
  return _kmldom.AsOuterBoundaryIs(*args)
AsOuterBoundaryIs = _kmldom.AsOuterBoundaryIs

def AsOverlayXY(*args):
  return _kmldom.AsOverlayXY(*args)
AsOverlayXY = _kmldom.AsOverlayXY

def AsPair(*args):
  return _kmldom.AsPair(*args)
AsPair = _kmldom.AsPair

def AsPhotoOverlay(*args):
  return _kmldom.AsPhotoOverlay(*args)
AsPhotoOverlay = _kmldom.AsPhotoOverlay

def AsPlacemark(*args):
  return _kmldom.AsPlacemark(*args)
AsPlacemark = _kmldom.AsPlacemark

def AsPoint(*args):
  return _kmldom.AsPoint(*args)
AsPoint = _kmldom.AsPoint

def AsPolyStyle(*args):
  return _kmldom.AsPolyStyle(*args)
AsPolyStyle = _kmldom.AsPolyStyle

def AsPolygon(*args):
  return _kmldom.AsPolygon(*args)
AsPolygon = _kmldom.AsPolygon

def AsRegion(*args):
  return _kmldom.AsRegion(*args)
AsRegion = _kmldom.AsRegion

def AsResourceMap(*args):
  return _kmldom.AsResourceMap(*args)
AsResourceMap = _kmldom.AsResourceMap

def AsRotationXY(*args):
  return _kmldom.AsRotationXY(*args)
AsRotationXY = _kmldom.AsRotationXY

def AsScale(*args):
  return _kmldom.AsScale(*args)
AsScale = _kmldom.AsScale

def AsSchema(*args):
  return _kmldom.AsSchema(*args)
AsSchema = _kmldom.AsSchema

def AsSchemaData(*args):
  return _kmldom.AsSchemaData(*args)
AsSchemaData = _kmldom.AsSchemaData

def AsScreenOverlay(*args):
  return _kmldom.AsScreenOverlay(*args)
AsScreenOverlay = _kmldom.AsScreenOverlay

def AsScreenXY(*args):
  return _kmldom.AsScreenXY(*args)
AsScreenXY = _kmldom.AsScreenXY

def AsSimpleData(*args):
  return _kmldom.AsSimpleData(*args)
AsSimpleData = _kmldom.AsSimpleData

def AsSimpleField(*args):
  return _kmldom.AsSimpleField(*args)
AsSimpleField = _kmldom.AsSimpleField

def AsSize(*args):
  return _kmldom.AsSize(*args)
AsSize = _kmldom.AsSize

def AsSnippet(*args):
  return _kmldom.AsSnippet(*args)
AsSnippet = _kmldom.AsSnippet

def AsStyle(*args):
  return _kmldom.AsStyle(*args)
AsStyle = _kmldom.AsStyle

def AsStyleMap(*args):
  return _kmldom.AsStyleMap(*args)
AsStyleMap = _kmldom.AsStyleMap

def AsTimeSpan(*args):
  return _kmldom.AsTimeSpan(*args)
AsTimeSpan = _kmldom.AsTimeSpan

def AsTimeStamp(*args):
  return _kmldom.AsTimeStamp(*args)
AsTimeStamp = _kmldom.AsTimeStamp

def AsUpdate(*args):
  return _kmldom.AsUpdate(*args)
AsUpdate = _kmldom.AsUpdate

def AsViewVolume(*args):
  return _kmldom.AsViewVolume(*args)
AsViewVolume = _kmldom.AsViewVolume

def AsAtomAuthor(*args):
  return _kmldom.AsAtomAuthor(*args)
AsAtomAuthor = _kmldom.AsAtomAuthor

def AsAtomCategory(*args):
  return _kmldom.AsAtomCategory(*args)
AsAtomCategory = _kmldom.AsAtomCategory

def AsAtomContent(*args):
  return _kmldom.AsAtomContent(*args)
AsAtomContent = _kmldom.AsAtomContent

def AsAtomEntry(*args):
  return _kmldom.AsAtomEntry(*args)
AsAtomEntry = _kmldom.AsAtomEntry

def AsAtomFeed(*args):
  return _kmldom.AsAtomFeed(*args)
AsAtomFeed = _kmldom.AsAtomFeed

def AsAtomLink(*args):
  return _kmldom.AsAtomLink(*args)
AsAtomLink = _kmldom.AsAtomLink

def AsXalAddressDetails(*args):
  return _kmldom.AsXalAddressDetails(*args)
AsXalAddressDetails = _kmldom.AsXalAddressDetails

def AsXalAdministrativeArea(*args):
  return _kmldom.AsXalAdministrativeArea(*args)
AsXalAdministrativeArea = _kmldom.AsXalAdministrativeArea

def AsXalCountry(*args):
  return _kmldom.AsXalCountry(*args)
AsXalCountry = _kmldom.AsXalCountry

def AsXalLocality(*args):
  return _kmldom.AsXalLocality(*args)
AsXalLocality = _kmldom.AsXalLocality

def AsXalPostalCode(*args):
  return _kmldom.AsXalPostalCode(*args)
AsXalPostalCode = _kmldom.AsXalPostalCode

def AsXalSubAdministrativeArea(*args):
  return _kmldom.AsXalSubAdministrativeArea(*args)
AsXalSubAdministrativeArea = _kmldom.AsXalSubAdministrativeArea

def AsXalThoroughfare(*args):
  return _kmldom.AsXalThoroughfare(*args)
AsXalThoroughfare = _kmldom.AsXalThoroughfare

def AsGxAnimatedUpdate(*args):
  return _kmldom.AsGxAnimatedUpdate(*args)
AsGxAnimatedUpdate = _kmldom.AsGxAnimatedUpdate

def AsGxFlyTo(*args):
  return _kmldom.AsGxFlyTo(*args)
AsGxFlyTo = _kmldom.AsGxFlyTo

def AsGxLatLonQuad(*args):
  return _kmldom.AsGxLatLonQuad(*args)
AsGxLatLonQuad = _kmldom.AsGxLatLonQuad

def AsGxPlaylist(*args):
  return _kmldom.AsGxPlaylist(*args)
AsGxPlaylist = _kmldom.AsGxPlaylist

def AsGxSoundCue(*args):
  return _kmldom.AsGxSoundCue(*args)
AsGxSoundCue = _kmldom.AsGxSoundCue

def AsGxTimeSpan(*args):
  return _kmldom.AsGxTimeSpan(*args)
AsGxTimeSpan = _kmldom.AsGxTimeSpan

def AsGxTimeStamp(*args):
  return _kmldom.AsGxTimeStamp(*args)
AsGxTimeStamp = _kmldom.AsGxTimeStamp

def AsGxTour(*args):
  return _kmldom.AsGxTour(*args)
AsGxTour = _kmldom.AsGxTour

def AsGxTourControl(*args):
  return _kmldom.AsGxTourControl(*args)
AsGxTourControl = _kmldom.AsGxTourControl

def AsGxTourPrimitive(*args):
  return _kmldom.AsGxTourPrimitive(*args)
AsGxTourPrimitive = _kmldom.AsGxTourPrimitive

def AsGxWait(*args):
  return _kmldom.AsGxWait(*args)
AsGxWait = _kmldom.AsGxWait


