/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
  \page qtgamepad-index.html
  \title Qt Gamepad
  \brief A cross-platform library to facilitate the use of gamepad hardware in Qt and Qt Quick applications.

  Qt Gamepad is an add-on library that enables Qt applications to support
  the use of gamepad hardware. The module provides both QML and C++ interfaces.

  \section1 Getting Started

  Before you start using the APIs provided by this module, ensure that the
  gamepad is detected by your development environment.

  \section2 Linux/X11

  On standard Linux distributions such as Ubuntu, gamepads such as XBox or
  PlayStaion controllers are detected out-of-the-box. To check if the
  gamepad is detected, \c grep the \c dmesg logs using:

  \badcode
  dmesg | grep "<gamepad-make>"
  \endcode

  If you do not see the entries for the gamepad you are using, check if
  the \c joystick package is installed. If not, install the package and \c grep
  the \c dmesg logs again.

  \section2 Windows

  The Windows Plug-n-Play service automatically installs the necessary drivers
  when the gamepad is connected through a USB port for the first time. Once the
  drivers are installed, select \uicontrol{Control Panel > Device and Printers}
  and check if the gamepad is listed under the \uicontrol Devices section.

  To test whether gamepad input is detected, select
  \uicontrol {Gamepad Controller Settings} from the context menu, select
  \uicontrol {Properties > Test}, and start testing. You can also run the
  \l{Qt Gamepad Configure Buttons Example}{configureButtons} example to test.

  \section1 Examples

  The \l{Qt Gamepad Examples}{examples} demonstrate how to handle input from a
  gamepad using the QML and C++ APIs.

  \section1 API Reference

  \list
  \li \l{Qt Gamepad QML Types}
  \li \l{Qt Gamepad C++ Classes}
  \endlist

*/
