##teamcity[testSuiteStarted name='tst_Counting']
##teamcity[testStarted name='initTestCase()']
##teamcity[testFinished name='initTestCase()']
##teamcity[testStarted name='testPassPass(row 1)']
##teamcity[testStdOut name='testPassPass(row 1)' out='INFO |[Loc: ../counting/tst_counting.cpp(103)|]: QVERIFY(true)|nINFO |[Loc: ../counting/tst_counting.cpp(104)|]: QCOMPARE(2 + 1, 3)']
##teamcity[testFinished name='testPassPass(row 1)']
##teamcity[testStarted name='testPassPass(row 2)']
##teamcity[testStdOut name='testPassPass(row 2)' out='INFO |[Loc: ../counting/tst_counting.cpp(103)|]: QVERIFY(true)|nINFO |[Loc: ../counting/tst_counting.cpp(104)|]: QCOMPARE(2 + 1, 3)']
##teamcity[testFinished name='testPassPass(row 2)']
##teamcity[testStarted name='testPassSkip(row 1)']
##teamcity[testStdOut name='testPassSkip(row 1)' out='INFO |[Loc: ../counting/tst_counting.cpp(103)|]: QVERIFY(true)|nINFO |[Loc: ../counting/tst_counting.cpp(104)|]: QCOMPARE(2 + 1, 3)']
##teamcity[testFinished name='testPassSkip(row 1)']
##teamcity[testIgnored name='testPassSkip(row 2)' message='Skipping |[Loc: ../counting/tst_counting.cpp(110)|]']
##teamcity[testStarted name='testPassFail(row 1)']
##teamcity[testStdOut name='testPassFail(row 1)' out='INFO |[Loc: ../counting/tst_counting.cpp(103)|]: QVERIFY(true)|nINFO |[Loc: ../counting/tst_counting.cpp(104)|]: QCOMPARE(2 + 1, 3)']
##teamcity[testFinished name='testPassFail(row 1)']
##teamcity[testStarted name='testPassFail(row 2)']
##teamcity[testFailed name='testPassFail(row 2)' message='Failure! |[Loc: ../counting/tst_counting.cpp(107)|]' details='|'false|' returned FALSE. ()']
##teamcity[testStdOut name='testPassFail(row 2)' out='INFO |[Loc: ../counting/tst_counting.cpp(107)|]: QVERIFY(false)']
##teamcity[testFinished name='testPassFail(row 2)']
##teamcity[testIgnored name='testSkipPass(row 1)' message='Skipping |[Loc: ../counting/tst_counting.cpp(110)|]']
##teamcity[testStarted name='testSkipPass(row 2)']
##teamcity[testStdOut name='testSkipPass(row 2)' out='INFO |[Loc: ../counting/tst_counting.cpp(103)|]: QVERIFY(true)|nINFO |[Loc: ../counting/tst_counting.cpp(104)|]: QCOMPARE(2 + 1, 3)']
##teamcity[testFinished name='testSkipPass(row 2)']
##teamcity[testIgnored name='testSkipSkip(row 1)' message='Skipping |[Loc: ../counting/tst_counting.cpp(110)|]']
##teamcity[testIgnored name='testSkipSkip(row 2)' message='Skipping |[Loc: ../counting/tst_counting.cpp(110)|]']
##teamcity[testIgnored name='testSkipFail(row 1)' message='Skipping |[Loc: ../counting/tst_counting.cpp(110)|]']
##teamcity[testStarted name='testSkipFail(row 2)']
##teamcity[testFailed name='testSkipFail(row 2)' message='Failure! |[Loc: ../counting/tst_counting.cpp(107)|]' details='|'false|' returned FALSE. ()']
##teamcity[testStdOut name='testSkipFail(row 2)' out='INFO |[Loc: ../counting/tst_counting.cpp(107)|]: QVERIFY(false)']
##teamcity[testFinished name='testSkipFail(row 2)']
##teamcity[testStarted name='testFailPass(row 1)']
##teamcity[testFailed name='testFailPass(row 1)' message='Failure! |[Loc: ../counting/tst_counting.cpp(107)|]' details='|'false|' returned FALSE. ()']
##teamcity[testStdOut name='testFailPass(row 1)' out='INFO |[Loc: ../counting/tst_counting.cpp(107)|]: QVERIFY(false)']
##teamcity[testFinished name='testFailPass(row 1)']
##teamcity[testStarted name='testFailPass(row 2)']
##teamcity[testStdOut name='testFailPass(row 2)' out='INFO |[Loc: ../counting/tst_counting.cpp(103)|]: QVERIFY(true)|nINFO |[Loc: ../counting/tst_counting.cpp(104)|]: QCOMPARE(2 + 1, 3)']
##teamcity[testFinished name='testFailPass(row 2)']
##teamcity[testStarted name='testFailSkip(row 1)']
##teamcity[testFailed name='testFailSkip(row 1)' message='Failure! |[Loc: ../counting/tst_counting.cpp(107)|]' details='|'false|' returned FALSE. ()']
##teamcity[testStdOut name='testFailSkip(row 1)' out='INFO |[Loc: ../counting/tst_counting.cpp(107)|]: QVERIFY(false)']
##teamcity[testFinished name='testFailSkip(row 1)']
##teamcity[testIgnored name='testFailSkip(row 2)' message='Skipping |[Loc: ../counting/tst_counting.cpp(110)|]']
##teamcity[testStarted name='testFailFail(row 1)']
##teamcity[testFailed name='testFailFail(row 1)' message='Failure! |[Loc: ../counting/tst_counting.cpp(107)|]' details='|'false|' returned FALSE. ()']
##teamcity[testStdOut name='testFailFail(row 1)' out='INFO |[Loc: ../counting/tst_counting.cpp(107)|]: QVERIFY(false)']
##teamcity[testFinished name='testFailFail(row 1)']
##teamcity[testStarted name='testFailFail(row 2)']
##teamcity[testFailed name='testFailFail(row 2)' message='Failure! |[Loc: ../counting/tst_counting.cpp(107)|]' details='|'false|' returned FALSE. ()']
##teamcity[testStdOut name='testFailFail(row 2)' out='INFO |[Loc: ../counting/tst_counting.cpp(107)|]: QVERIFY(false)']
##teamcity[testFinished name='testFailFail(row 2)']
##teamcity[testStarted name='testFailInInit(before)']
##teamcity[testFinished name='testFailInInit(before)']
##teamcity[testStarted name='testFailInInit(fail)']
##teamcity[testFailed name='testFailInInit(fail)' message='Failure! |[Loc: ../counting/tst_counting.cpp(226)|]' details='Fail in init()']
##teamcity[testFinished name='testFailInInit(fail)']
##teamcity[testStarted name='testFailInInit(after)']
##teamcity[testFinished name='testFailInInit(after)']
##teamcity[testStarted name='testFailInCleanup(before)']
##teamcity[testFinished name='testFailInCleanup(before)']
##teamcity[testStarted name='testFailInCleanup(fail)']
##teamcity[testFailed name='testFailInCleanup(fail)' message='Failure! |[Loc: ../counting/tst_counting.cpp(234)|]' details='Fail in cleanup()']
##teamcity[testStdOut name='testFailInCleanup(fail)' out='QDEBUG: This test function should execute and then QFAIL in cleanup()']
##teamcity[testFinished name='testFailInCleanup(fail)']
##teamcity[testStarted name='testFailInCleanup(after)']
##teamcity[testFinished name='testFailInCleanup(after)']
##teamcity[testStarted name='testSkipInInit(before)']
##teamcity[testFinished name='testSkipInInit(before)']
##teamcity[testIgnored name='testSkipInInit(skip)' message='Skip in init() |[Loc: ../counting/tst_counting.cpp(228)|]']
##teamcity[testStarted name='testSkipInInit(after)']
##teamcity[testFinished name='testSkipInInit(after)']
##teamcity[testStarted name='testSkipInCleanup(before)']
##teamcity[testFinished name='testSkipInCleanup(before)']
##teamcity[testIgnored name='testSkipInCleanup(skip)' message='Skip in cleanup() |[Loc: ../counting/tst_counting.cpp(236)|]']
##teamcity[testStarted name='testSkipInCleanup(after)']
##teamcity[testStdOut name='testSkipInCleanup(after)' out='QDEBUG: This test function should execute and then QSKIP in cleanup()']
##teamcity[testFinished name='testSkipInCleanup(after)']
##teamcity[testStarted name='cleanupTestCase()']
##teamcity[testFinished name='cleanupTestCase()']
##teamcity[testSuiteFinished name='tst_Counting']
