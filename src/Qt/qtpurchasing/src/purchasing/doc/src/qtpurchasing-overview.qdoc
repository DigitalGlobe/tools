/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
  \page qtpurchasing-index.html
  \title Qt Purchasing
  \brief A cross-platform library to facilitate in-app purchases in Qt and Qt Quick application

  Qt Purchasing is an add-on library that enables Qt applications to support
  in-app purchases. It is a cross-platform library that currently supports
  purchases made to the Mac App Store on OS X, App Store on iOS, and Google Play on Android.

  \section1 In-App Purchases

  In-app purchases are a way to monetize an application. These purchases are
  made from inside the application and can include anything from unlocking
  content to virtual items. The Qt Purchasing API is built on the system APIs
  for in-app purchases, which means the purchase process is more familiar to
  the user, and the information already stored by the platform (such as credit
  card information) can be employed to simplify the purchase process.

  \section1 Getting Started

  Qt Purchasing provides C++ classes and QML types to access information about
  in-app products registered in the external store on the current platform, as
  well as to request purchases for those products.

  \section2 The Store

  The in-app products must be registered in the target stores, before they
  could be queried or purchased in an application. Using same identifiers for
  the products in each of the stores is recommended, as it makes the code to
  query and purchase the products simpler.

  \list
  \li \l{Registering Products in Google Play}
  \li \l{Registering Products in App Store}
  \li \l{Registering Products in Windows Store}
  \endlist

  \section2 Writing the Code

  Depending on what fits best with the application, you can choose to use either C++ or
  QML to support in-app purchasing. If the majority of the user interface is written
  in QML, it is recommended that you use the QML types, which provide a simple and
  declarative point of access for the products in the store.

  \list
  \li \l{Getting Started with Qt Purchasing in QML}
  \li \l{Getting started with Qt Purchasing in C++}
  \endlist

  \section1 Examples

  Take a look at the \l{Qt Purchasing Examples} for a demonstration on
  how the APIs can be used in applications.

  \section1 API Reference

  \list
  \li \l{Qt Purchasing QML Types}
  \li \l{Qt Purchasing C++ Classes}
  \endlist

*/
